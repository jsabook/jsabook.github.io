<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Qier&#39;s blog</title>
  <icon>https://blog.wjzhe.ml/icon.png</icon>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://blog.wjzhe.ml/"/>
  <updated>2022-06-25T06:34:07.573Z</updated>
  <id>https://blog.wjzhe.ml/</id>
  
  <author>
    <name>qier</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>ElasticBeanUse</title>
    <link href="https://blog.wjzhe.ml/2022/06/25/ElasticBeanUse/"/>
    <id>https://blog.wjzhe.ml/2022/06/25/ElasticBeanUse/</id>
    <published>2022-06-25T06:34:07.573Z</published>
    <updated>2022-06-25T06:34:07.573Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>LandingZoneMigrate</title>
    <link href="https://blog.wjzhe.ml/2022/06/25/LandingZoneMigrate/"/>
    <id>https://blog.wjzhe.ml/2022/06/25/LandingZoneMigrate/</id>
    <published>2022-06-25T06:34:07.573Z</published>
    <updated>2022-06-25T06:34:07.573Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">title:  云端LandingZone基础环境迁移</span><br><span class="line">date: 2022-04-29</span><br><span class="line">updated: 2022-04-29</span><br><span class="line">slug:</span><br><span class="line">categories: AWS</span><br><span class="line">tag:</span><br><span class="line">  - LandingZone</span><br><span class="line">  - AWS</span><br><span class="line">copyright: true</span><br><span class="line">comment: true</span><br></pre></td></tr></table></figure><h1 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h1><p>在云端做迁移是非常简单的，迁移后的环境配置，按照待迁移的环境一点一点手动在Web Console进行配置过去即可。这种方式是可行的，但是是不符合规范要求而且也不符合敏捷迁移的。想象一个公有云的云端环境，这个公有云环境中，存在着十几个VPC与三十几个子网。成百上千条安全组规则。在这种环境下进行手动迁移显然是不合适的，因此我们需要设计出一套迁移方案来进行合理的敏捷迁移。</p><p><strong>场景模拟</strong></p><p>某公司在AWS的美西区域上有一套环境，这个环境中部署着web服务。由于审计要求。因此这个web服务的安全组管理的非常严格只允许特定的公网IP进行访问。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1.1.1.1 1.1.1.2 ... 1.1.1.50</span><br><span class="line">2.2.2.1 2.2.2.2 ... 2.2.2.50</span><br><span class="line">3.3.3.1 3.3.3.2 ... 3.3.3.50</span><br></pre></td></tr></table></figure><p><img src="img/terraformerlandingzone-2.drawio.svg" alt="terraformerlandingzone-2.drawio"></p><p><strong>迁移任务</strong></p><p>甲公司由于业务需求，需要将美西的环境迁移到另外一个账号的新加坡。需要进行迁移任务</p><p><img src="img/terraformerlandingzone.drawio.svg" alt="terraformerlandingzone.drawio"></p><h1 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h1><p><strong>terraform</strong></p><p>Terraform基于AWS Go SDK进行构建，采用HashiCorp配置语言（HCL）对资源进行编排，具体的说就是可以用代码来管理维护IT资源，比如针对AWS，我们可以用它创建、修改或删除 S3 Bucket、Lambda,、EC2、Kinesis、VPC等各种资源。并且在真正运行之前可以看到执行计划(即干运行-dryrun)。由于状态保存到文件中，因此能够离线方式查看资源情况（前提是不要在 Terraform 之外对资源进行修改）。Terraform 配置的状态除了能够保存在本地文件中，也可以保存到 Consul, S3等处。</p><p><strong>terraformer</strong></p><p>terraform可以根据预先编写的资源文件（TF文件）。通过资源文件生成对应的资源，那么在迁移环境中我们应该如何编写这些资源文件呢？通过手动的方式必然是可以创建出这些资源文件的。但是我们所需要的是自动根据云端环境创建出这些资源文件。而这件事情通过terraformer就可以很好的完成。terraformer可以基于现有基础架构（反向 Terraform）资源文件。</p><p><strong>安装教程</strong></p><p><a href="/2021/12/20/terraformerinstaller/"><strong>Terraformer安装与使用</strong></a></p><p>todo</p>]]></content>
    
    <summary type="html">
    
      
      
        
        
          &lt;figure class=&quot;highlight
        
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>UseOpenVPN</title>
    <link href="https://blog.wjzhe.ml/2022/06/25/UseOpenVPN/"/>
    <id>https://blog.wjzhe.ml/2022/06/25/UseOpenVPN/</id>
    <published>2022-06-25T06:34:07.573Z</published>
    <updated>2022-06-25T06:34:07.573Z</updated>
    
    <content type="html"><![CDATA[<h1 id="OpenVPN使用手册"><a href="#OpenVPN使用手册" class="headerlink" title="OpenVPN使用手册"></a>OpenVPN使用手册</h1><p>使用账号密码认证来配置，可以轻松实现多人登录使用VPN。OpenVPN所有的通信都基于一个单一的IP端口。OpenVPN 是一个开源的应用程序，它允许您通过公共互联网创建一个安全的专用网络。OpenVPN 实现一个虚拟专用网（VPN）来创建一个安全连接。OpenVPN 使用 OpenSSL 库提供加密，它提供了几种身份验证机制，如基于证书的、预共享密钥和用户名/密码身份验证。</p><h1 id="1-软件版本"><a href="#1-软件版本" class="headerlink" title="1. 软件版本"></a>1. 软件版本</h1><ul><li>Centos - 7.9</li><li>easy-rsa - 3.0.8</li><li>OpenVPN - 2.4.7</li></ul><h1 id="2-安装"><a href="#2-安装" class="headerlink" title="2. 安装"></a>2. 安装</h1><p>本文使用yum来安装openvpn，openvpn及其依赖的一些包在epel源上，首先先安装epel源。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#更新yum</span></span><br><span class="line">yum update -y</span><br><span class="line"><span class="comment">#安装epel源</span></span><br><span class="line">yum install -y epel-release</span><br><span class="line"><span class="comment">#安装依赖包</span></span><br><span class="line">yum install -y openssl lzo pam openssl-devel lzo-devel pam-devel</span><br><span class="line">yum install -y easy-rsa</span><br><span class="line"><span class="comment">#安装openvpn</span></span><br><span class="line">yum install -y openvpn</span><br></pre></td></tr></table></figure><h1 id="3-配置"><a href="#3-配置" class="headerlink" title="3. 配置"></a>3. 配置</h1><p>已经安装好了openvpn了，下面我们对openvpn进行配置。</p><h3 id="3-1-连接方式"><a href="#3-1-连接方式" class="headerlink" title="3.1 连接方式"></a>3.1 连接方式</h3><p>使用路由方式连接，确定私有子网：</p><p>Server 与 Client 的VPN通道子网，不要与已有环境的网络冲突即可。</p><p>默认：10.8.0.0/16</p><h3 id="3-2-配置证书密钥"><a href="#3-2-配置证书密钥" class="headerlink" title="3.2 配置证书密钥"></a>3.2 配置证书密钥</h3><p>我们通过yum方式安装的 easy-rsa 版本是3.0.8，直接从安装路径copy一份工具出来。这里用默认的 easy-rsa 3.0.8 来配置生成证书密钥。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#复制easy-rsa工具</span></span><br><span class="line">cp -rf /usr/share/easy-rsa/3.0.8 /etc/openvpn/server/easy-rsa</span><br><span class="line"><span class="built_in">cd</span> /etc/openvpn/server/easy-rsa</span><br><span class="line"><span class="comment">#生成证书密钥</span></span><br><span class="line">./easyrsa init-pki</span><br><span class="line">./easyrsa build-ca nopass</span><br><span class="line">./easyrsa build-server-full server nopass</span><br><span class="line"><span class="comment">#下面这步可能要几分钟</span></span><br><span class="line">./easyrsa gen-dh</span><br><span class="line">openvpn --genkey --secret server.key  <span class="comment">#TLS-auth密钥</span></span><br></pre></td></tr></table></figure><h3 id="3-3-配置Server端"><a href="#3-3-配置Server端" class="headerlink" title="3.3 配置Server端"></a>3.3 配置Server端</h3><h4 id="3-3-1-创建使用的目录"><a href="#3-3-1-创建使用的目录" class="headerlink" title="3.3.1 创建使用的目录"></a>3.3.1 创建使用的目录</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 日志存放目录</span></span><br><span class="line">mkdir -p /var/<span class="built_in">log</span>/openvpn/</span><br><span class="line"><span class="comment"># 用户管理目录</span></span><br><span class="line">mkdir -p /etc/openvpn/server/user</span><br><span class="line"><span class="comment"># 配置权限</span></span><br><span class="line">chown -R openvpn:openvpn /var/<span class="built_in">log</span>/openvpn</span><br></pre></td></tr></table></figure><h4 id="3-3-2-创建Server配置文件"><a href="#3-3-2-创建Server配置文件" class="headerlink" title="3.3.2 创建Server配置文件"></a>3.3.2 创建Server配置文件</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">#编辑server.conf文件</span><br><span class="line">yum install -y vim</span><br><span class="line">vim /etc/openvpn/server/server.conf</span><br></pre></td></tr></table></figure><p>服务器openvpn基本配置，写入以下内容</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"># 配置权限</span><br><span class="line">port 1194  #监听端口号</span><br><span class="line">proto tcp   #服务端用的协议，可以为tcp&#x2F;udp</span><br><span class="line">dev tun   #指定创建的通信隧道类型，可选tun或tap</span><br><span class="line">user openvpn</span><br><span class="line">group openvpn</span><br><span class="line"></span><br><span class="line">#配置证书信息</span><br><span class="line">ca &#x2F;etc&#x2F;openvpn&#x2F;server&#x2F;easy-rsa&#x2F;pki&#x2F;ca.crt #CA 根证书路径</span><br><span class="line">cert &#x2F;etc&#x2F;openvpn&#x2F;server&#x2F;easy-rsa&#x2F;ta.key  #open VPN 服务器证书路径</span><br><span class="line">key &#x2F;etc&#x2F;openvpn&#x2F;server&#x2F;easy-rsa&#x2F;server.key  #open VPN 服务器密钥路径</span><br><span class="line">dh &#x2F;etc&#x2F;openvpn&#x2F;server&#x2F;easy-rsa&#x2F;pki&#x2F;dh.pem #Diffie-Hellman 算法密钥文件路径</span><br><span class="line">tls-auth &#x2F;etc&#x2F;openvpn&#x2F;server&#x2F;easy-rsa&#x2F;ta.key 0 </span><br><span class="line">#  开启TLS-auth，使用防御攻击。服务器端的第二个参数值为0，客户端的为</span><br><span class="line"></span><br><span class="line">#配置账号密码的认证方式</span><br><span class="line">auth-user-pass-verify &#x2F;etc&#x2F;openvpn&#x2F;server&#x2F;user&#x2F;checkpsw.sh via-env</span><br><span class="line">script-security 3</span><br><span class="line">verify-client-cert none</span><br><span class="line">username-as-common-name</span><br><span class="line">client-to-client  #允许客户端与客户端相连接，默认情况下客户端只能与服务器相连接</span><br><span class="line">duplicate-cn</span><br><span class="line"></span><br><span class="line">#配置网络信息</span><br><span class="line">server 10.8.0.0 255.255.255.0</span><br><span class="line"># 该网段为 open VPN 虚拟网卡网段，不要和内网网段冲突即可。open VPN 默认为 10.8.0.0&#x2F;24</span><br><span class="line">push &quot;dhcp-option DNS 223.5.5.5&quot;</span><br><span class="line">push &quot;dhcp-option DNS 114.114.114.114&quot;</span><br><span class="line">push &quot;route 192.168.1.0 255.255.255.0&quot; #修改网段为内网网段</span><br><span class="line">push &quot;route 192.168.2.0 255.255.255.0&quot; #同上</span><br><span class="line"></span><br><span class="line">compress lzo  #使用lzo压缩的通讯,服务端和客户端都必须配置</span><br><span class="line">cipher AES-256-GCM  #加密认证算法</span><br><span class="line">keepalive 10 120  #每10秒ping一次，连接超时时间设为120秒</span><br><span class="line">persist-key  #重启时仍保留一些状态</span><br><span class="line">persist-tun</span><br><span class="line">verb 3  #指定日志文件的记录详细级别，可选0-9，等级越高日志内容越详细</span><br><span class="line"></span><br><span class="line">log &#x2F;var&#x2F;log&#x2F;openvpn&#x2F;server.log #指定 log 文件位置</span><br><span class="line">log-append &#x2F;var&#x2F;log&#x2F;openvpn&#x2F;server.log</span><br><span class="line">status &#x2F;var&#x2F;log&#x2F;openvpn&#x2F;status.log</span><br></pre></td></tr></table></figure><h4 id="3-3-3-创建用户密码文件"><a href="#3-3-3-创建用户密码文件" class="headerlink" title="3.3.3 创建用户密码文件"></a>3.3.3 创建用户密码文件</h4><p>格式是<code>用户 密码</code>以空格分割即可，这里将用户名设置为<strong>mytest</strong>，密码设置为<strong>mytestpass</strong>。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">'mytest mytestpass'</span> &gt;&gt; /etc/openvpn/server/user/psw-file</span><br><span class="line">chmod 600 /etc/openvpn/server/user/psw-file</span><br><span class="line">chown openvpn:openvpn /etc/openvpn/server/user/psw-file</span><br></pre></td></tr></table></figure><h4 id="3-3-4-创建密码检查脚本"><a href="#3-3-4-创建密码检查脚本" class="headerlink" title="3.3.4 创建密码检查脚本"></a>3.3.4 创建密码检查脚本</h4><p>新建shell文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim &#x2F;etc&#x2F;openvpn&#x2F;server&#x2F;user&#x2F;checkpsw.sh</span><br></pre></td></tr></table></figure><p>在shell文件中写入以下内容</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line">PASSFILE=<span class="string">"/etc/openvpn/server/user/psw-file"</span></span><br><span class="line">LOG_FILE=<span class="string">"/var/log/openvpn/password.log"</span></span><br><span class="line">TIME_STAMP=`date <span class="string">"+%Y-%m-%d %T"</span>`</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ ! -r <span class="string">"<span class="variable">$&#123;PASSFILE&#125;</span>"</span> ]; <span class="keyword">then</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">"<span class="variable">$&#123;TIME_STAMP&#125;</span>: Could not open password file \"<span class="variable">$&#123;PASSFILE&#125;</span>\" for reading."</span> &gt;&gt;  <span class="variable">$&#123;LOG_FILE&#125;</span></span><br><span class="line">  <span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">CORRECT_PASSWORD=`awk <span class="string">'!/^;/&amp;&amp;!/^#/&amp;&amp;$1=="'</span><span class="variable">$&#123;username&#125;</span><span class="string">'"&#123;print $2;exit&#125;'</span> <span class="variable">$&#123;PASSFILE&#125;</span>`</span><br><span class="line"><span class="keyword">if</span> [ <span class="string">"<span class="variable">$&#123;CORRECT_PASSWORD&#125;</span>"</span> = <span class="string">""</span> ]; <span class="keyword">then</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">"<span class="variable">$&#123;TIME_STAMP&#125;</span>: User does not exist: username=\"<span class="variable">$&#123;username&#125;</span>\", password=</span></span><br><span class="line"><span class="string">\"<span class="variable">$&#123;password&#125;</span>\"."</span> &gt;&gt; <span class="variable">$&#123;LOG_FILE&#125;</span></span><br><span class="line">  <span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="string">"<span class="variable">$&#123;password&#125;</span>"</span> = <span class="string">"<span class="variable">$&#123;CORRECT_PASSWORD&#125;</span>"</span> ]; <span class="keyword">then</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">"<span class="variable">$&#123;TIME_STAMP&#125;</span>: Successful authentication: username=\"<span class="variable">$&#123;username&#125;</span>\"."</span> &gt;&gt; <span class="variable">$&#123;LOG_FILE&#125;</span></span><br><span class="line">  <span class="built_in">exit</span> 0</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"<span class="variable">$&#123;TIME_STAMP&#125;</span>: Incorrect password: username=\"<span class="variable">$&#123;username&#125;</span>\", password=</span></span><br><span class="line"><span class="string">\"<span class="variable">$&#123;password&#125;</span>\"."</span> &gt;&gt; <span class="variable">$&#123;LOG_FILE&#125;</span></span><br><span class="line"><span class="built_in">exit</span> 1</span><br></pre></td></tr></table></figure><p>赋予可执行的权限</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">chmod 700 &#x2F;etc&#x2F;openvpn&#x2F;server&#x2F;user&#x2F;checkpsw.sh</span><br><span class="line">chown openvpn:openvpn &#x2F;etc&#x2F;openvpn&#x2F;server&#x2F;user&#x2F;checkpsw.sh</span><br></pre></td></tr></table></figure><h4 id="3-3-5-防火墙配置"><a href="#3-3-5-防火墙配置" class="headerlink" title="3.3.5 防火墙配置"></a>3.3.5 防火墙配置</h4><ul><li>防火墙</li></ul><p>禁用centos7默认的firewalld，使用iptables防火墙管理软件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl stop firewalld</span><br><span class="line">systemctl mask firewalld</span><br></pre></td></tr></table></figure><ul><li>禁用SELinux</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#临时生效</span></span><br><span class="line">setenforce 0</span><br><span class="line"></span><br><span class="line"><span class="comment">#永久关闭，配置后需要重启服务器生效</span></span><br><span class="line">sed -i <span class="string">'s/SELINUX=enforcing/SELINUX=disabled/g'</span> /etc/selinux/config</span><br></pre></td></tr></table></figure><ul><li><p>iptables</p><p>启用iptables</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">yum install iptables-services</span><br><span class="line">systemctl <span class="built_in">enable</span> iptables</span><br><span class="line">systemctl start iptables</span><br><span class="line">iptables -F   <span class="comment"># 清理所有防火墙规则</span></span><br></pre></td></tr></table></figure><p>添加防火墙规则</p><p>将openvpn的网络流量转发到内网（172.31.0.0）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 如下网段记得与server.conf 当中定义的网段保持一致</span><br><span class="line">iptables -t nat -A POSTROUTING -s 10.8.0.0&#x2F;24 -o eth0 -j MASQUERADE</span><br><span class="line">iptables -L -t nat</span><br><span class="line">iptables-save &gt; &#x2F;etc&#x2F;sysconfig&#x2F;iptables   # iptables 规则持久化保存</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>Linux服务器启用地址转发</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi &#x2F;etc.sysctl.conf</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#在最后一行添加以下内容</span></span><br><span class="line">net.ipv4.ip_forward = 1</span><br><span class="line"><span class="comment">#执行生效</span></span><br><span class="line">sysctl -p</span><br></pre></td></tr></table></figure></li></ul><p>===============================以下是firewalld配置可不看=========================</p><ul><li><p>firewalld</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">yum install -y firewall-<span class="function">cmd <span class="title">config</span>(<span class="params">替换为下一句</span>)</span></span><br><span class="line"><span class="function">yum install -y firewalld firewall-config</span></span><br><span class="line"><span class="function">firewall-cmd --permanent --<span class="keyword">add</span>-masquerade</span></span><br><span class="line"><span class="function">firewall-cmd --permanent --<span class="keyword">add</span>-service</span>=openvpn</span><br><span class="line"><span class="meta"># 或者添加自定义端口</span></span><br><span class="line">firewall-cmd --permanent  --<span class="keyword">add</span>-port=<span class="number">1194</span>/tcp</span><br><span class="line">firewall-cmd --permanent --direct --passthrough ipv4 -t nat -A POSTROUTING -s <span class="number">10.8</span><span class="number">.0</span><span class="number">.0</span>/<span class="number">24</span> -o eth0 -j MASQUERADE</span><br><span class="line">firewall-cmd --reload</span><br></pre></td></tr></table></figure></li></ul><p>注：</p><p>如果执行失败需确认防火墙是否开启。</p><p>1、查看防火墙状态：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl status firewalld</span><br></pre></td></tr></table></figure><p><img src="image-202112101642112212.png" alt="img"></p><p>inactive表示防火墙为关闭状态。</p><p>2、开启防火墙</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl start firewalld</span><br></pre></td></tr></table></figure><p><img src="1914529-20200402110749768-1286835379.png" alt="img"></p><p>启动后无任何提示，再次查看防火墙状态，可以看到变成active，成功启动。</p><p>3、关闭防火墙</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl stop firewalld</span><br></pre></td></tr></table></figure><p>===============================以上是firewalld配置可不看=========================</p><h4 id="3-3-6-启动服务"><a href="#3-3-6-启动服务" class="headerlink" title="3.3.6 启动服务"></a>3.3.6 启动服务</h4><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nohup openvpn /etc/openvpn/server/server.conf &gt;<span class="regexp">/dev/</span><span class="literal">null</span> <span class="number">2</span>&gt;&amp;<span class="number">1</span> &amp;</span><br></pre></td></tr></table></figure><p>启动之后，服务端有一个tun0的网卡，如下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">tun0: flags=4305&lt;UP,POINTOPOINT,RUNNING,NOARP,MULTICAST&gt;  mtu 1500</span><br><span class="line">        inet 10.8.0.1  netmask 255.255.255.255  destination 10.8.0.2</span><br><span class="line">        inet6 fe80::10da:ceb2:8a1c:4b4f  prefixlen 64  scopeid 0x20&lt;link&gt;</span><br><span class="line">        unspec 00-00-00-00-00-00-00-00-00-00-00-00-00-00-00-00  txqueuelen 100  (UNSPEC)</span><br><span class="line">        RX packets 0  bytes 0 (0.0 B)</span><br><span class="line">        RX errors 0  dropped 0  overruns 0  frame 0</span><br><span class="line">        TX packets 3  bytes 144 (144.0 B)</span><br><span class="line">        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0</span><br></pre></td></tr></table></figure><p>开机自启动部分待设定</p><h3 id="3-4-配置客户端"><a href="#3-4-配置客户端" class="headerlink" title="3.4 配置客户端"></a>3.4 配置客户端</h3><p>客户端我们同样使用2.4.7的版本，下载连接：</p><p><a href="https://www.techspot.com/downloads/5182-openvpn.html" target="_blank" rel="noopener">https://www.techspot.com/downloads/5182-openvpn.html</a></p><p>因为我们前面配置的是账号密码认证，所以我们只需要下载ca.crt、ta.key文件即可，从server上将生成的<code>ca.crt</code>、<code>ta.key</code>下载到客户端的安装目录 config下。</p><p><code>ca.crt</code>文件路径：/etc/openvpn/server/easy-rsa/pki/ca.crt</p><p><code>ta.key</code>文件路径：/etc/openvpn/server/easy-rsa/ta.key</p><p> 在config目录下新建一个文件 client.ovpn，文件内容如下：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">client</span></span><br><span class="line"><span class="selector-tag">proto</span> <span class="selector-tag">tcp</span></span><br><span class="line"><span class="selector-tag">dev</span> <span class="selector-tag">tun</span></span><br><span class="line"><span class="selector-tag">auth-user-pass</span></span><br><span class="line"><span class="selector-tag">remote</span> <span class="selector-tag">your</span><span class="selector-class">.domain</span><span class="selector-class">.com</span> 1194 </span><br><span class="line"><span class="selector-id">#1194</span>为虚机开放的端口号，与前文中的配置要统一</span><br><span class="line"><span class="selector-id">#your</span><span class="selector-class">.domain</span><span class="selector-class">.com</span>替换为<span class="selector-tag">Linux</span>虚机的域名地址或者是该虚机的公有地址</span><br><span class="line"><span class="selector-tag">ca</span> <span class="selector-tag">ca</span><span class="selector-class">.crt</span></span><br><span class="line"><span class="selector-tag">tls-auth</span> <span class="selector-tag">ta</span><span class="selector-class">.key</span> 1</span><br><span class="line"><span class="selector-tag">remote-cert-tls</span> <span class="selector-tag">server</span></span><br><span class="line"><span class="selector-tag">cipher</span> <span class="selector-tag">AES-256-GCM</span></span><br><span class="line"><span class="selector-tag">auth-nocache</span></span><br><span class="line"><span class="selector-tag">persist-tun</span></span><br><span class="line"><span class="selector-tag">persist-key</span></span><br><span class="line"><span class="selector-tag">compress</span> <span class="selector-tag">lzo</span></span><br><span class="line"><span class="selector-tag">verb</span> 3</span><br><span class="line"><span class="selector-tag">mute</span> 10</span><br></pre></td></tr></table></figure><p><img src="image-202202251425255491.png" alt="image-20220225142525549"></p><p>右键openvpn客户端图标的选项，需确认OpenVPN的设置如下：</p><p><img src="image-20220225143238564.png" alt="image-20220225143238563"></p><p>保存退出之后，我们启动openvpn的客户端，然后输入账号密码即可登录。</p><p><img src="image-202202251427318342.png" alt="image-20220225142731834"></p><p>telnet测试内网连通性</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">telnet 172.31.27.207 22</span><br><span class="line"><span class="comment">#telnet 内网ip 22端口</span></span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">init-pki complete; you may now create a CA or requests.</span><br><span class="line">Your newly created PKI dir is: &#x2F;etc&#x2F;openvpn&#x2F;server&#x2F;easy-rsa&#x2F;pki</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;etc&#x2F;openvpn&#x2F;server&#x2F;easy-rsa&#x2F;pki&#x2F;ca.crt</span><br><span class="line">123456</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">123456</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        
        
          &lt;h1 id=&quot;OpenVPN使用手册&quot;&gt;&lt;a
        
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>ocrmarche</title>
    <link href="https://blog.wjzhe.ml/2022/06/25/ocrmarche/"/>
    <id>https://blog.wjzhe.ml/2022/06/25/ocrmarche/</id>
    <published>2022-06-25T06:34:07.573Z</published>
    <updated>2022-06-25T06:34:07.573Z</updated>
    
    <content type="html"><![CDATA[<h1 id="创建ECR仓库"><a href="#创建ECR仓库" class="headerlink" title="创建ECR仓库"></a>创建ECR仓库</h1><p><img src="img/image-20220330202021887.png" alt="image-20220330202021887"></p><p>查看推送命令</p><p><img src="img/image-20220330202049665.png" alt="image-20220330202049665"></p><p>依次执行推送命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 629244530291.dkr.ecr.us-east-1.amazonaws.com</span><br></pre></td></tr></table></figure><p>登录成功</p><p><img src="img/image-20220330202822297.png" alt="image-20220330202822297"></p><p>打包镜像</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker build -t ocrhandler .</span><br></pre></td></tr></table></figure><p><img src="img/image-20220330202857788.png" alt="image-20220330202857788"></p><p>标记</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker tag ocrhandler:latest 629244530291.dkr.ecr.us-east-1.amazonaws.com&#x2F;ocrhandler:latest</span><br></pre></td></tr></table></figure><p><img src="img/image-20220330202917632.png" alt="image-20220330202917632"></p><p>推送完毕</p><p><img src="img/image-20220330203210389.png" alt="image-20220330203210389"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 629244530291.dkr.ecr.us-east-1.amazonaws.com &amp;&amp; docker build -t ocrhandler . &amp;&amp; docker tag ocrhandler:latest 629244530291.dkr.ecr.us-east-1.amazonaws.com&#x2F;ocrhandler:latest &amp;&amp; docker push 629244530291.dkr.ecr.us-east-1.amazonaws.com&#x2F;ocrhandler:latest</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        
        
          &lt;h1 id=&quot;创建ECR仓库&quot;&gt;&lt;a
        
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>数据同步服务实验</title>
    <link href="https://blog.wjzhe.ml/2022/05/24/DataSyncServer/"/>
    <id>https://blog.wjzhe.ml/2022/05/24/DataSyncServer/</id>
    <published>2022-05-24T16:00:00.000Z</published>
    <updated>2022-05-24T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="数据同步服务"><a href="#数据同步服务" class="headerlink" title="数据同步服务"></a>数据同步服务</h1><p>AWS DataSync 是一项安全的在线服务，可自动化并加速本地存储和 AWS 存储服务之间的数据移动。DataSync 可以在网络文件系统（NFS）共享、服务器消息块（SMB）共享、Hadoop Distributed File System（HDFS）、自行管理的对象存储、AWS Snowcone、Amazon Simple Storage Service（Amazon S3）存储桶、Amazon Elastic File System（Amazon EFS）文件系统、Amazon FSx for Windows File Server 文件系统、Amazon FSx for Lustre 文件系统与 Amazon FSz for OpenZFS 文件系统之间复制数据。</p><p>AWS DataSync支持三种方式：</p><ul><li>在本地和AWS之间传输数据</li><li>在AWS服务之间传输数据</li><li>在AWS和其他公有云服务之间传输数据</li></ul><p>DataSync服务同步的主要是文件对象，以文件为基本服务。下面进行三种方式的实验.</p><p>Aws DataSync可以实现下列功能：</p><ul><li>迁移数据：将文件和对象数据快速移动到 AWS。通过动态加密和端到端数据验证，您的数据是安全的。</li><li>保护数据：将数据安全地复制到成本高效的 AWS 存储服务，包括任何 Amazon S3 存储类。</li><li>将原始数据归档：通过将数据直接移动到 Amazon S3 Glacier 归档存储类来降低本地存储成本。</li><li>管理混合数据工作流：在本地系统和 AWS 之间无缝移动数据，以加速关键混合工作流。</li></ul><p>AWS DataSync原理：</p><p>通过task任务将指定位置的数据传输到AWS云端的存储位置（可以是S3、EFS或FSx）</p><h1 id="在本地和AWS之间传输数据"><a href="#在本地和AWS之间传输数据" class="headerlink" title="在本地和AWS之间传输数据"></a>在本地和AWS之间传输数据</h1><p>架构</p><p><span><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/case.53c1297e16befdbb5fde775c586d47f5770221bb.png" alt="case.53c1297e16befdbb5fde775c586d47f5770221bb"> </span></p><h2 id="选择服务"><a href="#选择服务" class="headerlink" title="选择服务"></a>选择服务</h2><p><span><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20220625101754589.png" alt="image-20220625101754589"></span></p><h2 id="使用服务"><a href="#使用服务" class="headerlink" title="使用服务"></a>使用服务</h2><p>选择本地到AWS云端,因此需要在本地先创建一个代理。</p><p><span><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20220625101913256.png" alt="image-20220625101913256"></span></p><h2 id="创建位置"><a href="#创建位置" class="headerlink" title="创建位置"></a>创建位置</h2><p>位置是AWS DataSync服务中存储点的位置，既可以是源位置（原始数据的存储位置），也可以是目标位置。一个任务需要设定两个位置，一个是存储位置一个是目标位置。AWS DataSync提供下列位置：</p><ul><li><a href="https://docs.aws.amazon.com/zh_cn/datasync/latest/userguide/create-nfs-location.html" target="_blank" rel="noopener">为 NFS 创建位置</a></li><li><a href="https://docs.aws.amazon.com/zh_cn/datasync/latest/userguide/create-smb-location.html" target="_blank" rel="noopener">为 SMB 创建位置</a></li><li><a href="https://docs.aws.amazon.com/zh_cn/datasync/latest/userguide/create-hdfs-location.html" target="_blank" rel="noopener">为 HDFS 创建位置</a></li><li><a href="https://docs.aws.amazon.com/zh_cn/datasync/latest/userguide/create-object-location.html" target="_blank" rel="noopener">创建对象存储的位置</a></li><li><a href="https://docs.aws.amazon.com/zh_cn/datasync/latest/userguide/create-efs-location.html" target="_blank" rel="noopener">创建 Amazon EFS 的位置</a></li><li><a href="https://docs.aws.amazon.com/zh_cn/datasync/latest/userguide/create-fsx-location.html" target="_blank" rel="noopener">创建 FSx for Windows File Server 的位置</a></li><li><a href="https://docs.aws.amazon.com/zh_cn/datasync/latest/userguide/create-lustre-location.html" target="_blank" rel="noopener">为 Lustre 创建 FSx 的位置</a></li><li><a href="https://docs.aws.amazon.com/zh_cn/datasync/latest/userguide/create-openzfs-location.html" target="_blank" rel="noopener">为 OpenZFS 创建 FSx 的位置</a></li><li><a href="https://docs.aws.amazon.com/zh_cn/datasync/latest/userguide/create-s3-location.html" target="_blank" rel="noopener">为 Amazon S3 创建位置</a></li></ul><p>在这次实验中，主要是测试两个同步任务：</p><ul><li>从本地的SMB服务位置同步数据到S3</li><li>同S3同步数据到本地</li></ul><h2 id="创建本地代理"><a href="#创建本地代理" class="headerlink" title="创建本地代理"></a>创建本地代理</h2><p>这里，选择Vmware Workstation 安装本地代理，下载镜像</p><p><span><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20220625102000302.png" alt="image-20220625102000302"></span></p><p>下载压缩包之后，对压缩包进行解压获取一个OVA文件。</p><p><span><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20220625102243241.png" alt="image-20220625102243241"></span></p><p>将这个OVA文件导入到Vmware workstation中</p><p><span><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20220625102703762.png" alt="image-20220625102703762"></p></span><p><span><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20220625104254482.png" alt="image-20220625104254482"></span></p><p>开启虚拟机，进行下一步操作，登录，用户名：admin，密码：password。</p><p><span><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20220625104606370.png" alt="image-20220625104606370"></span></p><p>获取密钥</p><p>获取密钥，打开powershell，将下列代码输入到终端，并运行函数</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">function Get-ActivationKey &#123;</span><br><span class="line">  [CmdletBinding()]</span><br><span class="line">  Param(</span><br><span class="line">    [parameter(Mandatory&#x3D;$true)][string]$IpAddress, </span><br><span class="line">    [parameter(Mandatory&#x3D;$true)][string]$ActivationRegion</span><br><span class="line">  )</span><br><span class="line">  PROCESS &#123;</span><br><span class="line">    $request &#x3D; Invoke-WebRequest -UseBasicParsing -Uri &quot;http:&#x2F;&#x2F;$IpAddress&#x2F;?activationRegion&#x3D;$ActivationRegion&quot; -MaximumRedirection 0 -ErrorAction SilentlyContinue</span><br><span class="line">    if ($request) &#123;</span><br><span class="line">      $activationKeyParam &#x3D; $request.Headers.Location | Select-String -Pattern &quot;activationKey&#x3D;([A-Z0-9-]+)&quot;</span><br><span class="line">      $activationKeyParam.Matches.Value.Split(&quot;&#x3D;&quot;)[1]</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>获取到密钥</p><p><span><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20220625103347288.png" alt="image-20220625103347288"></span></p><p>将激活密钥填入创建网关的第二步</p><p><span><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20220625103441121.png" alt="image-20220625103441121"></span></p><p>代理创建成功</p><p><span><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20220625104941453.png" alt="image-20220625104941453"></span></p><p>从这一步本地代理就创建好了，后面就开始使用AWS DataSync这个服务</p><p><span><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20220625104915071.png" alt="image-20220625104915071"></span></p><h2 id="创建同步任务——本地SMB到S3"><a href="#创建同步任务——本地SMB到S3" class="headerlink" title="创建同步任务——本地SMB到S3"></a>创建同步任务——本地SMB到S3</h2><p>本地有一个SMB服务，这个服务的信息</p><ul><li>用户名：shared </li><li>密码：123456</li><li>文件目录：/shared/source</li></ul><span><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20220625112243261.png" alt="image-20220625112243261"></span></p><p>值得注意的是SMB服务需要与AWS DataSync代理能够通信。</p><h3 id="选择任务"><a href="#选择任务" class="headerlink" title="选择任务"></a>选择任务</h3><p>创建同步任务</p><p><span><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20220625115826664.png" alt="image-20220625115826664"></span></p><h3 id="选择源位置"><a href="#选择源位置" class="headerlink" title="选择源位置"></a>选择源位置</h3><p>这里的源位置就是你需要同步的SMB服务。配置源位置</p><p><span><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20220625140127073.png" alt="image-20220625140127073"></span></p><p>用户设置</p><p><span><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20220625120131532.png" alt="image-20220625120131532"></span></p><h3 id="选择目标位置"><a href="#选择目标位置" class="headerlink" title="选择目标位置"></a>选择目标位置</h3><p>这里选择s3作为目标端</p><p><span><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20220625141649389.png" alt="image-20220625141649389"></span></p><h3 id="配置设置"><a href="#配置设置" class="headerlink" title="配置设置"></a>配置设置</h3><p>设置任务名称</p><span><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20220625140405331.png" alt="image-20220625140405331"></span></p><p>数据传输配置</p><p><span><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20220625120553653.png" alt="image-20220625120553653"></span></p><p>设置任务同步计划，这里设定每隔3分钟执行一次同步任务</p><p><span><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20220625122038339.png" alt="image-20220625122038339"></span></p><p>日志组设置</p><p><span><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20220625120831471.png" alt="image-20220625120831471"></span></p><p>创建同步任务成功</p><p><span><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20220625121102821.png" alt="image-20220625121102821"></span></p><h3 id="使用服务-1"><a href="#使用服务-1" class="headerlink" title="使用服务"></a>使用服务</h3><p>我们在之前的哪个smb服务文件夹中传入一些文件</p><p><span><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20220625122222179.png" alt="image-20220625122222179"></span></p><p>等待同步的时间</p><p><span><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20220625122245431.png" alt="image-20220625122245431"></span></p><p>到同步时间之后，就会有一个最新执行</p><p><span><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20220625122704981.png" alt="image-20220625122704981"></span></p><p>等待执行完毕</p><p><span><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20220625122948087.png" alt="image-20220625122948087"></span></p><p>查看S3存储桶，发现已经有了</p><p><span><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20220625123040642.png" alt="image-20220625123040642"></span></p><h2 id="创建同步任务——S3到本地SMB"><a href="#创建同步任务——S3到本地SMB" class="headerlink" title="创建同步任务——S3到本地SMB"></a>创建同步任务——S3到本地SMB</h2><p>创建位置</p><p>这里的同步位置是从S3到本地的SMB服务，因此需要创建两个位置：</p><ul><li>本地SMB位置（目标位置）</li><li>S3存储痛位置（原始位置）</li></ul><h3 id="本地目标SMB位置创建"><a href="#本地目标SMB位置创建" class="headerlink" title="本地目标SMB位置创建"></a>本地目标SMB位置创建</h3><p><span><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20220625140521128.png" alt="image-20220625140521128"></span></p><p>创建本地位置</p><p><span><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20220625140905505.png" alt="image-20220625140905505"></span></p><p>创建成功</p><p><span><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20220625140939234.png" alt="image-20220625140939234"></span></p><h3 id="创建源S3位置"><a href="#创建源S3位置" class="headerlink" title="创建源S3位置"></a>创建源S3位置</h3><p><span><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20220625141041920.png" alt="image-20220625141041920"></span></p><h3 id="位置查看"><a href="#位置查看" class="headerlink" title="位置查看"></a>位置查看</h3><p>通过上述两个步骤。已经将目标和源位置都创建完毕</p><p><span><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20220625141949084.png" alt="image-20220625141949084"></span></p><h3 id="创建任务"><a href="#创建任务" class="headerlink" title="创建任务"></a>创建任务</h3><p><span><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20220625142226777.png" alt="image-20220625142226777"></span></p><h3 id="测试同步任务"><a href="#测试同步任务" class="headerlink" title="测试同步任务"></a>测试同步任务</h3><p>向datasyncsrc20220625这个从存储桶传输文件</p><p><span><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20220625142505862.png" alt="image-20220625142505862"></span></p><p>等待同步任务完成</p><p><span><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20220625143234902.png" alt="image-20220625143234902"></span></p><p>查看本地目标位置已经获取到数据了</p><p><span><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20220625143309516.png" alt="image-20220625143309516"></span></p><h1 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h1><p>从这个实验可以得到，其实AWS DataSync使用方式就是创建任务，而一个任务需要有以下三个要素：</p><ul><li><p>存储源位置</p><ul><li>存储源位置如果直接支持公网访问，例如其他公有云的SMB服务，或者FSx这种公网可以访问的服务，那么就可以直接选择这个源位置；</li><li>存储位置不支持公网直接访问，例如客户本地内网地址的SMB服务，NFS服务。那么我们就需要在这个本地存储服务可以访问的地方创建一个本地代理；在创建任务的时候直接选择这个代理即可。</li></ul></li><li><p>目标位置</p><ul><li>目标位置如果直接支持公网访问，例如其他公有云的SMB服务，或者FSx这种公网可以访问的服务，那么就可以直接选择这个目标位置；</li><li>目标位置不支持公网直接访问，例如客户本地内网地址的SMB服务，NFS服务。那么我们就需要在这个本地存储服务可以访问的地方创建一个本地代理；在创建任务的时候直接选择这个代理即可。</li></ul></li><li><p>同步任务时间</p><ul><li>AWS DataSync要求任务同步时间间隔需要1小时</li></ul></li></ul><p>从这个实验可以看出AWS DataSync支持以下同步：</p><ul><li>AWS存储服务 =&gt; 本地存储服务</li><li>AWS存储服务 =&gt; 其他公有云服务</li><li>本地存储服务 =&gt; AWS存储服务</li><li>其他公有云服务=&gt; AWS存储服务</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        
        
          &lt;h1 id=&quot;数据同步服务&quot;&gt;&lt;a
        
      
    
    </summary>
    
    
      <category term="存储服务" scheme="https://blog.wjzhe.ml/categories/%E5%AD%98%E5%82%A8%E6%9C%8D%E5%8A%A1/"/>
    
    
      <category term="AWS" scheme="https://blog.wjzhe.ml/tags/AWS/"/>
    
      <category term="Data" scheme="https://blog.wjzhe.ml/tags/Data/"/>
    
      <category term="sync" scheme="https://blog.wjzhe.ml/tags/sync/"/>
    
  </entry>
  
  <entry>
    <title>文件网关存储实验</title>
    <link href="https://blog.wjzhe.ml/2022/05/23/StorageGateway/"/>
    <id>https://blog.wjzhe.ml/2022/05/23/StorageGateway/</id>
    <published>2022-05-23T16:00:00.000Z</published>
    <updated>2022-05-23T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="存储网关服务"><a href="#存储网关服务" class="headerlink" title="存储网关服务"></a>存储网关服务</h1><blockquote><p>AWS Storage Gateway 是一组混合云服务，提供几乎不受限制的云存储的本地访问权限。</p></blockquote><p>Storage Gateway 可以作为虚拟机（VMware ESXi、Microsoft Hyper-V、Linux KVM）直接部署在您的本地环境中，在 AWS 中作为 Amazon EC2 实例或作为预配置的独立<a href="https://aws.amazon.com/storagegateway/hardware-appliance/" target="_blank" rel="noopener">硬件设备</a>部署。此外，Storage Gateway 不需要特殊的网络连接或额外的硬件，同时提供以下功能：</p><ul><li>对外提供 NFS、SMB、iSCSI 和 iSCSI VTL 等标准存储协议，因此现有应用程序无需更改即可使用 AWS 云存储。</li><li>在本地和 AWS 云之间优化和安全的数据传输。即通过加密的方式传输数据流量。</li></ul><p>存储网关的三个常用功能：</p><ul><li>将备份移动到云；</li><li>呈现由云存储支持的本地文件共享；</li><li>为本地应用程序提供对存储在云中的数据的低延迟访问；</li></ul><p>存储网关背后的存储源，支持以下存储源（在此次实验中，验证s3文件与FSx文件网关）</p><ul><li>Amazon S3 文件网关</li><li>Amazon FSx 文件网关</li><li>磁带网关</li><li>卷网关。</li></ul><p>存储网关架构图</p><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/product-page-diagram_AWS-Storage-Gateway_HIW%402x.6df96d96cdbaa61ed3ce935262431aabcfb9e52d.png" alt=""></p><h1 id="实验步骤"><a href="#实验步骤" class="headerlink" title="实验步骤"></a>实验步骤</h1><h2 id="s3文件网关服务"><a href="#s3文件网关服务" class="headerlink" title="s3文件网关服务"></a>s3文件网关服务</h2><h3 id="创建s3文件网关"><a href="#创建s3文件网关" class="headerlink" title="创建s3文件网关"></a>创建s3文件网关</h3><p>在输入框输入storage gateway</p><p><span><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20220624215359264.png" alt="image-20220624215359264"></span></p><p>选择创建存储网关</p><p><span><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20220624215548706.png" alt="image-20220624215548706"></span></p><p>写入文件网关名称，同时选择s3 file gateway这个文件网关服务。</p><p><span><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20220624215809675.png" alt="image-20220624215809675"></span></p><h4 id="本地网关模式"><a href="#本地网关模式" class="headerlink" title="本地网关模式"></a>本地网关模式</h4><p>下载本地网关，这里我们选择<code>VMware ESXi</code>，我们将下载下来的ovf模板导入进入<code>vmware Workstation Pro</code>。</p><p><span><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20220624220017448.png" alt="image-20220624220017448"></span></p><p>等待ovf模板下载完成，将模板导入到vmware中。</p><p><span><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20220624220303767.png" alt="image-20220624220303767"></span></p><p>待导入成功，完成以上步骤再进行下一步。（导入过程在附录：aws-storage-gateway.ova导入vmware workstation 中）</p><p><span><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20220624222052374.png" alt="image-20220624222052374"></span></p><p>进行下一步操作，登录到aws-storage-gateway中，用户名：admin，密码：password。</p><p><span><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20220624225110830.png" alt="image-20220624225110830"></span></p><p>可以看到ip是192.168.10.125</p><p>获取密钥，打开powershell，将下列代码输入到终端，并运行函数</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">function Get-ActivationKey &#123;</span><br><span class="line">  [CmdletBinding()]</span><br><span class="line">  Param(</span><br><span class="line">    [parameter(Mandatory&#x3D;$true)][string]$IpAddress, </span><br><span class="line">    [parameter(Mandatory&#x3D;$true)][string]$ActivationRegion</span><br><span class="line">  )</span><br><span class="line">  PROCESS &#123;</span><br><span class="line">    $request &#x3D; Invoke-WebRequest -UseBasicParsing -Uri &quot;http:&#x2F;&#x2F;$IpAddress&#x2F;?activationRegion&#x3D;$ActivationRegion&quot; -MaximumRedirection 0 -ErrorAction SilentlyContinue</span><br><span class="line">    if ($request) &#123;</span><br><span class="line">      $activationKeyParam &#x3D; $request.Headers.Location | Select-String -Pattern &quot;activationKey&#x3D;([A-Z0-9-]+)&quot;</span><br><span class="line">      $activationKeyParam.Matches.Value.Split(&quot;&#x3D;&quot;)[1]</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>获取到密钥</p><p><span><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20220624225404843.png" alt="image-20220624225404843"></span></p><p>将激活密钥填入创建网关的第二步</p><p><span><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20220624225501792.png" alt="image-20220624225501792"></span></p><p>直接下一步</p><p><span><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20220624225530345.png" alt="image-20220624225530345"></span></p><p>显示已经成功激活网关</p><p><span><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20220624225607949.png" alt="image-20220624225607949"></span></p><p>等待几分钟，待配置缓存存储完成之后进行下一步。选择创建新的日志组</p><p><span><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20220624231342528.png" alt="image-20220624231342528"></span></p><p>todo</p><h4 id="EC2模式"><a href="#EC2模式" class="headerlink" title="EC2模式"></a>EC2模式</h4><p>选择ec2平台</p><p><span><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20220624233126683.png" alt="image-20220624233126683"></span></p><p><strong>创建EC2</strong></p><p>启动实例，按照所给的要求。要求有如下内容：</p><ul><li>规格：选择m5.xlarge规格。设置150GB的存储盘；</li><li>网络：具有公网IP，同时公网可以直接访问IP；</li><li>安全组：这里做测试，全开状态</li><li>磁盘： 150GiB</li></ul><p>选择型号</p><p><span><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20220624233546188.png" alt="image-20220624233546188"></span></p><p>设置公网IP</p><p><span><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20220624233609474.png" alt="image-20220624233609474"></span></p><p>选择存储</p><p><span><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20220624233631831.png" alt="image-20220624233631831"></span></p><p><span>![image-20220624233656027](<a href="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20220624233656027.png" target="_blank" rel="noopener">https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20220624233656027.png</a></span></p><p><img src="img/image-20220624233726112.png" alt="image-20220624233726112"></p><p>勾选上启动ec2</p><p><span><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20220624233856473.png" alt="image-20220624233856473"></span></p><p>将ec2的公共IP填入创建网关的的IP地址的位置</p><p><span><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20220624233915218.png" alt="image-20220624233915218"></span></p><p>下一步</p><p><span><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20220624234113659.png" alt="image-20220624234113659"></span></p><p>激活成功，等待</p><p><span><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20220624234133757.png" alt="image-20220624234133757"></span></p><p>配置缓存盘</p><p><span><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20220624234237200.png" alt="image-20220624234237200"></span></p><p>配置日志组</p><p><span><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20220624234247405.png" alt="image-20220624234247405"></span></p><p>直接下一步，创建成功</p><p><span><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20220624234258153.png" alt="image-20220624234258153"></span></p><h3 id="使用s3文件网关服务"><a href="#使用s3文件网关服务" class="headerlink" title="使用s3文件网关服务"></a>使用s3文件网关服务</h3><p>创建同区域的存储桶</p><p><span><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20220624234608939.png" alt="image-20220624234608939"></span></p><h4 id="使用smb协议作为文件共享"><a href="#使用smb协议作为文件共享" class="headerlink" title="使用smb协议作为文件共享"></a>使用smb协议作为文件共享</h4><p>创建文件共享服务</p><p><span><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20220624234711881.png" alt="image-20220624234711881"></span></p><p>选择SMB协议</p><p><span><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20220624234738308.png" alt="image-20220624234738308"></span></p><p>选择存储对象</p><p><span><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20220624234755282.png" alt="image-20220624234755282"></span></p><p>设置访问密码</p><p>password@gateway</p><p><span><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20220624234836935.png" alt="image-20220624234836935"></span></p><p>smb共享设置</p><p><span><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20220624234852476.png" alt="image-20220624234852476"></span></p><p>创建成功，开始使用，最下面是使用命令</p><p><span><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20220625000033090.png" alt="image-20220625000033090"></span></p><p>打开具有管理员权限的cmd</p><p>输入命令 todo</p><p><img src="img/image-20220625000137283.png" alt="image-20220625000137283"></p><p>使用nfs</p><p><img src="img/image-20220624235903447.png" alt="image-20220624235903447"></p><p><img src="img/image-20220624235911207.png" alt="image-20220624235911207"></p><p><img src="img/image-20220624235920579.png" alt="image-20220624235920579"></p><p>创建 成功，最下面有使用命令</p><p><img src="img/image-20220625000420812.png" alt="image-20220625000420812"></p><p>使用linux进行挂载（linux需要安装客户端）<a href="https://blog.csdn.net/leenhem/article/details/122228719" target="_blank" rel="noopener">https://blog.csdn.net/leenhem/article/details/122228719</a></p><p><img src="img/image-20220625000751979.png" alt="image-20220625000751979"></p><h1 id="附录"><a href="#附录" class="headerlink" title="附录"></a>附录</h1><h2 id="aws-storage-gateway-ova导入vmware"><a href="#aws-storage-gateway-ova导入vmware" class="headerlink" title="aws-storage-gateway.ova导入vmware"></a>aws-storage-gateway.ova导入vmware</h2><p>导入ova镜像</p><p><span><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20220624221250430.png" alt="image-20220624221250430"></span></p><p>选中，之前下载的镜像</p><p><span><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20220624221500694.png" alt="image-20220624221500694" style="zoom: 80%;" /></span></p><p>选择位置，导入</p><p><span><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20220624221621646.png" alt="image-20220624221621646"></span></p><p>等待导入结束</p><p><span><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20220624221707489.png" alt="image-20220624221707489"></span></p><p>导入结束，之后就可以看到下图了。</p><p><span><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20220624221806615.png" alt="image-20220624221806615"></span></p><p>配置一个数据盘,按如下图创建一个数据盘（无需对数据盘进行安装文件系统，只需要创建数据盘即可）</p><p><span><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20220625094346394.png" alt="image-20220625094346394"></span></p><p><span><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20220625094656841.png" alt="image-20220625094656841"></span></p><p>开机，显示已经成功启动</p><p><span><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20220624221900037.png" alt="image-20220624221900037"></span></p>]]></content>
    
    <summary type="html">
    
      
      
        
        
          &lt;h1 id=&quot;存储网关服务&quot;&gt;&lt;a
        
      
    
    </summary>
    
    
      <category term="存储服务" scheme="https://blog.wjzhe.ml/categories/%E5%AD%98%E5%82%A8%E6%9C%8D%E5%8A%A1/"/>
    
    
      <category term="AWS" scheme="https://blog.wjzhe.ml/tags/AWS/"/>
    
      <category term="文件" scheme="https://blog.wjzhe.ml/tags/%E6%96%87%E4%BB%B6/"/>
    
      <category term="网关" scheme="https://blog.wjzhe.ml/tags/%E7%BD%91%E5%85%B3/"/>
    
  </entry>
  
  <entry>
    <title>编程语法</title>
    <link href="https://blog.wjzhe.ml/2022/05/18/ProgramInc/"/>
    <id>https://blog.wjzhe.ml/2022/05/18/ProgramInc/</id>
    <published>2022-05-18T16:00:00.000Z</published>
    <updated>2022-05-18T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>编程语言的共性，编程语言都有共性，这篇文章来介绍一下一门编程语言都有哪些共性。</p><h1 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h1><h2 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h2><p>编程语言的都有数据类型，即一个变量可以赋值的数据类型。常见如下：</p><ul><li>数字类型；</li><li>字符串类型；</li><li>布尔类型；</li><li>特殊类型；</li></ul><h2 id="操作"><a href="#操作" class="headerlink" title="操作"></a>操作</h2><p>对数据类型的操作就是数据类型之间的相互转换。常见的转换有如下方式：</p><ul><li>数字类型转字符串；</li><li>字符串转数字类型；</li></ul><h1 id="数据结构"><a href="#数据结构" class="headerlink" title="数据结构"></a>数据结构</h1><h2 id="分类-1"><a href="#分类-1" class="headerlink" title="分类"></a>分类</h2><p>数据结构是多个数据组成的一个结构，常见的数据结构如下：</p><ul><li>数组；</li><li>字典；</li><li>集合；</li></ul><p>不同语言叫法不同，但是整体是一致的；</p><h2 id="数据结构操作"><a href="#数据结构操作" class="headerlink" title="数据结构操作"></a>数据结构操作</h2><p>需要对数据类型操作进行整合，常见的操作有：</p><h3 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h3><p>对数组通常有如下操作。数组的增删改查。</p><p><strong>创建数组</strong></p><p>数组如何创建，数组创建有几种方式？</p><p><strong>增加数组元素</strong></p><p>数组如何增加元素</p><p><strong>删除数组元素</strong></p><p>数组如何删除元素</p><ul><li>数组删除全部元素</li><li>数组删除多个元素</li><li>数组删除一个元素</li></ul><p><strong>改变数组元素</strong></p><ul><li>数组改变一个元素</li></ul><p><strong>查询数组元素</strong></p><p>数组查询</p><ul><li>查询数组中的一个元素</li><li>查询数组中的多个元素</li></ul><h2 id="字典的操作"><a href="#字典的操作" class="headerlink" title="字典的操作"></a>字典的操作</h2><p>字典常见的增删改查，与数组一致。</p><h1 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h1><p><strong>运算符</strong>是指定要在表达式中执行的计算类型的标志或符号。 有数学、比较、逻辑和引用<strong>运算符</strong>。 </p><p>常见的运算符有如下三类。</p><p><strong>算数运算符</strong></p><p>常见的算数运算符如下所示</p><table><thead><tr><th>符号</th><th>含义</th></tr></thead><tbody><tr><td>+</td><td>求和</td></tr><tr><td>-</td><td>求差</td></tr><tr><td>*</td><td>求积</td></tr><tr><td>、</td><td>求商</td></tr><tr><td>%</td><td>取模（取余数，开发中经常作为某个数字是否能够被整除）</td></tr></tbody></table><p>除了常见的运算符，还有：</p><p>一元运算符：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">let</span> num = 1;</span><br><span class="line">++num;</span><br><span class="line">num++;</span><br></pre></td></tr></table></figure><p><strong>比较运算符</strong></p><p>比较运算符有如下：</p><table><thead><tr><th>符号</th><th>含义</th></tr></thead><tbody><tr><td><code>&gt;</code></td><td>大于号</td></tr><tr><td><code>&lt;</code></td><td>小于号</td></tr><tr><td><code>&gt;=</code></td><td>大于等于</td></tr><tr><td><code>&lt;=</code></td><td>小于等于</td></tr><tr><td><code>==</code></td><td>等于</td></tr></tbody></table><p><strong>逻辑运算符</strong></p><p>逻辑运算符，有如下所示。</p><table><thead><tr><th>符号</th><th>含义</th><th>日常</th><th>特点</th></tr></thead><tbody><tr><td>&amp;&amp;</td><td>逻辑与</td><td>并且</td><td>两边为true，结果为true</td></tr><tr><td>||</td><td>逻辑或</td><td>或者</td><td>两边有一个为true，结果为true</td></tr><tr><td>！</td><td>逻辑非</td><td>取反</td><td>true变false，false变true</td></tr></tbody></table><p>也有可能是</p><table><thead><tr><th>符号</th><th>含义</th><th>日常</th><th>特点</th></tr></thead><tbody><tr><td>and</td><td>逻辑与</td><td>并且</td><td>两边为true，结果为true</td></tr><tr><td>or</td><td>逻辑或</td><td>或者</td><td>两边有一个为true，结果为true</td></tr><tr><td>not</td><td>逻辑非</td><td>取反</td><td>true变false，false变true</td></tr></tbody></table><h1 id="基础语句"><a href="#基础语句" class="headerlink" title="基础语句"></a>基础语句</h1><h2 id="顺序语句"><a href="#顺序语句" class="headerlink" title="顺序语句"></a>顺序语句</h2><p>todo</p><h2 id="循环语句"><a href="#循环语句" class="headerlink" title="循环语句"></a>循环语句</h2><p>todo</p><h2 id="判断语句"><a href="#判断语句" class="headerlink" title="判断语句"></a>判断语句</h2><p>todo</p><h1 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h1><h2 id="变量类型"><a href="#变量类型" class="headerlink" title="变量类型"></a>变量类型</h2><h2 id="变量作用域"><a href="#变量作用域" class="headerlink" title="变量作用域"></a>变量作用域</h2><p><strong>全局变量</strong><br>整个程序都能够访问的变量</p><p><strong>局部变量</strong></p><p>函数内部能够访问的变量</p><p><strong>块级变量</strong></p><p>分支判断语句中能够访问的变量</p><h1 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h1><h2 id="如何创建函数"><a href="#如何创建函数" class="headerlink" title="如何创建函数"></a>如何创建函数</h2><h2 id="函数分类"><a href="#函数分类" class="headerlink" title="函数分类"></a>函数分类</h2><p><strong>常见的函数分类</strong></p><ul><li>一般函数</li><li>匿名函数</li></ul><h2 id="如何访问函数"><a href="#如何访问函数" class="headerlink" title="如何访问函数"></a>如何访问函数</h2><h2 id="函数如何传递参数"><a href="#函数如何传递参数" class="headerlink" title="函数如何传递参数"></a>函数如何传递参数</h2><h2 id="函数的返回值"><a href="#函数的返回值" class="headerlink" title="函数的返回值"></a>函数的返回值</h2><h1 id="类"><a href="#类" class="headerlink" title="类"></a>类</h1><p>todo</p>]]></content>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;编程语言的共性，编程语言都有共性，这篇文章来介绍一下一门编
        
      
    
    </summary>
    
    
      <category term="编程" scheme="https://blog.wjzhe.ml/categories/%E7%BC%96%E7%A8%8B/"/>
    
    
      <category term="编程" scheme="https://blog.wjzhe.ml/tags/%E7%BC%96%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>创建vce考试文件</title>
    <link href="https://blog.wjzhe.ml/2022/05/14/CreateVcefile/"/>
    <id>https://blog.wjzhe.ml/2022/05/14/CreateVcefile/</id>
    <published>2022-05-14T16:00:00.000Z</published>
    <updated>2022-05-14T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h1><p>备考SAP认证的时候，手中有一份word题库进行备考，纯文档刷题还是比较繁琐的，因此这里将word文档制作成了vce刷题文件来进行快速刷题。vce显示如下图所示：</p><p><strong>显示答案</strong></p><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20220515214358419.png" alt="image-20220515214358419"></p><p><strong>回答错误</strong></p><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20220515214510003.png" alt="image-20220515214510003"></p><p><strong>题目中有图片</strong></p><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20220515214627011.png" alt="image-20220515214627011"></p><h1 id="软件"><a href="#软件" class="headerlink" title="软件"></a>软件</h1><ul><li>vce player——刷题软件</li><li>vce designer——制作题库软件</li></ul><p>如下图所示：</p><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20220515214954001.png" alt="image-20220515214954001"></p><h1 id="制作题库"><a href="#制作题库" class="headerlink" title="制作题库"></a>制作题库</h1><h2 id="word文档要求"><a href="#word文档要求" class="headerlink" title="word文档要求"></a>word文档要求</h2><p>word文档的每一道题目需要有标识，才能够被vce designer所识别</p><p>这里以一道例题为例，讲解格式</p><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20220515215835722.png" alt="image-20220515215835722"></p><p><strong>PS</strong>:值得注意的有几点：</p><p>题目序号，与后面的vce designer相对应，一共支持四种，如下图所示：</p><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20220515220000373.png" alt="image-20220515220000373"></p><h2 id="另存为RTF文档"><a href="#另存为RTF文档" class="headerlink" title="另存为RTF文档"></a>另存为RTF文档</h2><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20220515220227478.png" alt="image-20220515220227478"></p><h2 id="vce-design-制作题库"><a href="#vce-design-制作题库" class="headerlink" title="vce design 制作题库"></a>vce design 制作题库</h2><p><strong>打开File选项</strong></p><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20220515220419973.png" alt="image-20220515220419973"></p><p><strong>下一步</strong></p><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20220515220455971.png" alt="image-20220515220455971"></p><p>下一步，选择RTF文件</p><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20220515220520273.png" alt="image-20220515220520273"></p><p>下一步，打开文件</p><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20220515220638872.png" alt="image-20220515220638872"></p><p>下一步，选择序列号</p><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20220515220705109.png" alt="image-20220515220705109"></p><p>导入题库</p><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20220515220734314.png" alt="image-20220515220734314"></p><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20220515220752177.png" alt="image-20220515220752177"></p><p>进行编辑，例如设置<strong>Description</strong>，或者其他一些修改。</p><p>最后另存为vce文件即可</p><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20220515220923288.png" alt="image-20220515220923288"></p><h1 id="刷题软件测试"><a href="#刷题软件测试" class="headerlink" title="刷题软件测试"></a>刷题软件测试</h1><p>打开vce player 进行测试导出的vce文件，成功。</p><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20220515221059349.png" alt="image-20220515221059349"></p><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20220515221126193.png" alt="image-20220515221126193"></p><h1 id="附件"><a href="#附件" class="headerlink" title="附件"></a>附件</h1><p>这里附上这篇博客所使用的文档</p><p><a href="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/saademo.docx" target="_blank" rel="noopener">docx文档</a></p><p><a href="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/saa%E4%B8%AD%E8%8B%B1%E6%96%87%E9%A2%98%E5%BA%93.rtf" target="_blank" rel="noopener">生成的RTF文档</a></p><p><a href="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/saa%E4%B8%AD%E8%8B%B1%E6%96%87%E9%A2%98%E5%BA%93.vce" target="_blank" rel="noopener">生成的Vce题库</a></p>]]></content>
    
    <summary type="html">
    
      
      
        
        
          &lt;h1 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot;
        
      
    
    </summary>
    
    
      <category term="Exam" scheme="https://blog.wjzhe.ml/categories/Exam/"/>
    
    
      <category term="Exam" scheme="https://blog.wjzhe.ml/tags/Exam/"/>
    
  </entry>
  
  <entry>
    <title>InSpec使用</title>
    <link href="https://blog.wjzhe.ml/2022/04/20/InspecUse/"/>
    <id>https://blog.wjzhe.ml/2022/04/20/InspecUse/</id>
    <published>2022-04-20T16:00:00.000Z</published>
    <updated>2022-04-20T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Chef-InSpec介绍"><a href="#Chef-InSpec介绍" class="headerlink" title="Chef InSpec介绍"></a>Chef InSpec介绍</h1><p>任何业务都依赖于基础设施环境。近年来，基础设施领域已发生了巨大的变化。从最初的传统数据中心到数据中心托管服务，而如今，基础设施即服务和云平台在企业中更受欢迎。因此，大多数企业正在将其工作负载从本地数据中心迁移到云平台。</p><p>为了部署和管理这些复杂的基础设施配置，很多企业使用代码即基础设施（IaC）。当您使用IaC在AWS云平台上创建成百上千个资源时，如何知道代码按预期方式部署了这些资源？这些资源是否遵守合规性和安全性措施？我们并不确定，因此需要基础设施测试程序。</p><p> Chef InSpec是一个用于测试和审核应用程序和基础设施的开源代码框架。Chef InSpec的工作原理是将系统的实际状态与您编写的Chef InSpec代码表达的期望状态进行比较。Chef InSpec可以检测违规并以报告的形式显示。</p><h1 id="Chef-InSpec入门"><a href="#Chef-InSpec入门" class="headerlink" title="Chef InSpec入门"></a>Chef InSpec入门</h1><h2 id="Chef-InSpec安装"><a href="#Chef-InSpec安装" class="headerlink" title="Chef InSpec安装"></a>Chef InSpec安装</h2><p>Chef InSpec提供了适配多种操作系统环境的安装包，这里使用一键脚本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl https://omnitruck.chef.io/install.sh | sudo bash -s -- -P inspec</span><br></pre></td></tr></table></figure><p>安装完成后可以看到inspec命令可以正常运行，并提示inspec命令可以使用的参数帮助信息</p><p><img src="img/image-20220421171700452.png" alt="image-20220421171700452"></p><h2 id="Chef-InSpec配置介绍"><a href="#Chef-InSpec配置介绍" class="headerlink" title="Chef InSpec配置介绍"></a>Chef InSpec配置介绍</h2><p>使用Chef InSpec时主要需要弄清楚下面的三部分：</p><ul><li>Command-line interface</li><li>Profile</li><li>Resource</li></ul><p>InSpec CLI使用local，SSH，WinRM，Docker或AWS等连接方式，可针对不同基础设施目标运行测试和审核。常用命令说明如下：</p><table><thead><tr><th>命令</th><th>说明</th></tr></thead><tbody><tr><td>archive</td><td>将配置文件压缩成tar.gz（默认）或zip文件</td></tr><tr><td>check</td><td>验证指定路径上的所有测试</td></tr><tr><td>exec</td><td>针对指定目标运行所有测试文件。加载给定的配置文件，并在需要时获取其依赖项。然后连接到目标并执行配置文件中包含的所有控件。输出测试结果。</td></tr><tr><td>help</td><td>查看特定命令的帮助信息</td></tr><tr><td>shell</td><td>打开一个交互式的调试终端</td></tr><tr><td>version</td><td>打印此工具的版本</td></tr></tbody></table><p>Chef InSpec支持创建复杂的测试和合规性配置文件，每个profile文件都是独立的结构，具有自己的执行流程。用户可以自己编写profile文件，还可以在社区支持的Chef Supermarket和GitHub上找到别人写的profile。Profile文件通常具有下面的目录结构：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">examples/profile</span><br><span class="line">├── README.md <span class="comment"># md是用于解释profile的适用范围和用法</span></span><br><span class="line">├── controls <span class="comment"># controls是所有测试用例所在的目录</span></span><br><span class="line">│   ├── example.rb</span><br><span class="line">├── libraries <span class="comment"># libraries是用于存放扩展Chef InSpec资源代码的目录</span></span><br><span class="line">│   └── extension.rb</span><br><span class="line">└── inspec.yml <span class="comment"># yml包含配置文件的描述</span></span><br></pre></td></tr></table></figure><p>Chef InSpec拥有80多种可供使用的资源。如果您需要的资源尚未提供，也可以编写自己的自定义资源。Chef InSpec支持的资源列表如下：<a href="https://docs.chef.io/inspec/resources/" target="_blank" rel="noopener">https://docs.chef.io/inspec/resources/</a></p><h2 id="Chef-InSpec测试AWS资源"><a href="#Chef-InSpec测试AWS资源" class="headerlink" title="Chef InSpec测试AWS资源"></a>Chef InSpec测试AWS资源</h2><p>典型的使用环境如下图所示，在数据中心内使用Chef InSpec对AWS进行基础设施资源测试。</p><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/Infrastructure-testing-based-on-Chef-InSpec2.png" alt="img"></p><p>从本地数据中心连接AWS环境需要使用Access Key和Secret Access Key（AKSK）。在企业环境中，通常会将IAM User集中在一个Master账号中进行管理，用户使用IAM User登陆AWS环境，然后再用Assume Role的方式操作其它AWS账户。</p><p>使用Chef InSpec连接AWS前，首先需要创建IAM用户，并生成AKSK。另外在UseCase账号中，需要创建Assume Role，给予适当的权限并允许Master账号中的IAM User切换到Use Case账号。</p><p> 在本地数据中心连接AWS环境的配置示例如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"># cat .aws&#x2F;credentials </span><br><span class="line">[default]</span><br><span class="line">aws_access_key_id &#x3D; &lt;Access Key&gt;</span><br><span class="line">aws_secret_access_key &#x3D; &lt;Secret Access Key&gt;</span><br><span class="line"># cat ~&#x2F;.aws&#x2F;config </span><br><span class="line">[default]</span><br><span class="line">region &#x3D; cn-north-1</span><br><span class="line">output &#x3D; json</span><br><span class="line">[profile usecase]</span><br><span class="line">role_arn &#x3D; &lt;UseCase Account IAM Role Arn&gt;</span><br></pre></td></tr></table></figure><p>使用如下命令创建示例profile，该命令会自动生成profile目录结构。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"># inspec init profile --platform aws example</span><br><span class="line">────────────── InSpec Code Generator ────────────── </span><br><span class="line"></span><br><span class="line">Creating new profile at &#x2F;root&#x2F;example</span><br><span class="line"> • Creating file README.md</span><br><span class="line"> • Creating file attributes.yml</span><br><span class="line"> • Creating directory controls</span><br><span class="line"> • Creating file controls&#x2F;example.rb</span><br><span class="line"> • Creating file inspec.yml</span><br></pre></td></tr></table></figure><p>示例代码的测试内容在controls/example.rb文件中</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># copyright: 2018, The Authors</span></span><br><span class="line"></span><br><span class="line">title <span class="string">"Sample Section"</span></span><br><span class="line"></span><br><span class="line">aws_vpc_id = attribute(<span class="string">"aws_vpc_id"</span>, value: <span class="string">""</span>, description: <span class="string">"Optional AWS VPC identifier."</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># You add controls here</span></span><br><span class="line">control <span class="string">"aws-single-vpc-exists-check"</span> <span class="keyword">do</span> <span class="comment"># A unique ID for this control.</span></span><br><span class="line">  only_if &#123; aws_vpc_id != <span class="string">""</span> &#125; <span class="comment"># Only run this control if the `aws_vpc_id` attribute is provided.</span></span><br><span class="line">  impact 1.0                                                                <span class="comment"># The criticality, if this control fails.</span></span><br><span class="line">  title <span class="string">"Check to see if custom VPC exists."</span>                                <span class="comment"># A human-readable title.</span></span><br><span class="line">  describe aws_vpc(aws_vpc_id) <span class="keyword">do</span>                                           <span class="comment"># The test itself.</span></span><br><span class="line">    it &#123; should exist &#125;</span><br><span class="line">  end</span><br><span class="line">end</span><br><span class="line"></span><br><span class="line"><span class="comment"># Plural resources can be inspected to check for specific resource details.</span></span><br><span class="line">control <span class="string">"aws-vpcs-check"</span> <span class="keyword">do</span></span><br><span class="line">  impact 1.0</span><br><span class="line">  title <span class="string">"Check in all the VPCs for default sg not allowing 22 inwards"</span></span><br><span class="line">  aws_vpcs.vpc_ids.each <span class="keyword">do</span> |vpc_id|</span><br><span class="line">    describe aws_security_group(vpc_id: vpc_id, group_name: <span class="string">"default"</span>) <span class="keyword">do</span></span><br><span class="line">      it &#123; should allow_in(port: 22) &#125;</span><br><span class="line">    end</span><br><span class="line">  end</span><br><span class="line">end</span><br><span class="line"></span><br><span class="line">control <span class="string">"aws-vpcs-multi-region-status-check"</span> <span class="keyword">do</span>                             <span class="comment"># A unique ID for this control.</span></span><br><span class="line">  impact 1.0                                                                <span class="comment"># The criticality, if this control fails.</span></span><br><span class="line">  title <span class="string">'Check AWS VPCs in all regions have status "available"'</span>             <span class="comment"># A human-readable title.</span></span><br><span class="line">  aws_regions.region_names.each <span class="keyword">do</span> |region|                                 <span class="comment"># Loop over all available AWS regions</span></span><br><span class="line">    aws_vpcs(aws_region: region).vpc_ids.each <span class="keyword">do</span> |vpc|                      <span class="comment"># Find all VPCs in a single AWS region</span></span><br><span class="line">      describe aws_vpc(aws_region: region, vpc_id: vpc) <span class="keyword">do</span>                  <span class="comment"># The test itself.</span></span><br><span class="line">        it &#123; should exist &#125;                                                 <span class="comment"># Confirms AWS VPC exists</span></span><br><span class="line">        it &#123; should be_available &#125;                                          <span class="comment"># Confirms AWS VPC has status "available"</span></span><br><span class="line">      end</span><br><span class="line">    end</span><br><span class="line">  end</span><br><span class="line">end</span><br></pre></td></tr></table></figure><p>该测试的主要内容包含：</p><ul><li>如果传入指定的VPC ID，则检查指定的VPC是否存在</li><li>检查所有VPC的安全组内是否包含允许22端口访问的策略</li><li>检查所有区域内的状态为available的VPC</li></ul><p>执行如下命令运行该profile对AWS环境进行测试：</p> <figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># inspec exec example -t aws://cn-north-1/usecase</span></span><br><span class="line"></span><br><span class="line"><span class="symbol">Profile:</span> AWS InSpec Profile (example)</span><br><span class="line"><span class="symbol">Version:</span> <span class="number">0</span>.<span class="number">1.0</span></span><br><span class="line"><span class="symbol">Target:</span>  <span class="symbol">aws:</span>/<span class="regexp">/cn-north-1</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">  ↺  aws-single-vpc-exists-check: Check to see if custom VPC exists.</span></span><br><span class="line"><span class="regexp">     ↺  Skipped control due to only_if condition.</span></span><br><span class="line"><span class="regexp">  ✔  aws-vpcs-check: Check in all the VPCs for default sg not allowing 22 inwards</span></span><br><span class="line"><span class="regexp">     ✔  EC2 Security Group ID: sg-01d67dds39bcffe17 Name: default VPC ID: vpc-032cdd155d561c7bf  is expected to allow in &#123;:port=&gt;22&#125;</span></span><br><span class="line"><span class="regexp">  ✔  aws-vpcs-multi-region-status-check: Check AWS VPCs in all regions have status "available"</span></span><br><span class="line"><span class="regexp">     ✔  VPC vpc-032cdd155d561c7bf in cn-north-1 is expected to exist</span></span><br><span class="line"><span class="regexp">     ✔  VPC vpc-032cdd155d561c7bf in cn-north-1 is expected to be available</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">Profile: Amazon Web Services  Resource Pack (inspec-aws)</span></span><br><span class="line"><span class="regexp">Version: 1.31.0</span></span><br><span class="line"><span class="regexp">Target:  aws:/</span><span class="regexp">/cn-north-1</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">     No tests executed.</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">Profile Summary: 2 successful controls, 0 control failures, 1 control skipped</span></span><br><span class="line"><span class="regexp">Test Summary: 3 successful, 0 failures, 1 skipped</span></span><br></pre></td></tr></table></figure><h1 id="InSpec命令行"><a href="#InSpec命令行" class="headerlink" title="InSpec命令行"></a>InSpec命令行</h1><h2 id="exec"><a href="#exec" class="headerlink" title="exec"></a>exec</h2><p>在指定位置运行所有测试文件。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">inspec exec profile [option]</span><br></pre></td></tr></table></figure><p>该子命令加载给定的配置文件，如果需要，获取它们的依赖项，然后连接到目标并执行配置文件中包含的任何控件。一个或多个报告器用于生成输出。</p><p>exec允许使用不同位置的测试文件</p><p><strong>使用Chef Supermarket:</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">inspec <span class="built_in">exec</span> supermarket://username/linux-baseline</span><br></pre></td></tr></table></figure><p><strong>使用本地配置</strong>(执行controls中的所有test文件)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">inspec exec &#x2F;path&#x2F;to&#x2F;profile</span><br></pre></td></tr></table></figure><p><strong>使用本地配置</strong>(执行单个test文件)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">inspec exec &#x2F;path&#x2F;to&#x2F;a_test.rb</span><br></pre></td></tr></table></figure><p><strong>使用git仓库</strong></p><p>通过SSH链接</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">inspec exec git@github.com:dev-sec&#x2F;linux-baseline.git</span><br></pre></td></tr></table></figure><p>使用HTTPS链接</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">inspec exec https:&#x2F;&#x2F;github.com&#x2F;dev-sec&#x2F;linux-baseline.git</span><br></pre></td></tr></table></figure><p>私有仓库</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">inspec exec https:&#x2F;&#x2F;api_token@github.com&#x2F;dev-sec&#x2F;linux-baseline.git</span><br></pre></td></tr></table></figure><p><strong>exec 参数</strong> </p><ul><li><code>-t</code>,<code>--target=TARGET</code> 使用 URI 的简单定位选项;</li></ul><h2 id="InSpec项目结构"><a href="#InSpec项目结构" class="headerlink" title="InSpec项目结构"></a>InSpec项目结构</h2><p>配置文件应具有以下结构：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">examples/profile</span><br><span class="line">├── README.md</span><br><span class="line">├── controls</span><br><span class="line">│   ├── example.rb</span><br><span class="line">│   └── control_etc.rb</span><br><span class="line">├── libraries</span><br><span class="line">│   └── extension.rb</span><br><span class="line">|── files</span><br><span class="line">│   └── extras.conf</span><br><span class="line">└── inspec.yml</span><br></pre></td></tr></table></figure><p>说明：</p><ul><li><code>inspec.yml</code>包括配置文件描述（必需）</li><li><code>controls</code>是所有测试所在的目录（必填）</li><li><code>libraries</code>是所有 Chef InSpec 资源扩展所在的目录（可选）</li><li><code>files</code>是包含配置文件可以访问的附加文件的目录（可选）</li><li><code>README.md</code>应该用来解释概要、它的范围和用途</li></ul><h3 id="inspec-yml配置文件"><a href="#inspec-yml配置文件" class="headerlink" title="inspec.yml配置文件"></a><strong>inspec.yml</strong>配置文件</h3><p>配置文件如下所示</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">#指定配置文件的唯一名称。必需的。</span><br><span class="line">name: ssh</span><br><span class="line"># title为配置文件指定一个人类可读的名称。</span><br><span class="line">title: Basic SSH</span><br><span class="line"># 指定配置文件维护者</span><br><span class="line">maintainer: Chef Software, Inc.</span><br><span class="line"># 指定版权所有者。</span><br><span class="line">copyright: Chef Software, Inc.</span><br><span class="line"># 指定配置文件的支持联系信息，通常是电子邮件地址。</span><br><span class="line">copyright_email: support@chef.io</span><br><span class="line"># 指定配置文件的许可证。</span><br><span class="line">license: Proprietary, All rights reserved</span><br><span class="line"># 为配置文件指定一行摘要</span><br><span class="line">summary: Verify that SSH Server and SSH Client are configured securely</span><br><span class="line"># 指定配置文件版本</span><br><span class="line">version: 1.0.0</span><br><span class="line"># 指定支持的平台目标列表</span><br><span class="line">supports:</span><br><span class="line">  - platform-family: linux</span><br><span class="line"># 定义此配置文件所依赖的配置文件列表</span><br><span class="line">depends:</span><br><span class="line">  - name: profile</span><br><span class="line">    path: ..&#x2F;path&#x2F;to&#x2F;profile</span><br><span class="line">gem_dependencies:</span><br><span class="line">  - name: &quot;gem-name&quot;</span><br><span class="line">    version: &quot;&gt;&#x3D; 2.0.0&quot;</span><br><span class="line"># 在配置文件可以运行的 Chef InSpec 版本限制</span><br><span class="line">inspec_version: &quot;~&gt; 2.1&quot;</span><br></pre></td></tr></table></figure><p>验证profile是否缺少文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">inspec check</span><br></pre></td></tr></table></figure><p>如下所示</p><p><img src="img/image-20220421191315673.png" alt="image-20220421191315673"></p><p><strong>supports,平台支持</strong></p><p>使用文件中的<code>supports</code>设置<code>inspec.yml</code>来指定配置文件所针对的一个（或多个）平台。支持的平台列表可能包含以下内容：</p><ul><li><code>platform-family</code>限制到特定平台系列。</li><li><code>platform-name</code>限制特定平台名称。<code>platform-name</code>支持星号 ( <code>*</code>) 通配符使用。</li><li><code>release</code>限制特定平台版本，并与<code>platform-name</code>. <code>release</code>支持星号 ( <code>*</code>) 通配符使用。</li><li><code>platform</code>限制平台名称或平台系列。</li></ul><p>举例：</p><p>例如，要针对任何运行 Debian Linux 的设备</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">name:</span> <span class="string">ssh</span></span><br><span class="line"><span class="attr">supports:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">platform-name:</span> <span class="string">debian</span></span><br></pre></td></tr></table></figure><p>要仅针对 Ubuntu 版本 20.04，请使用：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">name:</span> <span class="string">ssh</span></span><br><span class="line"><span class="attr">supports:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">platform-name:</span> <span class="string">ubuntu</span></span><br><span class="line">    <span class="attr">release:</span> <span class="number">20.04</span></span><br></pre></td></tr></table></figure><p>要针对整个 Windows 2019 平台系列，包括数据中心和核心服务器，请使用：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">name:</span> <span class="string">ssh</span></span><br><span class="line"><span class="attr">supports:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">platform-name:</span> <span class="string">windows_server_2019*</span></span><br></pre></td></tr></table></figure><p>要针对在 Amazon AWS 上运行的任何内容，请使用：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">name:</span> <span class="string">ssh</span></span><br><span class="line"><span class="attr">supports:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">platform:</span> <span class="string">aws</span></span><br></pre></td></tr></table></figure><p><strong>depends,配置文件依赖项</strong></p><p>在配置文件可以使用来自另一个配置文件的控件之前，需要<code>inspec.yml</code>在该部分的包含配置文件的文件中指定要包含的配置文件<code>depends</code> 。对于要包含的每个配置文件，应包括从中获取配置文件的位置和配置文件的名称。例如：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">depends:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">linux-baseline</span></span><br><span class="line">  <span class="attr">url:</span> <span class="string">https://github.com/dev-sec/linux-baseline/archive/master.tar.gz</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">ssh-baseline</span></span><br><span class="line">  <span class="attr">url:</span> <span class="string">https://github.com/dev-sec/ssh-baseline/archive/master.tar.gz</span></span><br></pre></td></tr></table></figure><p>path,该<code>path</code>设置定义了位于磁盘上的配置文件。此设置通常在开发配置文件和调试配置文件时使用。</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">depends:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">my-profile</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">/absolute/path</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">another</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">../relative/path</span></span><br></pre></td></tr></table></figure><p><code>url</code>设置指定位于基于 HTTP 或 HTTPS 的 URL 的配置文件。配置文件必须可通过 HTTP GET 操作访问，并且必须是有效的配置文件存档（zip、tar 或 tar.gz 格式）。</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">depends:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">my-profile</span></span><br><span class="line">  <span class="attr">url:</span> <span class="string">https://my.domain/path/to/profile.tgz</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">profile-via-git</span></span><br><span class="line">  <span class="attr">url:</span> <span class="string">https://github.com/myusername/myprofile-repo/archive/master.tar.gz</span></span><br></pre></td></tr></table></figure><p>git</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">depends:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">git-profile</span></span><br><span class="line">  <span class="attr">git:</span> <span class="string">http://url/to/repo</span></span><br><span class="line">  <span class="attr">branch:</span>  <span class="string">desired_branch</span></span><br><span class="line">  <span class="attr">tag:</span>     <span class="string">desired_version</span></span><br><span class="line">  <span class="attr">commit:</span>  <span class="string">pinned_commit</span></span><br><span class="line">  <span class="attr">version:</span> <span class="string">semver_via_tags</span></span><br><span class="line">  <span class="attr">relative_path:</span> <span class="string">relative/optional/path/to/profile</span></span><br></pre></td></tr></table></figure><p>surpermarkt</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">depends:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">supermarket-profile</span></span><br><span class="line">  <span class="attr">supermarket:</span> <span class="string">supermarket-username/supermarket-profile</span></span><br></pre></td></tr></table></figure><h3 id="controls-配置"><a href="#controls-配置" class="headerlink" title="controls 配置"></a>controls 配置</h3><p><strong>包括配置文件中的所有控件</strong></p><p>使用配置文件中的include_controls命令，每次执行包含配置文件时，都将执行命名配置文件中的所有控件。</p><p><img src="https://docs.chef.io/images/inspec/include_controls.png" alt="包括控件"></p><p>在上面的例子中，每次<code>my-app-profile</code>执行时，所有的控件<code>my-baseline</code>也都被执行。因此，将执行以下控制：</p><ul><li>myapp-1</li><li>myapp-2</li><li>myapp-3</li><li>baseline-1</li><li>baseline-2</li></ul><p>这是一个很好的提醒，当包含来自其他配置文件的控件时，为控件设置良好的命名约定有助于避免混淆！</p><p><strong>从配置文件中跳过控件</strong></p><p>如果包含的配置文件中的一项控制不适用于您的环境怎么办？幸运的是，不必为了删除控件而维护包含的配置文件的稍微修改的副本。该<code>skip_control</code>命令告诉 Chef InSpec 不要运行特定控件。</p><p><img src="https://docs.chef.io/images/inspec/include_controls_with_skip.png" alt="包括带有跳过的控件"></p><p>在上面的示例中，除了来自配置文件的控制<strong>之外</strong><code>my-app-profile</code>，<code>my-baseline</code>每次执行时都会<code>my-app-profile</code>执行来自配置文件的所有控件。<code>baseline-2``my-baseline</code></p><p><strong>修改控件</strong></p><p>假设仍应运行包含配置文件中的特定控件，但影响不合适？也许测试应该仍然运行，但如果它失败了，它应该被视为低严重性而不是高严重性？当包含一个控件时，它也可以被修改！</p><p><img src="https://docs.chef.io/images/inspec/include_controls_with_mod.png" alt="包含带有修改的控件"></p><p><strong>使用包含的配置文件中的资源</strong></p><p>默认情况下，列出的依赖项中的所有自定义资源都可用于您的配置文件。如果您的两个依赖项提供了同名的资源，则可以使用<code>require_resource</code>DSL 函数来消除两者的歧义：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">require_resource(profile: &#39;my_dep&#39;, resource: &#39;my_res&#39;,</span><br><span class="line">                  as: &#39;my_res2&#39;)</span><br></pre></td></tr></table></figure><h1 id="InSpec语法"><a href="#InSpec语法" class="headerlink" title="InSpec语法"></a>InSpec语法</h1><p>语句块</p><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20220421170635101.png" alt="image-20220421170635101"></p><h2 id="配置文件输入"><a href="#配置文件输入" class="headerlink" title="配置文件输入"></a>配置文件输入</h2><p>Chef InSpec 配置文件可能包含可在测试期间访问的其他文件。配置文件使您能够将测试的逻辑与您的测试检查的数据分开，例如，您需要打开的端口列表。</p><p>要访问这些文件，它们必须存储在<code>files</code>配置文件的根目录中。它们是通过相对于该文件夹的名称访问的，带有 <code>inspec.profile.file(...)</code>.这是一个读取和测试端口列表的示例。文件夹结构为：</p><figure class="highlight tcl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">examples/profile</span><br><span class="line">├── controls</span><br><span class="line">│   ├── example.rb</span><br><span class="line">│── files</span><br><span class="line">│   └── services.yml</span><br><span class="line">└── inspec.yml</span><br></pre></td></tr></table></figure><p><strong>services.yml</strong>内容</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">- service_name: httpd-alpha</span><br><span class="line">  port: 80</span><br><span class="line">- service_name: httpd-beta</span><br><span class="line">  port: 8080</span><br></pre></td></tr></table></figure><p><code>example.rb</code>现在可以访问此文件</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">my_services = yaml(<span class="symbol">content:</span> inspec.profile.file(<span class="string">'services.yml'</span>)).params</span><br><span class="line"></span><br><span class="line">my_services.each <span class="keyword">do</span> <span class="params">|s|</span></span><br><span class="line">  describe service(s[<span class="string">'service_name'</span>]) <span class="keyword">do</span></span><br><span class="line">    it &#123; should be_running &#125;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">describe port(s[<span class="string">'port'</span>]) <span class="keyword">do</span></span><br><span class="line">  it &#123; should be_listening &#125;</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><p>有关使用配置文件的更完整示例，请参阅 Learn Chef Rally 上的<a href="https://learn.chef.io/modules/explore-inspec-resources#/" target="_blank" rel="noopener">探索 Chef InSpec 资源。</a></p><h2 id="“should”-vs-“expect”-syntax"><a href="#“should”-vs-“expect”-syntax" class="headerlink" title="“should” vs. “expect” syntax"></a>“should” vs. “expect” syntax</h2><p>Chef InSpec 将继续支持这两种编写测试的方法。考虑这个<code>file</code>测试：</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">describe file(<span class="string">'/tmp/test.txt'</span>) <span class="keyword">do</span></span><br><span class="line">  it &#123; should be_file &#125;</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><p><code>expect</code>这可以用语法重写</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">describe file(<span class="string">'/tmp/test.txt'</span>) <span class="keyword">do</span></span><br><span class="line">  it <span class="string">'should be a file'</span> <span class="keyword">do</span></span><br><span class="line">    expect(subject).to(be_file)</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><p>上述两个示例的输出如下所示：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">File /tmp/test.txt</span><br><span class="line">   ✔  should be a file</span><br></pre></td></tr></table></figure><p>Chef InSpec 建议使用该<code>should</code> 语法，因为它往往更容易为那些技术不高的用户阅读。</p><p>此外，您可以使用<code>subject</code>关键字来进一步控制您的输出，如果您选择：</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">describe <span class="string">'test file'</span> <span class="keyword">do</span></span><br><span class="line">  subject &#123; file(<span class="string">'/tmp/test.txt'</span>) &#125;</span><br><span class="line">  it <span class="string">'should be a file'</span> <span class="keyword">do</span></span><br><span class="line">    expect(subject).to(be_file)</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><p>关键词</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">describe Entity(Property) <span class="keyword">do</span></span><br><span class="line">Matcher</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><h2 id="通用匹配器参考"><a href="#通用匹配器参考" class="headerlink" title="通用匹配器参考"></a>通用匹配器参考</h2><p><strong>be</strong></p><p>这个匹配器后面可以跟许多不同的比较运算符。始终确保使用数字而不是字符串进行这些比较。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">describe file(&#39;&#x2F;proc&#x2F;cpuinfo&#39;) do</span><br><span class="line">  its(&#39;size&#39;) &#123; should be &gt;&#x3D; 10 &#125;</span><br><span class="line">  its(&#39;size&#39;) &#123; should be &lt; 1000 &#125;</span><br><span class="line">end</span><br></pre></td></tr></table></figure><p><strong>CMP</strong></p><p>与<code>eq</code>,不同<code>cmp</code>的是，用于限制较少的比较的匹配器。它将尝试将实际值与您要与之进行比较的类型相匹配。这是为了让用户不必编写类型转换和解析。</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">describe sshd_config <span class="keyword">do</span></span><br><span class="line">  its(<span class="string">'Protocol'</span>) &#123; should cmp <span class="number">2</span> &#125;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">describe passwd.uid(<span class="number">0</span>) <span class="keyword">do</span></span><br><span class="line">  its(<span class="string">'users'</span>) &#123; should cmp <span class="string">'root'</span> &#125;</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><p><code>cmp</code>行为方式如下：</p><ul><li>比较字符串和数字</li></ul><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">describe sshd_config <span class="keyword">do</span></span><br><span class="line">  <span class="comment"># Only `'2'` works</span></span><br><span class="line">  its(<span class="string">'Protocol'</span>) &#123; should eq <span class="string">'2'</span> &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment"># Both of these work</span></span><br><span class="line">  its(<span class="string">'Protocol'</span>) &#123; should cmp <span class="string">'2'</span> &#125;</span><br><span class="line">  its(<span class="string">'Protocol'</span>) &#123; should cmp <span class="number">2</span> &#125;</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><ul><li>字符串比较不区分大小写</li></ul><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">describe auditd_conf <span class="keyword">do</span></span><br><span class="line">  its(<span class="string">'log_format'</span>) &#123; should cmp <span class="string">'raw'</span> &#125;</span><br><span class="line">  its(<span class="string">'log_format'</span>) &#123; should cmp <span class="string">'RAW'</span> &#125;</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><ul><li>识别嵌入在字符串中的版本</li></ul><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">describe package(<span class="string">'curl'</span>) <span class="keyword">do</span></span><br><span class="line">  its(<span class="string">'version'</span>) &#123; should cmp &gt; <span class="string">'7.35.0-1ubuntu2.10'</span> &#125;</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><ul><li>将只有一个条目的数组与一个值进行比较</li></ul><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">describe passwd.uids(<span class="number">0</span>) <span class="keyword">do</span></span><br><span class="line">  its(<span class="string">'users'</span>) &#123; should cmp <span class="string">'root'</span> &#125;</span><br><span class="line">  its(<span class="string">'users'</span>) &#123; should cmp [<span class="string">'root'</span>] &#125;</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><ul><li>字符串的单值数组也可以与正则表达式进行比较</li></ul><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">describe auditd_conf <span class="keyword">do</span></span><br><span class="line">  its(<span class="string">'log_format'</span>) &#123; should cmp /raw/i &#125;</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><ul><li>改进了八进制比较的打印</li></ul><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">describe file(<span class="string">'/proc/cpuinfo'</span>) <span class="keyword">do</span></span><br><span class="line">  its(<span class="string">'mode'</span>) &#123; should cmp <span class="string">'0345'</span> &#125;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="symbol">expected:</span> <span class="number">0345</span></span><br><span class="line"><span class="symbol">got:</span> <span class="number">0444</span></span><br></pre></td></tr></table></figure><p><strong>eq</strong></p><p>测试两个值是否完全相等。</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">describe sshd_config <span class="keyword">do</span></span><br><span class="line">  its(<span class="string">'RSAAuthentication'</span>) &#123; should_not eq <span class="string">'no'</span> &#125;</span><br><span class="line">  its(<span class="string">'Protocol'</span>) &#123; should eq <span class="string">'2'</span> &#125;</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><p><code>eq</code>如果类型不匹配则失败。在比较数字的配置条目时，请记住这一点：</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">its(<span class="string">'Port'</span>) &#123; should eq <span class="string">'22'</span> &#125; <span class="comment"># ok</span></span><br><span class="line"></span><br><span class="line">its(<span class="string">'Port'</span>) &#123; should eq <span class="number">22</span> &#125;</span><br><span class="line"><span class="comment"># fails: '2' != 2 (string vs int)</span></span><br></pre></td></tr></table></figure><p>对于限制较少的比较，请使用<code>cmp</code>.</p><h2 id="include"><a href="#include" class="headerlink" title="include"></a>include</h2><p>验证值是否包含在列表中。</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">describe passwd <span class="keyword">do</span></span><br><span class="line">  its(<span class="string">'users'</span>) &#123; should <span class="keyword">include</span> <span class="string">'my_user'</span> &#125;</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><p><strong>be_in</strong></p><p>验证对象是否包含在列表中。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">describe resource do</span><br><span class="line">  its(&#39;item&#39;) &#123; should be_in LIST &#125;</span><br><span class="line">end</span><br></pre></td></tr></table></figure><p><strong>match</strong></p><p>检查字符串是否匹配正则表达式。</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">describe sshd_config <span class="keyword">do</span></span><br><span class="line">  its(<span class="string">'Ciphers'</span>) &#123; should_not match /cbc/ &#125;</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><h2 id="语句"><a href="#语句" class="headerlink" title="语句"></a>语句</h2><p>以下资源测试 |ssh| 服务器配置。例如，一个简单的控件可以描述为：</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">describe sshd_config <span class="keyword">do</span></span><br><span class="line">  its(<span class="string">'Port'</span>) &#123; should cmp <span class="number">22</span> &#125;</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><p>在各种用例中，例如在不同部门实施 IT 合规性，使用元数据扩展控制变得很方便。每个控件都可以定义一个附加<code>impact</code>的<code>title</code>或<code>desc</code>。一个示例如下所示：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">control &#39;sshd-8&#39; do</span><br><span class="line">  impact 0.6</span><br><span class="line">  title &#39;Server: Configure the service port&#39;</span><br><span class="line">  desc &#39;Always specify which port the SSH server should listen.&#39;</span><br><span class="line">  desc &#39;rationale&#39;, &#39;This ensures that there are no unexpected settings&#39; # Requires Chef InSpec &gt;&#x3D;2.3.4</span><br><span class="line">  tag &#39;ssh&#39;,&#39;sshd&#39;,&#39;openssh-server&#39;</span><br><span class="line">  tag cce: &#39;CCE-27072-8&#39;</span><br><span class="line">  ref &#39;NSA-RH6-STIG - Section 3.5.2.1&#39;, url: &#39;https:&#x2F;&#x2F;www.nsa.gov&#x2F;ia&#x2F;_files&#x2F;os&#x2F;redhat&#x2F;rhel5-guide-i731.pdf&#39;</span><br><span class="line"></span><br><span class="line">  describe sshd_config do</span><br><span class="line">    its(&#39;Port&#39;) &#123; should cmp 22 &#125;</span><br><span class="line">  end</span><br><span class="line">end</span><br></pre></td></tr></table></figure><p>元数据说明：</p><ul><li>‘sshd-8’是控件的名称</li><li>ref是对外部文档的引用</li><li>describe是一个包含至少一个测试的块。一个control块必须至少包含一个describe块，但可以包含任意多个</li><li>sshd_config是 Chef InSpec 资源。有关 Chef InSpec 资源的完整列表，请参阅 Chef InSpec 资源文档。</li><li>its(‘Port’)是Chef InSpecde1；{ should eq ‘22’ }是单元测试。一个describe块必须至少包含一个匹配器，但可以包含任意数量的匹配器。</li></ul><h2 id="检查至少一个条件是否通过describe-one"><a href="#检查至少一个条件是否通过describe-one" class="headerlink" title="检查至少一个条件是否通过describe.one"></a>检查至少一个条件是否通过<code>describe.one</code></h2><p>使用 Chef InSpec，您可以检查一组检查中的至少一个是否为真。例如，如果您在两个不同的位置配置一个设置，那么您可能想要测试是否设置了配置 A 或配置 B。用块做这个任务<code>describe.one</code>。 <code>describe.one</code>定义一组<code>describe</code>块，其中只有一个块需要通过。</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">describe.one <span class="keyword">do</span></span><br><span class="line">  describe ConfigurationA <span class="keyword">do</span></span><br><span class="line">    its(<span class="string">'setting_1'</span>) &#123; should eq <span class="literal">true</span> &#125;</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">  describe ConfigurationB <span class="keyword">do</span></span><br><span class="line">    its(<span class="string">'setting_2'</span>) &#123; should eq <span class="literal">true</span> &#125;</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><h4 id="describe-one使用说明"><a href="#describe-one使用说明" class="headerlink" title="describe.one使用说明"></a><code>describe.one</code>使用说明</h4><ul><li>如果其中一个<code>describe.one</code>嵌套<code>describe</code>块的所有断言都通过了，则该块通过。一个<code>describe.one</code>块需要整个<code>describe</code>块才能通过，而不仅仅是一个断言。</li><li>Chef InSpec 将始终评估<code>describe.one</code>. <code>describe</code>它不会在评估通过的块时短路。</li><li>不支持将一个块嵌套<code>describe.one</code>在另一个块内。<code>describe.one</code></li></ul><h2 id="demo"><a href="#demo" class="headerlink" title="demo"></a>demo</h2><p>以下示例显示了使用单个<code>control</code>模块的简单合规性测试。</p><h3 id="测试系统事件日志"><a href="#测试系统事件日志" class="headerlink" title="测试系统事件日志"></a>测试系统事件日志</h3><p>以下测试显示了如何审核运行 Windows 2012 R2 且启用了密码复杂性的计算机：</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">control <span class="string">'windows-account-102'</span> <span class="keyword">do</span></span><br><span class="line">  impact <span class="string">'critical'</span></span><br><span class="line">  title <span class="string">'Windows Password Complexity is Enabled'</span></span><br><span class="line">  desc <span class="string">'Password must meet complexity requirement'</span></span><br><span class="line">  describe security_policy <span class="keyword">do</span></span><br><span class="line">    its(<span class="string">'PasswordComplexity'</span>) &#123; should cmp <span class="number">1</span> &#125;</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><h3 id="测试-PostgreSQL-密码是否为空"><a href="#测试-PostgreSQL-密码是否为空" class="headerlink" title="测试 PostgreSQL 密码是否为空"></a>测试 PostgreSQL 密码是否为空</h3><p>以下测试展示了如何审计运行 PostgreSQL 的机器以确保密码不为空。</p><p>复制</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">control <span class="string">'postgres-7'</span> <span class="keyword">do</span></span><br><span class="line">  impact <span class="number">1.0</span></span><br><span class="line">  title <span class="string">"Don't allow empty passwords"</span></span><br><span class="line">  describe postgres_session(<span class="string">'user'</span>, <span class="string">'pass'</span>).query(<span class="string">"SELECT * FROM pg_shadow WHERE passwd IS NULL;"</span>) <span class="keyword">do</span></span><br><span class="line">    its(<span class="string">'output'</span>) &#123; should cmp <span class="string">''</span> &#125;</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><h3 id="测试-MySQL-密码是否在-ENV-中"><a href="#测试-MySQL-密码是否在-ENV-中" class="headerlink" title="测试 MySQL 密码是否在 ENV 中"></a>测试 MySQL 密码是否在 ENV 中</h3><p>以下测试显示了如何审计运行 MySQL 的机器以确保密码不存储在<code>ENV</code>：</p><p>复制</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">control <span class="string">'mysql-3'</span> <span class="keyword">do</span></span><br><span class="line">  impact <span class="number">1.0</span></span><br><span class="line">  title <span class="string">'Do not store your MySQL password in your ENV'</span></span><br><span class="line">  desc <span class="string">'</span></span><br><span class="line"><span class="string">    Storing credentials in your ENV may easily expose</span></span><br><span class="line"><span class="string">    them to an attacker. Prevent this at all costs.</span></span><br><span class="line"><span class="string">  '</span></span><br><span class="line">  describe command(<span class="string">'env'</span>) <span class="keyword">do</span></span><br><span class="line">    its(<span class="string">'stdout'</span>) &#123; should_not match /^MYSQL_PWD=<span class="regexp">/ &#125;</span></span><br><span class="line"><span class="regexp">  end</span></span><br><span class="line"><span class="regexp">end</span></span><br></pre></td></tr></table></figure><h3 id="测试是否-etc-ssh是目录"><a href="#测试是否-etc-ssh是目录" class="headerlink" title="测试是否/etc/ssh是目录"></a>测试是否<code>/etc/ssh</code>是目录</h3><p>以下测试显示了如何审计机器以确保它<code>/etc/ssh</code>是一个目录：</p><p>复制</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">control <span class="string">'basic-1'</span> <span class="keyword">do</span></span><br><span class="line">  impact <span class="number">1.0</span></span><br><span class="line">  title <span class="string">'/etc/ssh should be a directory'</span></span><br><span class="line">  desc <span class="string">'</span></span><br><span class="line"><span class="string">    In order for OpenSSH to function correctly, its</span></span><br><span class="line"><span class="string">    configuration path must be a folder.</span></span><br><span class="line"><span class="string">  '</span></span><br><span class="line">  describe file(<span class="string">'/etc/ssh'</span>) <span class="keyword">do</span></span><br><span class="line">    it &#123; should be_directory &#125;</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><h3 id="测试-Apache-是否运行"><a href="#测试-Apache-是否运行" class="headerlink" title="测试 Apache 是否运行"></a>测试 Apache 是否运行</h3><p>以下测试显示了如何审计机器以确保 Apache 已启用并正在运行：</p><p>复制</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">control <span class="string">'apache-1'</span> <span class="keyword">do</span></span><br><span class="line">  impact <span class="string">'medium'</span></span><br><span class="line">  title <span class="string">'Apache2 should be configured and running'</span></span><br><span class="line">  describe service(apache.service) <span class="keyword">do</span></span><br><span class="line">    it &#123; should be_enabled &#125;</span><br><span class="line">    it &#123; should be_running &#125;</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><h3 id="测试是否安装了不安全的软件包"><a href="#测试是否安装了不安全的软件包" class="headerlink" title="测试是否安装了不安全的软件包"></a>测试是否安装了不安全的软件包</h3><p>以下测试显示了如何审计机器是否存在不安全的包：</p><p>复制</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">control <span class="string">'cis-os-services-5.1.3'</span> <span class="keyword">do</span></span><br><span class="line">  impact <span class="number">0</span>.<span class="number">7</span></span><br><span class="line">  title <span class="string">'5.1.3 Ensure rsh client is not installed'</span></span><br><span class="line">  describe package(<span class="string">'rsh'</span>) <span class="keyword">do</span></span><br><span class="line">    it &#123; should_not be_installed &#125;</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line">  describe package(<span class="string">'rsh-redone-client'</span>) <span class="keyword">do</span></span><br><span class="line">    it &#123; should_not be_installed &#125;</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><h3 id="测试-Windows-注册表项"><a href="#测试-Windows-注册表项" class="headerlink" title="测试 Windows 注册表项"></a>测试 Windows 注册表项</h3><p>以下测试显示如何审核机器以确保启用安全 DLL 搜索模式：</p><p>复制</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">control <span class="string">'windows-base-101'</span> <span class="keyword">do</span></span><br><span class="line">  impact <span class="number">1.0</span></span><br><span class="line">  title <span class="string">'Safe DLL Search Mode is Enabled'</span></span><br><span class="line">  desc <span class="string">'</span></span><br><span class="line"><span class="string">    @link: https://msdn.microsoft.com/en-us/library/ms682586(v=vs.85).aspx</span></span><br><span class="line"><span class="string">  '</span></span><br><span class="line">  describe registry_key(<span class="string">'HKLM\\System\\CurrentControlSet\\Control\\Session Manager'</span>) <span class="keyword">do</span></span><br><span class="line">    it &#123; should exist &#125;</span><br><span class="line">    it &#123; should_not have_property_value(<span class="string">'SafeDllSearchMode'</span>, <span class="symbol">:type_dword</span>, <span class="string">'0'</span>) &#125;</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><h3 id="用于only-if排除特定控件"><a href="#用于only-if排除特定控件" class="headerlink" title="用于only_if排除特定控件"></a>用于<code>only_if</code>排除特定控件</h3><p>此示例说明如果使用 不满足条件，如何允许跳过某些控件<code>only_if</code>。在本例中，如果<code>redis-cli</code>命令不存在，则不会执行控制。可选消息可以说明它被跳过的原因。</p><p>复制</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">control <span class="string">'nutcracker-connect-redis-001'</span> <span class="keyword">do</span></span><br><span class="line">  impact <span class="string">'critical'</span></span><br><span class="line">  title <span class="string">'Check if nutcracker can pass commands to redis'</span></span><br><span class="line">  desc <span class="string">'execute redis-cli set key command, to check connectivity of the service'</span></span><br><span class="line"></span><br><span class="line">  only_if(<span class="string">'redis is not installed.'</span>) <span class="keyword">do</span></span><br><span class="line">    command(<span class="string">'redis-cli'</span>).exist?</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">  describe command(<span class="string">'redis-cli SET test_inspec "HELLO"'</span>) <span class="keyword">do</span></span><br><span class="line">    its(<span class="string">'stdout'</span>) &#123; should match /OK/ &#125;</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><p>此示例检查是否安装了某些 pip 包，但前提是 ‘/root/.aws’ 存在：</p><p>复制</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">control <span class="string">'pip-packages-installed'</span> <span class="keyword">do</span></span><br><span class="line">  title <span class="string">'Check if essential pips are installed'</span></span><br><span class="line">  only_if(<span class="string">'aws-cli config not created.'</span>) <span class="keyword">do</span></span><br><span class="line">    directory(<span class="string">'/root/.aws'</span>).exist?</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line">  <span class="string">%w(aws-mfa PyYAML awscli)</span>.each <span class="keyword">do</span> <span class="params">|aws_pip_deps|</span></span><br><span class="line">    describe pip(aws_pip_deps) <span class="keyword">do</span></span><br><span class="line">      it &#123; should be_installed &#125;</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><p>将其与其他条件混合，例如检查文件是否存在，有助于使用 Chef InSpec 测试不同的测试路径。通过这种方式，您可以跳过某些控件，这些控件由于服务器的准备方式而 100% 失败，但是您知道相同的控件套件稍后会在不同的情况下被不同的团队重用。</p><p>关于<code>only_if</code>：</p><ul><li><code>only_if</code>适用于整个<code>control</code>. 如果<code>only_if</code> 块的结果评估为 false，则作为块的一部分提及的任何 Chef InSpec 资源 <code>describe</code>都不会运行。此外，描述块的内容将不会运行。但是，only_if 语句之前的裸 Ruby 表达式和裸 Chef InSpec 资源（不与描述块关联）将运行</li></ul><p>为了显示：</p><p>复制</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">control <span class="string">"whatruns"</span> <span class="keyword">do</span></span><br><span class="line">  command(<span class="string">"do_something"</span>) <span class="comment"># This will ALWAYS run</span></span><br><span class="line">  describe command(<span class="string">"do_another_thing"</span>) <span class="keyword">do</span> <span class="comment"># This will not run</span></span><br><span class="line">    command(<span class="string">"do_yet_another_thing"</span>) <span class="comment"># This will not run</span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line">  only_if &#123; <span class="literal">false</span> &#125;</span><br><span class="line">  command(<span class="string">"do_something_else"</span>) <span class="comment"># This will not run</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><ul><li>每个块只<code>only_if</code>允许一个。<code>control</code>如果存在多个<code>only_if</code>块，则仅使用最后一个<code>only_if</code>块</li><li>如果在控制块之外使用，<code>only_if</code>则跳过当前文件中的所有控件</li><li>要实现复杂的逻辑，请在块中使用 Ruby ‘or’ ( <code>||</code>) 和 ‘and’ ( <code>&amp;&amp;</code>) <code>only_if</code>：</li></ul><p>复制</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">only_if(<span class="string">'ready for launch'</span>) <span class="keyword">do</span></span><br><span class="line">  rocket_is_ready &amp;&amp; weather_is_clear</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><h3 id="控件的附加元数据"><a href="#控件的附加元数据" class="headerlink" title="控件的附加元数据"></a>控件的附加元数据</h3><p>以下示例说明了添加标签和引用的各种方法<code>control</code></p><p>复制</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">control <span class="string">'ssh-1'</span> <span class="keyword">do</span></span><br><span class="line">  impact <span class="number">1.0</span></span><br><span class="line"></span><br><span class="line">  title <span class="string">'Allow only SSH Protocol 2'</span></span><br><span class="line">  desc <span class="string">'</span></span><br><span class="line"><span class="string">    Only SSH protocol version 2 connections should be permitted.</span></span><br><span class="line"><span class="string">    The default setting in /etc/ssh/sshd_config is correct, and can be</span></span><br><span class="line"><span class="string">    verified by ensuring that the following line appears: Protocol 2</span></span><br><span class="line"><span class="string">  '</span></span><br><span class="line"></span><br><span class="line">  tag <span class="string">'production'</span>,<span class="string">'development'</span></span><br><span class="line">  tag <span class="string">'ssh'</span>,<span class="string">'sshd'</span>,<span class="string">'openssh-server'</span></span><br><span class="line"></span><br><span class="line">  tag <span class="symbol">cce:</span> <span class="string">'CCE-27072-8'</span></span><br><span class="line">  tag <span class="symbol">disa:</span> <span class="string">'RHEL-06-000227'</span></span><br><span class="line"></span><br><span class="line">  tag <span class="symbol">remediation:</span> <span class="string">'stig_rhel6/recipes/sshd-config.rb'</span></span><br><span class="line">  tag <span class="symbol">remediation:</span> <span class="string">'https://supermarket.chef.io/cookbooks/ssh-hardening'</span></span><br><span class="line"></span><br><span class="line">  ref <span class="string">'NSA-RH6-STIG - Section 3.5.2.1'</span>, <span class="symbol">url:</span> <span class="string">'https://www.nsa.gov/ia/_files/os/redhat/rhel5-guide-i731.pdf'</span></span><br><span class="line">  ref <span class="string">'http://people.redhat.com/swells/scap-security-guide/RHEL/6/output/ssg-centos6-guide-C2S.html'</span></span><br><span class="line"></span><br><span class="line">  describe ssh_config <span class="keyword">do</span></span><br><span class="line">    its(<span class="string">'Protocol'</span>) &#123; should cmp <span class="number">2</span> &#125;</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><h2 id="在-InSpec-中使用-Ruby"><a href="#在-InSpec-中使用-Ruby" class="headerlink" title="在 InSpec 中使用 Ruby"></a>在 InSpec 中使用 Ruby</h2><p>Chef InSpec 语言是一种基于 Ruby 的语言。这使您可以灵活地使用控件中的 Ruby 代码：</p><p>复制</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">json_obj = json(<span class="string">'/file.json'</span>)</span><br><span class="line">json_obj[<span class="string">'keys'</span>].each <span class="keyword">do</span> <span class="params">|value|</span></span><br><span class="line">  ..</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><p>Ruby 允许很多自由，但应该限制控件，以便它们保持可移植性和易于理解。请参阅我们的<a href="https://docs.chef.io/inspec/style/" target="_blank" rel="noopener">个人资料风格指南</a>。</p><p>核心和自定义资源被编写为继承自 <code>Inspec.resource</code>.</p><h1 id="Ruby-语法"><a href="#Ruby-语法" class="headerlink" title="Ruby 语法"></a>Ruby 语法</h1><h2 id="Ruby数据类型"><a href="#Ruby数据类型" class="headerlink" title="Ruby数据类型"></a>Ruby数据类型</h2><p><strong>整数</strong></p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">123</span>                  <span class="comment"># Fixnum 十进制</span></span><br><span class="line"><span class="number">1_234</span>                <span class="comment"># Fixnum 带有下划线的十进制</span></span><br><span class="line">-<span class="number">500</span>                 <span class="comment"># 负的 Fixnum</span></span><br></pre></td></tr></table></figure><p><strong>浮点型</strong><br>Ruby 支持浮点数。它们是带有小数的数字。浮点数是类 <em>Float</em> 的对象，且可以是下列中任意一个。</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">123.4</span>                <span class="comment"># 浮点值</span></span><br><span class="line"><span class="number">1.0</span>e6                <span class="comment"># 科学记数法</span></span><br><span class="line"><span class="number">4</span>E2<span class="number">0</span>                 <span class="comment"># 不是必需的</span></span><br></pre></td></tr></table></figure><p><strong>算术操作</strong></p><p>加减乘除操作符：+-<em>/；指数操作符为*</em></p><p>指数不必是整数，例如</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#指数算术，结果 16</span></span><br><span class="line">puts <span class="number">2</span>**(<span class="number">1</span>/<span class="number">4</span>)</span><br><span class="line"><span class="comment"># 加法运算,结果4</span></span><br><span class="line">puts <span class="number">2</span>+<span class="number">2</span></span><br><span class="line"><span class="comment"># 除法,结果2</span></span><br><span class="line">puts <span class="number">2</span>/<span class="number">1</span></span><br><span class="line"><span class="comment"># 混合运算</span></span><br><span class="line">puts <span class="number">16</span>**(<span class="number">1</span>/<span class="number">4.0</span>)<span class="comment">#1与4.0的商为0.25（四分之一），然后开四次方根</span></span><br></pre></td></tr></table></figure><p><strong>字符串类型</strong></p><p>Ruby 字符串简单地说是一个 8 位字节序列，它们是类 String 的对象。</p><p>双引号标记的字符串允许替换和使用反斜线符号，单引号标记的字符串不允许替换，且只允许使用 \ 和 &#39; 两个反斜线符号。进行转义</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/ruby -w</span></span><br><span class="line"> </span><br><span class="line">puts <span class="string">'escape using "\\"'</span>;</span><br><span class="line">puts <span class="string">'That\'s right'</span>;</span><br></pre></td></tr></table></figure><p>结果</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">escape using &quot;\&quot;</span><br><span class="line">That&#39;s right</span><br></pre></td></tr></table></figure><p>可以使用序列 <strong>#{ expr }</strong> 替换任意 Ruby 表达式的值为一个字符串。在这里，expr 可以是任意的 Ruby 表达式。</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/ruby -w</span></span><br><span class="line"> </span><br><span class="line">name=<span class="string">"Ruby"</span> </span><br><span class="line">puts name </span><br><span class="line">puts <span class="string">"<span class="subst">#&#123;name+<span class="string">",ok"</span>&#125;</span>"</span></span><br></pre></td></tr></table></figure><p>输出结果为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Ruby</span><br><span class="line">Ruby,ok</span><br></pre></td></tr></table></figure><h2 id="数据结构"><a href="#数据结构" class="headerlink" title="数据结构"></a>数据结构</h2><p>Ruby支持以下三种数据结构:</p><ul><li>数组</li><li>哈希类型</li><li>范围类型</li></ul><h2 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h2><p>数组字面量通过[]中以逗号分隔定义，且支持range定义。</p><ul><li>数组通过[]索引访问</li></ul><ul><li>通过赋值操作插入、删除、替换元素</li><li>通过+，－号进行合并和删除元素，且集合做为新集合出现</li><li>通过&lt;&lt;号向原数据追加元素</li><li>通过*号重复数组元素</li><li>通过｜和&amp;符号做并集和交集操作（注意顺序）</li></ul><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/ruby</span></span><br><span class="line">ary = [ <span class="string">"fred"</span>, <span class="number">10</span>, <span class="number">3.14</span>, <span class="string">"This is a string"</span>, <span class="string">"last element"</span>, ]</span><br><span class="line">ary.each <span class="keyword">do</span> <span class="params">|i|</span></span><br><span class="line">    puts i</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><p><strong>创建数组</strong></p><p>有多种方式创建或初始化数组。一种方式是通过 <em>new</em> 类方法：</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">names = Array.new</span><br></pre></td></tr></table></figure><p>您可以在创建数组的同时设置数组的大小：</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">names = Array.new(<span class="number">20</span>)</span><br></pre></td></tr></table></figure><p>数组 <em>names</em> 的大小或长度为 20 个元素。您可以使用 size 或 length 方法返回数组的大小：</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/ruby</span></span><br><span class="line"> </span><br><span class="line">names = Array.new(<span class="number">20</span>)</span><br><span class="line">puts names.size  <span class="comment"># 返回 20</span></span><br><span class="line">puts names.length <span class="comment"># 返回 20</span></span><br></pre></td></tr></table></figure><p><strong>赋值</strong></p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">names = Array.new(<span class="number">4</span>, <span class="string">"mac"</span>)</span><br><span class="line">names[<span class="number">1</span>]=<span class="string">'windows'</span></span><br><span class="line">puts <span class="string">"<span class="subst">#&#123;names&#125;</span>"</span> <span class="comment"># 输出结果，["mac", "windows", "mac", "mac"]</span></span><br></pre></td></tr></table></figure><h2 id="哈希类型"><a href="#哈希类型" class="headerlink" title="哈希类型"></a><strong>哈希类型</strong></h2><p>Ruby 哈希是在大括号内放置一系列键/值对，键和值之间使用逗号和序列 =&gt; 分隔。尾部的逗号会被忽略。</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/ruby</span></span><br><span class="line"> </span><br><span class="line">hsh = colors = &#123; <span class="string">"red"</span> =&gt; <span class="number">0xf00</span>, <span class="string">"green"</span> =&gt; <span class="number">0x0f0</span>, <span class="string">"blue"</span> =&gt; <span class="number">0x00f</span> &#125;</span><br><span class="line">hsh.each <span class="keyword">do</span> <span class="params">|key, value|</span></span><br><span class="line">    print key, <span class="string">" is "</span>, value, <span class="string">"\n"</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><p>这将产生以下结果：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">red is 3840</span><br><span class="line">green is 240</span><br><span class="line">blue is 15</span><br></pre></td></tr></table></figure><p><strong>创建哈希</strong><br>与数组一样，有各种不同的方式来创建哈希。您可以通过 new 类方法创建一个空的哈希：</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">months = Hash.new</span><br></pre></td></tr></table></figure><p><strong>赋值</strong></p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mh=&#123;<span class="string">'a'</span>=&gt;<span class="string">'apple'</span>,<span class="string">'b'</span>=&gt;<span class="string">'banan'</span>&#125;</span><br><span class="line">mh[<span class="string">'a'</span>]=<span class="string">'thrid'</span></span><br><span class="line">puts mh <span class="comment">#结论 &#123;"a"=&gt;"thrid", "b"=&gt;"banan"&#125;</span></span><br></pre></td></tr></table></figure><h2 id="范围类型"><a href="#范围类型" class="headerlink" title="范围类型"></a><strong>范围类型</strong></h2><p>一个范围表示一个区间。</p><p>范围是通过设置一个开始值和一个结束值来表示。范围可使用 s..e 和 s…e 来构造，或者通过 Range.new 来构造。使用 .. 构造的范围从开始值运行到结束值（包含结束值）。使用 … 构造的范围从开始值运行到结束值（不包含结束值）。当作为一个迭代器使用时，范围会返回序列中的每个值。范围 (1..5) 意味着它包含值 1, 2, 3, 4, 5，范围 (1…5) 意味着它包含值 1, 2, 3, 4 。</p><h2 id="条件判断"><a href="#条件判断" class="headerlink" title="条件判断"></a>条件判断</h2><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> conditional [<span class="keyword">then</span>]</span><br><span class="line">      code...</span><br><span class="line">[<span class="keyword">elsif</span> conditional [<span class="keyword">then</span>]</span><br><span class="line">      code...]...</span><br><span class="line">[<span class="keyword">else</span></span><br><span class="line">      code...]</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><p>通常我们省略保留字 then 。若想在一行内写出完整的 if 式，则必须以 then 隔开条件式和程式区块。如下所示:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">if a &#x3D;&#x3D; 4 then a &#x3D; 7 end</span><br></pre></td></tr></table></figure><p>实例代码</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/ruby</span></span><br><span class="line"><span class="comment"># -*- coding: UTF-8 -*-</span></span><br><span class="line"> </span><br><span class="line">x=<span class="number">1</span></span><br><span class="line"><span class="keyword">if</span> x &gt; <span class="number">2</span></span><br><span class="line">   puts <span class="string">"x 大于 2"</span></span><br><span class="line"><span class="keyword">elsif</span> x &lt;= <span class="number">2</span> <span class="keyword">and</span> x!=<span class="number">0</span></span><br><span class="line">   puts <span class="string">"x 是 1"</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">   puts <span class="string">"无法得知 x 的值"</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><h2 id="循环"><a href="#循环" class="headerlink" title="循环"></a>循环</h2><p><strong>while语句</strong></p><p>有两种模式的while语句</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">while conditional [do]</span><br><span class="line">   code</span><br><span class="line">end</span><br></pre></td></tr></table></figure><p><strong>demo</strong></p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span> <span class="number">1</span>&lt;<span class="number">2</span> <span class="symbol">:</span></span><br><span class="line">  puts <span class="string">"successd"</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><p><strong>until语句</strong></p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">until</span> conditional [<span class="keyword">do</span>]</span><br><span class="line">   code</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><p><strong>for循环</strong></p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> variable [, variable ...] <span class="keyword">in</span> expression [<span class="keyword">do</span>]</span><br><span class="line">   code</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><p>先计算表达式得到一个对象，然后针对 <em>expression</em> 中的每个元素分别执行一次 <em>code</em>。</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/ruby</span></span><br><span class="line"><span class="comment"># -*- coding: UTF-8 -*-</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="number">0</span>..<span class="number">5</span></span><br><span class="line">   puts <span class="string">"局部变量的值为 <span class="subst">#&#123;i&#125;</span>"</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><h1 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h1><p>ruby例子：<a href="https://github.com/inspec/inspec/tree/main/examples" target="_blank" rel="noopener">https://github.com/inspec/inspec/tree/main/examples</a></p>]]></content>
    
    <summary type="html">
    
      
      
        
        
          &lt;h1 id=&quot;Chef-InSpec介绍&quot;&gt;&lt;a
        
      
    
    </summary>
    
    
      <category term="AWS" scheme="https://blog.wjzhe.ml/categories/AWS/"/>
    
    
      <category term="AWS" scheme="https://blog.wjzhe.ml/tags/AWS/"/>
    
      <category term="Linux" scheme="https://blog.wjzhe.ml/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>AWS 注意事项</title>
    <link href="https://blog.wjzhe.ml/2022/04/17/awsnotion/"/>
    <id>https://blog.wjzhe.ml/2022/04/17/awsnotion/</id>
    <published>2022-04-17T16:00:00.000Z</published>
    <updated>2022-04-17T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="创建资源"><a href="#创建资源" class="headerlink" title="创建资源"></a>创建资源</h2><h2 id="额度限制"><a href="#额度限制" class="headerlink" title="额度限制"></a>额度限制</h2><p>创建资源需要注意以下要点：</p><p>如果是新账号，则有创建资源的限制，例如新账号可以使用的vcpu是有限制的。</p><p>以vCPU为例，EC2 vCPU 限制提高以 vCPU 值的形式提交。要请求提高，首先确定您的按需实例使用的 vCPU 数量。您可以使用 vCPU 限制计算器衡量您目前对基于 vCPU 的限制使用的 vCPU 数量，以确定要请求的适当服务限制提高。您可以从 vCPU 限制计算器中直接创建服务限制请求。</p><p><strong>解决方式</strong></p><ol><li>登录 <a href="https://console.aws.amazon.com/ec2/" target="_blank" rel="noopener">Amazon EC2 控制台</a>。</li><li>选择您要请求提高 vCPU 的 <a href="https://docs.aws.amazon.com/general/latest/gr/ec2-service.html#ec2_region" target="_blank" rel="noopener">AWS 区域</a>。</li><li>（可选）要查看您已经运行的实例，请从 <strong>EC2 控制面板</strong>的<strong>资源</strong>下选择<strong>正在运行的实例</strong>。</li><li>选择<strong>限制</strong>，然后选择<strong>计算 vCPU 限制</strong>以访问 vCPU 限制计算器。</li><li>选择<strong>添加实例类型</strong>。</li><li>在<strong>实例类型</strong>下，从下拉菜单中选择可用的实例类型。</li><li>在<strong>实例计数</strong>下，输入您想要的新实例（您在步骤 6 中选择的类型）数量。</li><li>根据需要继续添加实例类型。</li><li>查看<strong>限制计算</strong>。如果<strong>新限制</strong>超出<strong>当前限制</strong>，请选择<strong>请求提高限制</strong>以<a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-on-demand-instances.html#vcpu-limits-request-increase" target="_blank" rel="noopener">提交服务限制提高请求</a>。<strong>新限制</strong>字段中的值是您应请求的 vCPU 量。</li></ol><p><strong>每个服务限额查看</strong></p><p>todo</p><h2 id="EC2启动失败"><a href="#EC2启动失败" class="headerlink" title="EC2启动失败"></a>EC2启动失败</h2><table><thead><tr><th>名称</th><th>链接</th></tr></thead><tbody><tr><td>ec2未能通过两项检查</td><td><a href="https://aws.amazon.com/tw/premiumsupport/knowledge-center/ec2-linux-status-check-failure/" target="_blank" rel="noopener">https://aws.amazon.com/tw/premiumsupport/knowledge-center/ec2-linux-status-check-failure/</a></td></tr><tr><td>实例的状态检查和自动恢复</td><td><a href="https://zhuanlan.zhihu.com/p/268762562" target="_blank" rel="noopener">https://zhuanlan.zhihu.com/p/268762562</a></td></tr><tr><td>常见故障排查</td><td><a href="https://docs.amazonaws.cn/AWSEC2/latest/UserGuide/TroubleshootingInstances.html" target="_blank" rel="noopener">https://docs.amazonaws.cn/AWSEC2/latest/UserGuide/TroubleshootingInstances.html</a></td></tr><tr><td></td><td></td></tr></tbody></table><h2 id="备份制度"><a href="#备份制度" class="headerlink" title="备份制度"></a>备份制度</h2><p>创建的资源需要设置备份，备份机制如下所示</p><p><strong>EC2</strong></p><p>EC2需要备份快照机制，分为两种方式：</p><ul><li>环境应用变更，如果需要对应用进行改变，则需要在改变前进行临时的备份快照；</li><li>日常备份机制，根据客户的RTO与RPO选择不同的备份机制<ul><li>如果是分钟级别的RTO，推荐使用AWS Cloudendure</li><li>如果是天级别的RTO，推荐使用EC2自带的生命周期备份机制</li></ul></li></ul><h1 id="创建web应用"><a href="#创建web应用" class="headerlink" title="创建web应用"></a>创建web应用</h1><p><strong>备案问题</strong></p><p>如果使用的是国内的ELB应用，不通的话，可能是因为备案问题。国内的客户需要在aws上在进行一次备案，链接：<a href="https://www.nwcdcloud.cn/icp.pdf" target="_blank" rel="noopener">https://www.nwcdcloud.cn/icp.pdf</a></p><p><strong>ddos攻击</strong></p><p>需要最客户的web应用做一个简单的放ddos攻击。例如每分钟只允许同一个IP访问固定次数</p>]]></content>
    
    <summary type="html">
    
      
      
        
        
          &lt;h2 id=&quot;创建资源&quot;&gt;&lt;a href=&quot;#创建资源&quot;
        
      
    
    </summary>
    
    
      <category term="AWS" scheme="https://blog.wjzhe.ml/categories/AWS/"/>
    
    
      <category term="AWS" scheme="https://blog.wjzhe.ml/tags/AWS/"/>
    
      <category term="Linux" scheme="https://blog.wjzhe.ml/tags/Linux/"/>
    
  </entry>
  
</feed>
