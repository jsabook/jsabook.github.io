<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Qier&#39;s blog</title>
  <icon>https://blog.wjzhe.ml/icon.png</icon>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://blog.wjzhe.ml/"/>
  <updated>2022-04-20T07:49:49.900Z</updated>
  <id>https://blog.wjzhe.ml/</id>
  
  <author>
    <name>qier</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>UseOpenVPN</title>
    <link href="https://blog.wjzhe.ml/2022/04/20/UseOpenVPN/"/>
    <id>https://blog.wjzhe.ml/2022/04/20/UseOpenVPN/</id>
    <published>2022-04-20T07:49:49.900Z</published>
    <updated>2022-04-20T07:49:49.900Z</updated>
    
    <content type="html"><![CDATA[<h1 id="OpenVPN使用手册"><a href="#OpenVPN使用手册" class="headerlink" title="OpenVPN使用手册"></a>OpenVPN使用手册</h1><p>使用账号密码认证来配置，可以轻松实现多人登录使用VPN。OpenVPN所有的通信都基于一个单一的IP端口。OpenVPN 是一个开源的应用程序，它允许您通过公共互联网创建一个安全的专用网络。OpenVPN 实现一个虚拟专用网（VPN）来创建一个安全连接。OpenVPN 使用 OpenSSL 库提供加密，它提供了几种身份验证机制，如基于证书的、预共享密钥和用户名/密码身份验证。</p><h1 id="1-软件版本"><a href="#1-软件版本" class="headerlink" title="1. 软件版本"></a>1. 软件版本</h1><ul><li>Centos - 7.9</li><li>easy-rsa - 3.0.8</li><li>OpenVPN - 2.4.7</li></ul><h1 id="2-安装"><a href="#2-安装" class="headerlink" title="2. 安装"></a>2. 安装</h1><p>本文使用yum来安装openvpn，openvpn及其依赖的一些包在epel源上，首先先安装epel源。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#更新yum</span></span><br><span class="line">yum update -y</span><br><span class="line"><span class="comment">#安装epel源</span></span><br><span class="line">yum install -y epel-release</span><br><span class="line"><span class="comment">#安装依赖包</span></span><br><span class="line">yum install -y openssl lzo pam openssl-devel lzo-devel pam-devel</span><br><span class="line">yum install -y easy-rsa</span><br><span class="line"><span class="comment">#安装openvpn</span></span><br><span class="line">yum install -y openvpn</span><br></pre></td></tr></table></figure><h1 id="3-配置"><a href="#3-配置" class="headerlink" title="3. 配置"></a>3. 配置</h1><p>已经安装好了openvpn了，下面我们对openvpn进行配置。</p><h3 id="3-1-连接方式"><a href="#3-1-连接方式" class="headerlink" title="3.1 连接方式"></a>3.1 连接方式</h3><p>使用路由方式连接，确定私有子网：</p><p>Server 与 Client 的VPN通道子网，不要与已有环境的网络冲突即可。</p><p>默认：10.8.0.0/16</p><h3 id="3-2-配置证书密钥"><a href="#3-2-配置证书密钥" class="headerlink" title="3.2 配置证书密钥"></a>3.2 配置证书密钥</h3><p>我们通过yum方式安装的 easy-rsa 版本是3.0.8，直接从安装路径copy一份工具出来。这里用默认的 easy-rsa 3.0.8 来配置生成证书密钥。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#复制easy-rsa工具</span></span><br><span class="line">cp -rf /usr/share/easy-rsa/3.0.8 /etc/openvpn/server/easy-rsa</span><br><span class="line"><span class="built_in">cd</span> /etc/openvpn/server/easy-rsa</span><br><span class="line"><span class="comment">#生成证书密钥</span></span><br><span class="line">./easyrsa init-pki</span><br><span class="line">./easyrsa build-ca nopass</span><br><span class="line">./easyrsa build-server-full server nopass</span><br><span class="line"><span class="comment">#下面这步可能要几分钟</span></span><br><span class="line">./easyrsa gen-dh</span><br><span class="line">openvpn --genkey --secret ta.key  <span class="comment">#TLS-auth密钥</span></span><br></pre></td></tr></table></figure><h3 id="3-3-配置Server端"><a href="#3-3-配置Server端" class="headerlink" title="3.3 配置Server端"></a>3.3 配置Server端</h3><h4 id="3-3-1-创建使用的目录"><a href="#3-3-1-创建使用的目录" class="headerlink" title="3.3.1 创建使用的目录"></a>3.3.1 创建使用的目录</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 日志存放目录</span></span><br><span class="line">mkdir -p /var/<span class="built_in">log</span>/openvpn/</span><br><span class="line"><span class="comment"># 用户管理目录</span></span><br><span class="line">mkdir -p /etc/openvpn/server/user</span><br><span class="line"><span class="comment"># 配置权限</span></span><br><span class="line">chown -R openvpn:openvpn /var/<span class="built_in">log</span>/openvpn</span><br></pre></td></tr></table></figure><h4 id="3-3-2-创建Server配置文件"><a href="#3-3-2-创建Server配置文件" class="headerlink" title="3.3.2 创建Server配置文件"></a>3.3.2 创建Server配置文件</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line">#编辑server.conf文件</span><br><span class="line">yum install -y vim</span><br><span class="line">vim /etc/openvpn/server/server.conf</span><br><span class="line">    </span><br><span class="line">#服务器openvpn基本配置，写入以下内容</span><br><span class="line">    </span><br><span class="line"># 配置权限</span><br><span class="line">port <span class="number">1194</span>  #监听端口号</span><br><span class="line">proto tcp   #服务端用的协议，可以为tcp/udp</span><br><span class="line">dev tun   #指定创建的通信隧道类型，可选tun或tap</span><br><span class="line">user openvpn</span><br><span class="line">group openvpn</span><br><span class="line"></span><br><span class="line">#配置证书信息</span><br><span class="line">ca /etc/openvpn/server/easy-rsa/pki/ca.crt #CA 根证书路径</span><br><span class="line">cert /etc/openvpn/server/easy-rsa/pki/issued/server.crt  <span class="meta">#open VPN 服务器证书路径</span></span><br><span class="line">key /etc/openvpn/server/easy-rsa/pki/<span class="keyword">private</span>/server.key  <span class="meta">#open VPN 服务器密钥路径</span></span><br><span class="line">dh /etc/openvpn/server/easy-rsa/pki/dh.pem #Diffie-Hellman 算法密钥文件路径</span><br><span class="line">tls-auth /etc/openvpn/server/easy-rsa/ta.key <span class="number">0</span> </span><br><span class="line">#  开启TLS-auth，使用防御攻击。服务器端的第二个参数值为<span class="number">0</span>，客户端的为</span><br><span class="line"></span><br><span class="line">#配置账号密码的认证方式</span><br><span class="line">auth-user-pass-verify /etc/openvpn/server/user/checkpsw.sh via-env</span><br><span class="line">script-security <span class="number">3</span></span><br><span class="line">verify-client-cert none</span><br><span class="line">username-as-common-name</span><br><span class="line">client-to-client  #允许客户端与客户端相连接，默认情况下客户端只能与服务器相连接</span><br><span class="line">duplicate-cn</span><br><span class="line"></span><br><span class="line">#配置网络信息</span><br><span class="line">server <span class="number">10.8</span><span class="number">.0</span><span class="number">.0</span> <span class="number">255.255</span><span class="number">.255</span><span class="number">.0</span></span><br><span class="line"># 该网段为 open VPN 虚拟网卡网段，不要和内网网段冲突即可。open VPN 默认为 <span class="number">10.8</span><span class="number">.0</span><span class="number">.0</span>/<span class="number">24</span></span><br><span class="line">push <span class="string">"dhcp-option DNS 223.5.5.5"</span></span><br><span class="line">push <span class="string">"dhcp-option DNS 114.114.114.114"</span></span><br><span class="line">push <span class="string">"route 192.168.1.0 255.255.255.0"</span> #修改网段为内网网段</span><br><span class="line">push <span class="string">"route 192.168.2.0 255.255.255.0"</span> #同上</span><br><span class="line"></span><br><span class="line">compress lzo  #使用lzo压缩的通讯,服务端和客户端都必须配置</span><br><span class="line">cipher AES<span class="number">-256</span>-GCM  #加密认证算法</span><br><span class="line">keepalive <span class="number">10</span> <span class="number">120</span>  #每<span class="number">10</span>秒ping一次，连接超时时间设为<span class="number">120</span>秒</span><br><span class="line">persist-key  #重启时仍保留一些状态</span><br><span class="line">persist-tun</span><br><span class="line">verb <span class="number">3</span>  #指定日志文件的记录详细级别，可选<span class="number">0</span><span class="number">-9</span>，等级越高日志内容越详细</span><br><span class="line"></span><br><span class="line"><span class="built_in">log</span> /var/<span class="built_in">log</span>/openvpn/server.<span class="built_in">log</span> #指定 <span class="built_in">log</span> 文件位置</span><br><span class="line"><span class="built_in">log</span>-append /var/<span class="built_in">log</span>/openvpn/server.<span class="built_in">log</span></span><br><span class="line">status /var/<span class="built_in">log</span>/openvpn/status.<span class="built_in">log</span></span><br></pre></td></tr></table></figure><h4 id="3-3-3-创建用户密码文件"><a href="#3-3-3-创建用户密码文件" class="headerlink" title="3.3.3 创建用户密码文件"></a>3.3.3 创建用户密码文件</h4><p>格式是<code>用户 密码</code>以空格分割即可，这里将用户名设置为<strong>mytest</strong>，密码设置为<strong>mytestpass</strong>。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">'mytest mytestpass'</span> &gt;&gt; /etc/openvpn/server/user/psw-file</span><br><span class="line">chmod 600 /etc/openvpn/server/user/psw-file</span><br><span class="line">chown openvpn:openvpn /etc/openvpn/server/user/psw-file</span><br></pre></td></tr></table></figure><h4 id="3-3-4-创建密码检查脚本"><a href="#3-3-4-创建密码检查脚本" class="headerlink" title="3.3.4 创建密码检查脚本"></a>3.3.4 创建密码检查脚本</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#新建shell文件</span></span><br><span class="line">vim /etc/openvpn/server/user/checkpsw.sh</span><br><span class="line"></span><br><span class="line"><span class="comment">#在shell文件中写入以下内容</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line"></span><br><span class="line">PASSFILE=<span class="string">"/etc/openvpn/server/user/psw-file"</span></span><br><span class="line">LOG_FILE=<span class="string">"/var/log/openvpn/password.log"</span></span><br><span class="line">TIME_STAMP=`date <span class="string">"+%Y-%m-%d %T"</span>`</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ ! -r <span class="string">"<span class="variable">$&#123;PASSFILE&#125;</span>"</span> ]; <span class="keyword">then</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">"<span class="variable">$&#123;TIME_STAMP&#125;</span>: Could not open password file \"<span class="variable">$&#123;PASSFILE&#125;</span>\" for reading."</span> &gt;&gt;  <span class="variable">$&#123;LOG_FILE&#125;</span></span><br><span class="line">  <span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">CORRECT_PASSWORD=`awk <span class="string">'!/^;/&amp;&amp;!/^#/&amp;&amp;$1=="'</span><span class="variable">$&#123;username&#125;</span><span class="string">'"&#123;print $2;exit&#125;'</span> <span class="variable">$&#123;PASSFILE&#125;</span>`</span><br><span class="line"><span class="keyword">if</span> [ <span class="string">"<span class="variable">$&#123;CORRECT_PASSWORD&#125;</span>"</span> = <span class="string">""</span> ]; <span class="keyword">then</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">"<span class="variable">$&#123;TIME_STAMP&#125;</span>: User does not exist: username=\"<span class="variable">$&#123;username&#125;</span>\", password=</span></span><br><span class="line"><span class="string">\"<span class="variable">$&#123;password&#125;</span>\"."</span> &gt;&gt; <span class="variable">$&#123;LOG_FILE&#125;</span></span><br><span class="line">  <span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="string">"<span class="variable">$&#123;password&#125;</span>"</span> = <span class="string">"<span class="variable">$&#123;CORRECT_PASSWORD&#125;</span>"</span> ]; <span class="keyword">then</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">"<span class="variable">$&#123;TIME_STAMP&#125;</span>: Successful authentication: username=\"<span class="variable">$&#123;username&#125;</span>\"."</span> &gt;&gt; <span class="variable">$&#123;LOG_FILE&#125;</span></span><br><span class="line">  <span class="built_in">exit</span> 0</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"<span class="variable">$&#123;TIME_STAMP&#125;</span>: Incorrect password: username=\"<span class="variable">$&#123;username&#125;</span>\", password=</span></span><br><span class="line"><span class="string">\"<span class="variable">$&#123;password&#125;</span>\"."</span> &gt;&gt; <span class="variable">$&#123;LOG_FILE&#125;</span></span><br><span class="line"><span class="built_in">exit</span> 1</span><br></pre></td></tr></table></figure><p>赋予可执行的权限</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">chmod 700 &#x2F;etc&#x2F;openvpn&#x2F;server&#x2F;user&#x2F;checkpsw.sh</span><br><span class="line">chown openvpn:openvpn &#x2F;etc&#x2F;openvpn&#x2F;server&#x2F;user&#x2F;checkpsw.sh</span><br></pre></td></tr></table></figure><h4 id="3-3-5-防火墙配置"><a href="#3-3-5-防火墙配置" class="headerlink" title="3.3.5 防火墙配置"></a>3.3.5 防火墙配置</h4><ul><li>防火墙</li></ul><p>禁用centos7默认的firewalld，使用iptables防火墙管理软件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl stop firewalld</span><br><span class="line">systemctl mask firewalld</span><br></pre></td></tr></table></figure><ul><li>禁用SELinux</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#临时生效</span></span><br><span class="line">setenforce 0</span><br><span class="line"></span><br><span class="line"><span class="comment">#永久关闭，配置后需要重启服务器生效</span></span><br><span class="line">sed -i <span class="string">'s/SELINUX=enforcing/SELINUX=disabled/g'</span> /etc/selinux/config</span><br></pre></td></tr></table></figure><ul><li><p>iptables</p><p>启用iptables</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">yum install iptables-services</span><br><span class="line">systemctl <span class="built_in">enable</span> iptables</span><br><span class="line">systemctl start iptables</span><br><span class="line">iptables -F   <span class="comment"># 清理所有防火墙规则</span></span><br></pre></td></tr></table></figure><p>添加防火墙规则</p><p>将openvpn的网络流量转发到内网（172.31.0.0）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 如下网段记得与server.conf 当中定义的网段保持一致</span><br><span class="line">iptables -t nat -A POSTROUTING -s 10.8.0.0&#x2F;24 -o eth0 -j MASQUERADE</span><br><span class="line">iptables -L -t nat</span><br><span class="line">iptables-save &gt; &#x2F;etc&#x2F;sysconfig&#x2F;iptables   # iptables 规则持久化保存</span><br></pre></td></tr></table></figure></li></ul><ul><li>Linux服务器启用地址转发</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">vi /etc.sysctl.conf</span><br><span class="line"><span class="comment">#在最后一行添加以下内容</span></span><br><span class="line">net.ipv4.ip_forward = 1</span><br><span class="line"></span><br><span class="line"><span class="comment">#执行生效</span></span><br><span class="line">sysctl -p</span><br></pre></td></tr></table></figure><p>===============================以下是firewalld配置可不看=========================</p><ul><li><p>firewalld</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">yum install -y firewall-<span class="function">cmd <span class="title">config</span>(<span class="params">替换为下一句</span>)</span></span><br><span class="line"><span class="function">yum install -y firewalld firewall-config</span></span><br><span class="line"><span class="function">firewall-cmd --permanent --<span class="keyword">add</span>-masquerade</span></span><br><span class="line"><span class="function">firewall-cmd --permanent --<span class="keyword">add</span>-service</span>=openvpn</span><br><span class="line"><span class="meta"># 或者添加自定义端口</span></span><br><span class="line">firewall-cmd --permanent  --<span class="keyword">add</span>-port=<span class="number">1194</span>/tcp</span><br><span class="line">firewall-cmd --permanent --direct --passthrough ipv4 -t nat -A POSTROUTING -s <span class="number">10.8</span><span class="number">.0</span><span class="number">.0</span>/<span class="number">24</span> -o eth0 -j MASQUERADE</span><br><span class="line">firewall-cmd --reload</span><br></pre></td></tr></table></figure></li></ul><p>注：</p><p>如果执行失败需确认防火墙是否开启。</p><p>1、查看防火墙状态：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl status firewalld</span><br></pre></td></tr></table></figure><p><img src="image-202112101642112212.png" alt="img"></p><p>inactive表示防火墙为关闭状态。</p><p>2、开启防火墙</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl start firewalld</span><br></pre></td></tr></table></figure><p><img src="1914529-20200402110749768-1286835379.png" alt="img"></p><p>启动后无任何提示，再次查看防火墙状态，可以看到变成active，成功启动。</p><p>3、关闭防火墙</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl stop firewalld</span><br></pre></td></tr></table></figure><p>===============================以上是firewalld配置可不看=========================</p><h4 id="3-3-6-启动服务"><a href="#3-3-6-启动服务" class="headerlink" title="3.3.6 启动服务"></a>3.3.6 启动服务</h4><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nohup openvpn /etc/openvpn/server/server.conf &gt;<span class="regexp">/dev/</span><span class="literal">null</span> <span class="number">2</span>&gt;&amp;<span class="number">1</span> &amp;</span><br></pre></td></tr></table></figure><p>启动之后，服务端有一个tun0的网卡，如下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">tun0: flags=4305&lt;UP,POINTOPOINT,RUNNING,NOARP,MULTICAST&gt;  mtu 1500</span><br><span class="line">        inet 10.8.0.1  netmask 255.255.255.255  destination 10.8.0.2</span><br><span class="line">        inet6 fe80::10da:ceb2:8a1c:4b4f  prefixlen 64  scopeid 0x20&lt;link&gt;</span><br><span class="line">        unspec 00-00-00-00-00-00-00-00-00-00-00-00-00-00-00-00  txqueuelen 100  (UNSPEC)</span><br><span class="line">        RX packets 0  bytes 0 (0.0 B)</span><br><span class="line">        RX errors 0  dropped 0  overruns 0  frame 0</span><br><span class="line">        TX packets 3  bytes 144 (144.0 B)</span><br><span class="line">        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0</span><br></pre></td></tr></table></figure><p>开机自启动部分待设定</p><h3 id="3-4-配置客户端"><a href="#3-4-配置客户端" class="headerlink" title="3.4 配置客户端"></a>3.4 配置客户端</h3><p>客户端我们同样使用2.4.7的版本，下载连接：</p><p><a href="https://www.techspot.com/downloads/5182-openvpn.html" target="_blank" rel="noopener">https://www.techspot.com/downloads/5182-openvpn.html</a></p><p>因为我们前面配置的是账号密码认证，所以我们只需要下载ca.crt、ta.key文件即可，从server上将生成的<code>ca.crt</code>、<code>ta.key</code>下载到客户端的安装目录 config下。</p><p><code>ca.crt</code>文件路径：/etc/openvpn/server/easy-rsa/pki/ca.crt</p><p><code>ta.key</code>文件路径：/etc/openvpn/server/easy-rsa/ta.key</p><p> 在config目录下新建一个文件 client.ovpn，文件内容如下：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">client</span></span><br><span class="line"><span class="selector-tag">proto</span> <span class="selector-tag">tcp</span></span><br><span class="line"><span class="selector-tag">dev</span> <span class="selector-tag">tun</span></span><br><span class="line"><span class="selector-tag">auth-user-pass</span></span><br><span class="line"><span class="selector-tag">remote</span> <span class="selector-tag">your</span><span class="selector-class">.domain</span><span class="selector-class">.com</span> 1194 </span><br><span class="line"><span class="selector-id">#1194</span>为虚机开放的端口号，与前文中的配置要统一</span><br><span class="line"><span class="selector-id">#your</span><span class="selector-class">.domain</span><span class="selector-class">.com</span>替换为<span class="selector-tag">Linux</span>虚机的域名地址或者是该虚机的公有地址</span><br><span class="line"><span class="selector-tag">ca</span> <span class="selector-tag">ca</span><span class="selector-class">.crt</span></span><br><span class="line"><span class="selector-tag">tls-auth</span> <span class="selector-tag">ta</span><span class="selector-class">.key</span> 1</span><br><span class="line"><span class="selector-tag">remote-cert-tls</span> <span class="selector-tag">server</span></span><br><span class="line"><span class="selector-tag">cipher</span> <span class="selector-tag">AES-256-GCM</span></span><br><span class="line"><span class="selector-tag">auth-nocache</span></span><br><span class="line"><span class="selector-tag">persist-tun</span></span><br><span class="line"><span class="selector-tag">persist-key</span></span><br><span class="line"><span class="selector-tag">compress</span> <span class="selector-tag">lzo</span></span><br><span class="line"><span class="selector-tag">verb</span> 3</span><br><span class="line"><span class="selector-tag">mute</span> 10</span><br></pre></td></tr></table></figure><p><img src="image-202202251425255491.png" alt="image-20220225142525549"></p><p>右键openvpn客户端图标的选项，需确认OpenVPN的设置如下：</p><p><img src="image-20220225143238564.png" alt="image-20220225143238563"></p><p>保存退出之后，我们启动openvpn的客户端，然后输入账号密码即可登录。</p><p><img src="image-202202251427318342.png" alt="image-20220225142731834"></p><p>telnet测试内网连通性</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">telnet 172.31.27.207 22</span><br><span class="line"><span class="comment">#telnet 内网ip 22端口</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        
        
          &lt;h1 id=&quot;OpenVPN使用手册&quot;&gt;&lt;a
        
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>ocrmarche</title>
    <link href="https://blog.wjzhe.ml/2022/04/20/ocrmarche/"/>
    <id>https://blog.wjzhe.ml/2022/04/20/ocrmarche/</id>
    <published>2022-04-20T07:49:49.900Z</published>
    <updated>2022-04-20T07:49:49.900Z</updated>
    
    <content type="html"><![CDATA[<h1 id="创建ECR仓库"><a href="#创建ECR仓库" class="headerlink" title="创建ECR仓库"></a>创建ECR仓库</h1><p><img src="img/image-20220330202021887.png" alt="image-20220330202021887"></p><p>查看推送命令</p><p><img src="img/image-20220330202049665.png" alt="image-20220330202049665"></p><p>依次执行推送命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 629244530291.dkr.ecr.us-east-1.amazonaws.com</span><br></pre></td></tr></table></figure><p>登录成功</p><p><img src="img/image-20220330202822297.png" alt="image-20220330202822297"></p><p>打包镜像</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker build -t ocrhandler .</span><br></pre></td></tr></table></figure><p><img src="img/image-20220330202857788.png" alt="image-20220330202857788"></p><p>标记</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker tag ocrhandler:latest 629244530291.dkr.ecr.us-east-1.amazonaws.com&#x2F;ocrhandler:latest</span><br></pre></td></tr></table></figure><p><img src="img/image-20220330202917632.png" alt="image-20220330202917632"></p><p>推送完毕</p><p><img src="img/image-20220330203210389.png" alt="image-20220330203210389"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 629244530291.dkr.ecr.us-east-1.amazonaws.com &amp;&amp; docker build -t ocrhandler . &amp;&amp; docker tag ocrhandler:latest 629244530291.dkr.ecr.us-east-1.amazonaws.com&#x2F;ocrhandler:latest &amp;&amp; docker push 629244530291.dkr.ecr.us-east-1.amazonaws.com&#x2F;ocrhandler:latest</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        
        
          &lt;h1 id=&quot;创建ECR仓库&quot;&gt;&lt;a
        
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>AWS 注意事项</title>
    <link href="https://blog.wjzhe.ml/2022/04/17/awsnotion/"/>
    <id>https://blog.wjzhe.ml/2022/04/17/awsnotion/</id>
    <published>2022-04-17T16:00:00.000Z</published>
    <updated>2022-04-17T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="创建资源"><a href="#创建资源" class="headerlink" title="创建资源"></a>创建资源</h2><h2 id="额度限制"><a href="#额度限制" class="headerlink" title="额度限制"></a>额度限制</h2><p>创建资源需要注意以下要点：</p><p>如果是新账号，则有创建资源的限制，例如新账号可以使用的vcpu是有限制的。</p><p>以vCPU为例，EC2 vCPU 限制提高以 vCPU 值的形式提交。要请求提高，首先确定您的按需实例使用的 vCPU 数量。您可以使用 vCPU 限制计算器衡量您目前对基于 vCPU 的限制使用的 vCPU 数量，以确定要请求的适当服务限制提高。您可以从 vCPU 限制计算器中直接创建服务限制请求。</p><p><strong>解决方式</strong></p><ol><li>登录 <a href="https://console.aws.amazon.com/ec2/" target="_blank" rel="noopener">Amazon EC2 控制台</a>。</li><li>选择您要请求提高 vCPU 的 <a href="https://docs.aws.amazon.com/general/latest/gr/ec2-service.html#ec2_region" target="_blank" rel="noopener">AWS 区域</a>。</li><li>（可选）要查看您已经运行的实例，请从 <strong>EC2 控制面板</strong>的<strong>资源</strong>下选择<strong>正在运行的实例</strong>。</li><li>选择<strong>限制</strong>，然后选择<strong>计算 vCPU 限制</strong>以访问 vCPU 限制计算器。</li><li>选择<strong>添加实例类型</strong>。</li><li>在<strong>实例类型</strong>下，从下拉菜单中选择可用的实例类型。</li><li>在<strong>实例计数</strong>下，输入您想要的新实例（您在步骤 6 中选择的类型）数量。</li><li>根据需要继续添加实例类型。</li><li>查看<strong>限制计算</strong>。如果<strong>新限制</strong>超出<strong>当前限制</strong>，请选择<strong>请求提高限制</strong>以<a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-on-demand-instances.html#vcpu-limits-request-increase" target="_blank" rel="noopener">提交服务限制提高请求</a>。<strong>新限制</strong>字段中的值是您应请求的 vCPU 量。</li></ol><p><strong>每个服务限额查看</strong></p><p>todo</p><h2 id="EC2启动失败"><a href="#EC2启动失败" class="headerlink" title="EC2启动失败"></a>EC2启动失败</h2><table><thead><tr><th>名称</th><th>链接</th></tr></thead><tbody><tr><td>ec2未能通过两项检查</td><td><a href="https://aws.amazon.com/tw/premiumsupport/knowledge-center/ec2-linux-status-check-failure/" target="_blank" rel="noopener">https://aws.amazon.com/tw/premiumsupport/knowledge-center/ec2-linux-status-check-failure/</a></td></tr><tr><td>实例的状态检查和自动恢复</td><td><a href="https://zhuanlan.zhihu.com/p/268762562" target="_blank" rel="noopener">https://zhuanlan.zhihu.com/p/268762562</a></td></tr><tr><td>常见故障排查</td><td><a href="https://docs.amazonaws.cn/AWSEC2/latest/UserGuide/TroubleshootingInstances.html" target="_blank" rel="noopener">https://docs.amazonaws.cn/AWSEC2/latest/UserGuide/TroubleshootingInstances.html</a></td></tr><tr><td></td><td></td></tr></tbody></table><h2 id="备份制度"><a href="#备份制度" class="headerlink" title="备份制度"></a>备份制度</h2><p>创建的资源需要设置备份，备份机制如下所示</p><p><strong>EC2</strong></p><p>EC2需要备份快照机制，分为两种方式：</p><ul><li>环境应用变更，如果需要对应用进行改变，则需要在改变前进行临时的备份快照；</li><li>日常备份机制，根据客户的RTO与RPO选择不同的备份机制<ul><li>如果是分钟级别的RTO，推荐使用AWS Cloudendure</li><li>如果是天级别的RTO，推荐使用EC2自带的生命周期备份机制</li></ul></li></ul><h1 id="创建web应用"><a href="#创建web应用" class="headerlink" title="创建web应用"></a>创建web应用</h1><p><strong>备案问题</strong></p><p>如果使用的是国内的ELB应用，不通的话，可能是因为备案问题。国内的客户需要在aws上在进行一次备案，链接：<a href="https://www.nwcdcloud.cn/icp.pdf" target="_blank" rel="noopener">https://www.nwcdcloud.cn/icp.pdf</a></p><p><strong>ddos攻击</strong></p><p>需要最客户的web应用做一个简单的放ddos攻击。例如每分钟只允许同一个IP访问固定次数</p>]]></content>
    
    <summary type="html">
    
      
      
        
        
          &lt;h2 id=&quot;创建资源&quot;&gt;&lt;a href=&quot;#创建资源&quot;
        
      
    
    </summary>
    
    
      <category term="AWS" scheme="https://blog.wjzhe.ml/categories/AWS/"/>
    
    
      <category term="AWS" scheme="https://blog.wjzhe.ml/tags/AWS/"/>
    
      <category term="Linux" scheme="https://blog.wjzhe.ml/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Centos7 密钥登录</title>
    <link href="https://blog.wjzhe.ml/2022/04/12/pemConnect/"/>
    <id>https://blog.wjzhe.ml/2022/04/12/pemConnect/</id>
    <published>2022-04-12T16:00:00.000Z</published>
    <updated>2022-04-12T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong>创建密钥文件</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa</span><br></pre></td></tr></table></figure><p><strong>传输密钥文件</strong></p><p>使用命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-copy-id -i LocalRoche.pub root@192.168.15.112</span><br></pre></td></tr></table></figure><p>或者直接讲 <code>LocalRoche.pub</code>文件放置于/root/.ssh/目录下的<code>id_rsa.pub</code>文件中，如果该文件中已经存在其他用户公钥，只要追加即可。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cat &gt;&gt;&#x2F;root&#x2F;.ssh&#x2F;id_rsa.pub&lt;&lt;EOF</span><br><span class="line">公钥内容</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><p><strong>修改sshd配置文件</strong></p><p>通过命令已经将公钥文件传递到Linux，之后，则需要修改ssh server的配置文件。配置文件位置在于<code>/etc/ssh/sshd_config</code>，需要修改文件内的以下几行内容。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">PubkeyAuthentication yes # 开启密钥登入的认证方式</span><br><span class="line">PermitRootLogin yes #此处请留意 root 用户能否通过 SSH 登录，默认为yes：</span><br><span class="line">PasswordAuthentication yes #当我们完成全部设置并以密钥方式登录成功后，可以禁用密码登录。这里我们先不禁用，先允许密码登陆</span><br></pre></td></tr></table></figure><blockquote><p> PS:关键修改参数一些说明（安全等级更高）：</p><p> #禁用root账户登录，非必要，但为了安全性，请配置<br> PermitRootLogin no</p><p> # 是否让 sshd 去检查用户家目录或相关档案的权限数据，<br> # 这是为了担心使用者将某些重要档案的权限设错，可能会导致一些问题所致。<br> # 例如使用者的 ~.ssh/ 权限设错时，某些特殊情况下会不许用户登入<br> StrictModes no</p><p> # 是否允许用户自行使用成对的密钥系统进行登入行为，仅针对 version 2。<br> # 至于自制的公钥数据就放置于用户家目录下的 .ssh/authorized_keys 内<br> RSAAuthentication yes<br> PubkeyAuthentication yes<br> AuthorizedKeysFile   .ssh/authorized_keys</p><p> #有了证书登录了，就禁用密码登录吧，安全要紧<br> PasswordAuthentication no</p></blockquote><p><strong>重启sshd服务</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service sshd restart  #最后，重启 SSH 服务：</span><br></pre></td></tr></table></figure><p>查看sshd状态是否正常</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service sshd status</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;&lt;strong&gt;创建密钥文件&lt;/strong&gt;&lt;/p&gt;
&lt;
        
      
    
    </summary>
    
    
      <category term="Linux" scheme="https://blog.wjzhe.ml/categories/Linux/"/>
    
    
      <category term="Linux" scheme="https://blog.wjzhe.ml/tags/Linux/"/>
    
      <category term="Centos" scheme="https://blog.wjzhe.ml/tags/Centos/"/>
    
  </entry>
  
  <entry>
    <title>AWS ALB负载均衡</title>
    <link href="https://blog.wjzhe.ml/2022/04/05/ALBbalance/"/>
    <id>https://blog.wjzhe.ml/2022/04/05/ALBbalance/</id>
    <published>2022-04-05T16:00:00.000Z</published>
    <updated>2022-04-05T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="ALB负载均衡"><a href="#ALB负载均衡" class="headerlink" title="ALB负载均衡"></a>ALB负载均衡</h1><h2 id="Part1-AWS-ALB介绍"><a href="#Part1-AWS-ALB介绍" class="headerlink" title="Part1 AWS ALB介绍"></a>Part1 AWS ALB介绍</h2><p>ALB全称为Application Load Balancer，是AWS Elastic Load Balancing的一种。</p><p><strong>ALB工作原理</strong><br>Application Load Balancer 在应用程序层正常工作，该层是开放系统互连 (OSI) 模型的第 7 层。负载均衡器收到请求后，将按照优先级顺序评估侦听器规则以确定应用哪个规则，然后从目标组中选择规则操作目标。可以配置侦听器规则，以根据应用程序流量的内容，将请求路由至不同的目标组。每个目标组的路由都是单独进行的，即使某个目标已在多个目标组中注册。可以配置目标组级别使用的路由算法。默认路由算法为轮询路由算法；或者，可以指定最少未完成请求路由算法。</p><p>可以根据需求变化在负载均衡器中添加和删除目标，而不会中断应用程序的整体请求流。Elastic Load Balancing 根据传输到应用程序的流量随时间的变化对负载均衡器进行扩展。Elastic Load Balancing 能够自动扩展来处理绝大部分工作负载。</p><p>您可以配置运行状况检查，这些检查可用来监控注册目标的运行状况，以便负载均衡器只能将请求发送到正常运行的目标。</p><h2 id="Part2-实验内容"><a href="#Part2-实验内容" class="headerlink" title="Part2 实验内容"></a>Part2 实验内容</h2><ul><li>网络环境：VPC设置2个公共子网，要求2个公共子网在不同的可用区，每个公共子网内各有1台EC2，EC2上有一个简单的http服务。</li><li>负载均衡：要求创建一个负载均衡器，实现访问流量分配到2个EC2上。</li><li>路由要求：要求通过域名访问负载均衡器，并且实现https的访问。</li></ul><h2 id="Part3-实验步骤"><a href="#Part3-实验步骤" class="headerlink" title="Part3 实验步骤"></a>Part3 实验步骤</h2><h3 id="1-网络环境搭建"><a href="#1-网络环境搭建" class="headerlink" title="1.网络环境搭建"></a>1.网络环境搭建</h3><p>该部分主要的工作就是在VPC的两个不同可用区的公共子网内创建EC2，并部署http服务。<br>顺序：创建VPC–&gt;创建IGW并关联VPC–&gt;创建子网–&gt;创建安全组–&gt;创建EC2–&gt;部署服务</p><h4 id="1-1-创建VPC，不使用向导的方式创建"><a href="#1-1-创建VPC，不使用向导的方式创建" class="headerlink" title="1.1 创建VPC，不使用向导的方式创建"></a>1.1 创建VPC，不使用向导的方式创建</h4><p>点击“创建VPC”</p><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20220405214053861.png" alt="image-20220405214053861"></p><p>VPC配置</p><ul><li>仅VPC</li><li>名称：my-vpc-02</li><li>IPv4 CIDR：10.0.0.0/22</li></ul><p>点击创建</p><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20220405214158370.png" alt="image-20220405214158370"></p><h4 id="1-2-创建互联网网关"><a href="#1-2-创建互联网网关" class="headerlink" title="1.2 创建互联网网关"></a>1.2 创建互联网网关</h4><p>点击“创建互联网网关”</p><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20220405214408258.png" alt="image-20220405214408258"></p><p>设置IGW的名称为：my-igw-02，点击创建</p><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20220405214537236.png" alt="image-20220405214537236"></p><p>将创建的这个互联网网关关联到VPC上</p><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20220405214645641.png" alt="image-20220405214645641"></p><p>选择创建的这个VPC，点击关联</p><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20220405214712929.png" alt="image-20220405214712929"></p><p>在路由表页面选中my-vpc-02的路由表，并点击“编辑路由”</p><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20220405215548240.png" alt="image-20220405215548240"></p><p>增加一条新的路由信息，将IGW加入路由表，点击“保存更改”</p><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20220405215821313.png" alt="image-20220405215821313"></p><h4 id="1-3-创建子网"><a href="#1-3-创建子网" class="headerlink" title="1.3 创建子网"></a>1.3 创建子网</h4><p>在子网页面选择创建子网</p><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20220405214829109.png" alt="image-20220405214829109"></p><p>子网的配置信息</p><ul><li>VPC选择my-vpc-02</li><li>子网1<ul><li>名称：my-net2-01</li><li>可用区：us-east-1a</li><li>IPv4 CIDR：10.0.1.0/24</li></ul></li><li>子网2<ul><li>名称：my-net2-02</li><li>可用区：us-east-1b</li><li>IPv4 CIDR：10.0.2.0/24</li></ul></li></ul><p>点击创建</p><p>注：这里设置两个子网的可用区不同</p><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20220405214950454.png" alt="image-20220405214950454"></p><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20220405215012077.png" alt="image-20220405215012077"></p><h4 id="1-4-创建安全组"><a href="#1-4-创建安全组" class="headerlink" title="1.4 创建安全组"></a>1.4 创建安全组</h4><p>在安全组页面，点击“创建安全组”</p><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20220405220012731.png" alt="image-20220405220012731"></p><p>安全组配置</p><ul><li><p>名称：my-sg-02</p></li><li><p>描述：open 22 80 443 5000</p></li><li><p>VPC：选则my-vpc-02</p></li><li><p>入站规则</p><ul><li>TCP 22 0.0.0.0/0</li><li>TCP 80 0.0.0.0/0</li><li>TCP 443 0.0.0.0/0</li><li>TCP 5000 0.0.0.0/0</li></ul><p>配置完成之后点击创建</p><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20220405221347361.png" alt="image-20220405221347361"></p><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20220405221358408.png" alt="image-20220405221358408"></p></li></ul><h4 id="1-5-创建EC2"><a href="#1-5-创建EC2" class="headerlink" title="1.5 创建EC2"></a>1.5 创建EC2</h4><h5 id="1-5-1-第一台"><a href="#1-5-1-第一台" class="headerlink" title="1.5.1 第一台"></a>1.5.1 第一台</h5><p>点击“启动新实例”</p><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20220405220624810.png" alt="image-20220405220624810"></p><p>AMI选中centos7</p><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20220405220732793.png" alt="image-20220405220732793"></p><p>类型选择含免费套餐的这个，点击下一步</p><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20220405220823711.png" alt="image-20220405220823711"></p><p>EC2的网络配置：</p><ul><li>VPC：my-vpc-02</li><li>子网：us-east-1a</li><li>自动分配公有IP：禁用</li></ul><p>点击下一步</p><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20220405220946235.png" alt="image-20220405220946235"></p><p>添加存储，保持默认，点击下一步</p><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20220405221020586.png" alt="image-20220405221020586"></p><p>标签设置，Name：test-net2-01，点击下一步</p><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20220405221120138.png" alt="image-20220405221120138"></p><p>安全组配置，选择现有的安全组，选择my-sg-02，点击审核和启动</p><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20220405221633072.png" alt="image-20220405221633072"></p><p>审核完成之后点击启动</p><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20220405221703945.png" alt="image-20220405221703945"></p><p>密钥对，如果没有就新建，输入密钥对的名称；如果有，就使用现有的密钥对。</p><h5 id="1-5-2-第二台"><a href="#1-5-2-第二台" class="headerlink" title="1.5.2 第二台"></a>1.5.2 第二台</h5><p>大部分配置都与第一台相同</p><p>不同的配置如下</p><ul><li>子网设置与第一台不同，子网选择us-east-1b</li></ul><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20220405222054658.png" alt="image-20220405222054658"></p><ul><li>标签设置为Name：test-net2-02</li></ul><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20220405222129756.png" alt="image-20220405222129756"></p><h4 id="1-6-创建弹性IP"><a href="#1-6-创建弹性IP" class="headerlink" title="1.6 创建弹性IP"></a>1.6 创建弹性IP</h4><ol><li>在弹性IP页面，点击“分配弹性IP”</li></ol><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20220406010756355.png" alt="image-20220406010756355"></p><ol start="2"><li>直接点击分配即可</li></ol><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20220406010816653.png" alt="image-20220406010816653"></p><ol start="3"><li>将弹性IP分配到刚创建的EC2上</li></ol><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20220406011312797.png" alt="image-20220406011312797"></p><p>选择对应的EC2，选择IP，点击分配</p><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20220406011445860.png" alt="image-20220406011445860"></p><ol start="4"><li>重复1、2、3步骤，给另一个EC2(test-net2-02)也分配弹性IP</li></ol><h3 id="2-EC2部署简单应用"><a href="#2-EC2部署简单应用" class="headerlink" title="2.EC2部署简单应用"></a>2.EC2部署简单应用</h3><p>SSH上EC2，以下均以test-net2-01实例为例进行展示（test-net2-01实例上配置基本相同）</p><p>修改EC2的hostname，一台改成test-net2-01，另一台test-net2-02</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#修改hostname</span></span><br><span class="line">[centos@ip-10-0-1-59 ~]$ sudo -i</span><br><span class="line">[root@ip-10-0-1-59 ~]<span class="comment"># hostnamectl set-hostname test-net2-01</span></span><br><span class="line">[root@ip-10-0-1-59 ~]<span class="comment"># exit</span></span><br><span class="line"><span class="built_in">logout</span></span><br><span class="line">[centos@ip-10-0-1-59 ~]$ sudo -i</span><br></pre></td></tr></table></figure><p>安装pip包管理工具</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#安装pip包管理工具</span></span><br><span class="line">[root@<span class="built_in">test</span>-net2-01 ~]<span class="comment"># yum install -y wget</span></span><br><span class="line">[root@<span class="built_in">test</span>-net2-01 ~]<span class="comment"># wget https://bootstrap.pypa.io/pip/2.7/get-pip.py</span></span><br><span class="line">[root@<span class="built_in">test</span>-net2-01 ~]<span class="comment"># sudo python get-pip.py</span></span><br><span class="line">[root@<span class="built_in">test</span>-net2-01 ~]<span class="comment"># pip -V</span></span><br><span class="line">pip 20.3.4 from /usr/lib/python2.7/site-packages/pip (python 2.7)</span><br></pre></td></tr></table></figure><p>安装flask模块</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#安装flask模块</span></span><br><span class="line">[root@<span class="built_in">test</span>-net2-01 ~]<span class="comment"># pip install flask</span></span><br></pre></td></tr></table></figure><p>编写脚本文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@<span class="built_in">test</span>-net2-01 ~]<span class="comment"># vi http_test</span></span><br></pre></td></tr></table></figure><p>将以下内容复制到脚本文件中</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="comment">#coding=utf-8</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask</span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Response</span><br><span class="line"><span class="keyword">import</span> socket,json</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_hostname</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="comment"># 获取本机计算机名称</span></span><br><span class="line">    hostname = socket.gethostname()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> &#123;<span class="string">"hostname"</span>:hostname&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route("/")</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span><span class="params">()</span>:</span></span><br><span class="line">    result = get_hostname()</span><br><span class="line">    <span class="keyword">return</span> Response(json.dumps(result),  mimetype=<span class="string">'application/json'</span>)</span><br><span class="line"><span class="keyword">if</span> __name__==<span class="string">"__main__"</span>:</span><br><span class="line">    app.run(host=<span class="string">'0.0.0.0'</span>)</span><br></pre></td></tr></table></figure><p>保存后退出</p><p>后台运行脚本文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@<span class="built_in">test</span>-net2-01 ~]<span class="comment"># nohup python http_test &gt; nohup.log 2&gt;&amp;1 &amp;</span></span><br><span class="line">[1] 9315</span><br></pre></td></tr></table></figure><p>测试5000端口上的服务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@<span class="built_in">test</span>-net2-01 ~]<span class="comment"># curl 127.0.0.1:5000</span></span><br><span class="line">&#123;<span class="string">"hostname"</span>: <span class="string">"test-net2-01"</span>&#125;</span><br></pre></td></tr></table></figure><h3 id="3-创建ALB负载均衡器"><a href="#3-创建ALB负载均衡器" class="headerlink" title="3.创建ALB负载均衡器"></a>3.创建ALB负载均衡器</h3><h4 id="3-1-创建目标组"><a href="#3-1-创建目标组" class="headerlink" title="3.1 创建目标组"></a>3.1 创建目标组</h4><p>在目标群组页面点击“创建目标组”</p><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20220406014556009.png" alt="image-20220406014556009"></p><p>创建目标组，配置设置</p><ul><li>目标类型：实例</li><li>目标组名称：my-targer-02</li><li>协议：HTTP：5000（<font color=red>！此处不能修改成别的，一定要是HTTP协议</font>）<ul><li>端口为5000，是因为EC2上对应的服务在5000端口</li></ul></li><li>VPC：my-vpc-02</li></ul><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20220406015522649.png" alt="image-20220406015522649"></p><p>点击下一步</p><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20220406015535658.png" alt="image-20220406015535658"></p><p>将两个实例添加为目标，点击创建目标组</p><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20220406015820921.png" alt="image-20220406015820921"></p><h4 id="3-2-创建ALB负载均衡器"><a href="#3-2-创建ALB负载均衡器" class="headerlink" title="3.2 创建ALB负载均衡器"></a>3.2 创建ALB负载均衡器</h4><p>在负载均衡器页面，点击“新建负载均衡器”</p><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20220406014046173.png" alt="image-20220406014046173"></p><p>选择“Application Load Balancer”</p><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20220406014124888.png" alt="image-20220406014124888"></p><p>ALB配置</p><ul><li>名称：my-alb-02</li><li>VPC：my-vpc-02</li><li>映射：选择有公共子网的可用区，选好可用区之后选择子网</li><li>安全组：选择创建的my-sg-02</li><li>侦听器和路由：创建2个侦听器，分别是80和5000端口，流量转发至my-target-02</li></ul><p>配置完成之后，点击创建负载均衡器</p><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20220406020101041.png" alt="image-20220406020101041"></p><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20220406020144666.png" alt="image-20220406020144666"></p><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20220406020221584.png" alt="image-20220406020221584"></p><p><img src="images-ALB%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1/image-20220406020501241.png" alt="image-20220406020501241"></p><p>负载均衡器需要一定的配置时间，等待10分钟左右会创建完成</p><h4 id="3-3-ALB测试"><a href="#3-3-ALB测试" class="headerlink" title="3.3 ALB测试"></a>3.3 ALB测试</h4><p>复制负载均衡器my-alb-02的DNS名称</p><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20220406021530401.png" alt="image-20220406021530401"></p><p>在终端进行访问，可以看到有在进行负载均衡</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[root@<span class="built_in">test</span>-net2-01 ~]<span class="comment"># for i in $(seq 1 10); do curl http://my-alb-02-126796059.us-east-1.elb.amazonaws.com/ &amp;&amp;echo ""; done</span></span><br><span class="line">&#123;<span class="string">"hostname"</span>: <span class="string">"test-net2-02"</span>&#125;</span><br><span class="line">&#123;<span class="string">"hostname"</span>: <span class="string">"test-net2-01"</span>&#125;</span><br><span class="line">&#123;<span class="string">"hostname"</span>: <span class="string">"test-net2-02"</span>&#125;</span><br><span class="line">&#123;<span class="string">"hostname"</span>: <span class="string">"test-net2-02"</span>&#125;</span><br><span class="line">&#123;<span class="string">"hostname"</span>: <span class="string">"test-net2-01"</span>&#125;</span><br><span class="line">&#123;<span class="string">"hostname"</span>: <span class="string">"test-net2-02"</span>&#125;</span><br><span class="line">&#123;<span class="string">"hostname"</span>: <span class="string">"test-net2-01"</span>&#125;</span><br><span class="line">&#123;<span class="string">"hostname"</span>: <span class="string">"test-net2-02"</span>&#125;</span><br><span class="line">&#123;<span class="string">"hostname"</span>: <span class="string">"test-net2-01"</span>&#125;</span><br><span class="line">&#123;<span class="string">"hostname"</span>: <span class="string">"test-net2-01"</span>&#125;</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20220406021612612.png" alt="image-20220406021612612"></p><h3 id="4-域名解析"><a href="#4-域名解析" class="headerlink" title="4.域名解析"></a>4.域名解析</h3><h4 id="4-1-获得免费域名"><a href="#4-1-获得免费域名" class="headerlink" title="4.1 获得免费域名"></a>4.1 获得免费域名</h4><p>获取途径<a href="https://my.freenom.com/clientarea.php" target="_blank" rel="noopener">Freenom</a></p><p>本次实验使用的域名是modu2022.cf</p><h4 id="4-2-Route-53-创建域"><a href="#4-2-Route-53-创建域" class="headerlink" title="4.2 Route 53 创建域"></a>4.2 Route 53 创建域</h4><h5 id="4-2-1-创建托管区域"><a href="#4-2-1-创建托管区域" class="headerlink" title="4.2.1 创建托管区域"></a>4.2.1 创建托管区域</h5><p>在Route 53的托管区域页面，点击“创建托管区域”</p><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20220406022118864.png" alt="image-20220406022118864"></p><p>填入域名：modu2022.cf</p><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20220406022005423.png" alt="image-20220406022005423"></p><h5 id="4-2-2-修改域名的名称服务器"><a href="#4-2-2-修改域名的名称服务器" class="headerlink" title="4.2.2 修改域名的名称服务器"></a>4.2.2 修改域名的名称服务器</h5><p>记录下托管区域modu2022.cf的名称服务器</p><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20220406022356427.png" alt="image-20220406022356427"></p><p>将Freenom中对应域名的名称服务器改为上面的4个服务器</p><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20220406022529216.png" alt="image-20220406022529216"></p><h5 id="4-2-3-创建记录"><a href="#4-2-3-创建记录" class="headerlink" title="4.2.3 创建记录"></a>4.2.3 创建记录</h5><p>点击“创建记录”</p><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20220406022740304.png" alt="image-20220406022740304"></p><p>创建2条记录</p><p>记录1和记录2除了“记录名称”之外的地方都一致</p><p>记录1：</p><ul><li>类型：A</li><li>流量路由至：别名<ul><li>选择Application和Classic Load Balancer的别名</li><li>选择美国东部us-east-1</li><li>选择创建的alb-02</li></ul></li></ul><p>点击“创建记录”</p><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20220406022843968.png" alt="image-20220406022843968"></p><h4 id="4-3-域名测试"><a href="#4-3-域名测试" class="headerlink" title="4.3 域名测试"></a>4.3 域名测试</h4><p>可以使用域名访问服务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[root@<span class="built_in">test</span>-net2-01 ~]<span class="comment"># for i in $(seq 1 10); do curl http://modu2022.cf &amp;&amp;echo ""; done</span></span><br><span class="line">&#123;<span class="string">"hostname"</span>: <span class="string">"test-net2-01"</span>&#125;</span><br><span class="line">&#123;<span class="string">"hostname"</span>: <span class="string">"test-net2-01"</span>&#125;</span><br><span class="line">&#123;<span class="string">"hostname"</span>: <span class="string">"test-net2-02"</span>&#125;</span><br><span class="line">&#123;<span class="string">"hostname"</span>: <span class="string">"test-net2-01"</span>&#125;</span><br><span class="line">&#123;<span class="string">"hostname"</span>: <span class="string">"test-net2-02"</span>&#125;</span><br><span class="line">&#123;<span class="string">"hostname"</span>: <span class="string">"test-net2-02"</span>&#125;</span><br><span class="line">&#123;<span class="string">"hostname"</span>: <span class="string">"test-net2-01"</span>&#125;</span><br><span class="line">&#123;<span class="string">"hostname"</span>: <span class="string">"test-net2-02"</span>&#125;</span><br><span class="line">&#123;<span class="string">"hostname"</span>: <span class="string">"test-net2-01"</span>&#125;</span><br><span class="line">&#123;<span class="string">"hostname"</span>: <span class="string">"test-net2-01"</span>&#125;</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20220406023531357.png" alt="image-20220406023531357"></p><h3 id="5-HTTPS访问"><a href="#5-HTTPS访问" class="headerlink" title="5.HTTPS访问"></a>5.HTTPS访问</h3><h4 id="5-1-创建证书"><a href="#5-1-创建证书" class="headerlink" title="5.1 创建证书"></a>5.1 创建证书</h4><p>使用AWS的ACM证书托管服务创建SSL证书</p><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20220406023739857.png" alt="image-20220406023739857"></p><p>请求证书，点击下一步</p><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20220406023804895.png" alt="image-20220406023804895"></p><p>填入域名，设置标签</p><ul><li>域名：modu2022.cf</li><li>标签：Name：modu2022.cf</li></ul><p>点击请求</p><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20220406023922000.png" alt="image-20220406023922000"></p><p>点击证书的链接，进入到证书设置中去</p><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20220406024015520.png" alt="image-20220406024015520"></p><p>点击“在Route 53中创建记录”</p><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20220406024043744.png" alt="image-20220406024043744"></p><p>点击“创建记录”</p><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20220406024105623.png" alt="image-20220406024105623"></p><p>证书的状态为”已颁发”</p><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20220406024244882.png" alt="image-20220406024244882"></p><h4 id="5-2-ALB添加侦听器"><a href="#5-2-ALB添加侦听器" class="headerlink" title="5.2 ALB添加侦听器"></a>5.2 ALB添加侦听器</h4><p>给my-alb-02新增侦听内容</p><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20220406024401239.png" alt="image-20220406024401239"></p><p>侦听设置</p><ul><li>HTTPS协议，443端口</li><li>操作：转发至</li><li>目标组：my-target-02</li><li>安全侦听器设置<ul><li>安全策略：默认</li><li>SSL证书：选择创建的证书modu2022.cf</li></ul></li></ul><p>配置完成之后点击“添加”</p><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20220406104955591.png" alt="image-20220406104955591"></p><h4 id="5-3-访问测试"><a href="#5-3-访问测试" class="headerlink" title="5.3 访问测试"></a>5.3 访问测试</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[root@<span class="built_in">test</span>-net2-01 ~]<span class="comment"># for i in $(seq 1 10); do curl https://modu2022.cf &amp;&amp;echo ""; done</span></span><br><span class="line">&#123;<span class="string">"hostname"</span>: <span class="string">"test-net2-02"</span>&#125;</span><br><span class="line">&#123;<span class="string">"hostname"</span>: <span class="string">"test-net2-02"</span>&#125;</span><br><span class="line">&#123;<span class="string">"hostname"</span>: <span class="string">"test-net2-01"</span>&#125;</span><br><span class="line">&#123;<span class="string">"hostname"</span>: <span class="string">"test-net2-02"</span>&#125;</span><br><span class="line">&#123;<span class="string">"hostname"</span>: <span class="string">"test-net2-02"</span>&#125;</span><br><span class="line">&#123;<span class="string">"hostname"</span>: <span class="string">"test-net2-01"</span>&#125;</span><br><span class="line">&#123;<span class="string">"hostname"</span>: <span class="string">"test-net2-01"</span>&#125;</span><br><span class="line">&#123;<span class="string">"hostname"</span>: <span class="string">"test-net2-02"</span>&#125;</span><br><span class="line">&#123;<span class="string">"hostname"</span>: <span class="string">"test-net2-01"</span>&#125;</span><br><span class="line">&#123;<span class="string">"hostname"</span>: <span class="string">"test-net2-01"</span>&#125;</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20220406110211724.png" alt="image-20220406110211724"></p><p>测试完成之后可以将2台EC2的弹性IP释放掉。</p><h3 id="HTTPS访问（自建证书）"><a href="#HTTPS访问（自建证书）" class="headerlink" title="HTTPS访问（自建证书）"></a>HTTPS访问（自建证书）</h3><h4 id="申请免费证书"><a href="#申请免费证书" class="headerlink" title="申请免费证书"></a>申请免费证书</h4><p>笔者申请腾讯云的免费证书。</p><p>在搜索框输入“SSL证书”，进入“我的证书”页面，点击“申请免费证书”</p><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20220407155954040.png" alt="image-20220407155954040"></p><p>选择证书类型，保持默认就行，点击“确定”</p><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20220407160119701.png" alt="image-20220407160119701"></p><p>“提交资料”这一步只需要按照要求填写内容即可，点击“下一步”</p><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20220407160315832.png" alt="image-20220407160315832"></p><p>验证方式选择推荐的DNS验证，点击“下一步”</p><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20220407160409715.png" alt="image-20220407160409715"></p><p>将腾讯云上域名验证的部分，添加到托管的记录中</p><p>在托管域中新增一条CNAME类型的记录，把名称和值都填进去，点击创建记录</p><p>记录创建完成之后，在腾讯云平台上进行域名验证</p><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20220407203509147.png" alt="image-20220407203509147"></p><p>等待证书颁发，过程可能需要2个小时</p><p>okay，证书颁发完整之后，下载证书</p><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20220408111659212.png" alt="image-20220408111659212"></p><p>选择Nginx类型，下载</p><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20220408112122014.png" alt="image-20220408112122014"></p><h4 id="在ACM中导入证书"><a href="#在ACM中导入证书" class="headerlink" title="在ACM中导入证书"></a>在ACM中导入证书</h4><p>在ACM页面中选择，导入证书</p><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20220408113215099.png" alt="image-20220408113215099"></p><p>将下载下来证书的对应内容复制进去</p><p>填写规则：</p><ul><li>对于 <strong>Certificate body</strong>（证书正文），粘贴要导入的 PEM 编码证书。它应以 <code>-----BEGIN CERTIFICATE-----</code> 开头并以 <code>-----END CERTIFICATE-----</code> 结尾。</li><li>对于 <strong>Certificate private key（证书私有密钥）</strong>，粘贴证书的 PEM 编码的未加密私有密钥。它应以 <code>-----BEGIN PRIVATE KEY-----</code> 开头并以 <code>-----END PRIVATE KEY-----</code> 结尾。</li><li>(可选) 对于 <strong>Certificate chain (证书链)</strong>，粘贴 PEM 编码的证书链。</li></ul><p>导入之后，点击“下一步”</p><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20220408113452118.png" alt="image-20220408113452118"></p><p>为证书添加标签，Name:modu2022.cg_SSL。标签不添加也可以。</p><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20220408113709930.png" alt="image-20220408113709930"></p><p>审核完成之后点击导入</p><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20220408113752537.png" alt="image-20220408113752537"></p><p>证书导入完毕</p><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20220408115936587.png" alt="image-20220408115936587"></p><h4 id="修改负载均衡器"><a href="#修改负载均衡器" class="headerlink" title="修改负载均衡器"></a>修改负载均衡器</h4><p>在负载均衡器中添加侦听器</p><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20220408111521838.png" alt="image-20220408111521838"></p><p>侦听器内容设置如下</p><ul><li>协议：HTTPS 443端口</li><li>操作：转发<ul><li>目标组：my-target-02</li></ul></li><li>侦听器证书设置：“从ACM中”，选择新增的modu2022.cf证书</li></ul><p>点击添加</p><p>测试访问</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[root@<span class="built_in">test</span>-net2-02 ~]<span class="comment"># for i in $(seq 1 10); do curl https://modu2022.cf &amp;&amp;echo ""; done</span></span><br><span class="line">&#123;<span class="string">"hostname"</span>: <span class="string">"test-net2-02"</span>&#125;</span><br><span class="line">&#123;<span class="string">"hostname"</span>: <span class="string">"test-net2-01"</span>&#125;</span><br><span class="line">&#123;<span class="string">"hostname"</span>: <span class="string">"test-net2-01"</span>&#125;</span><br><span class="line">&#123;<span class="string">"hostname"</span>: <span class="string">"test-net2-02"</span>&#125;</span><br><span class="line">&#123;<span class="string">"hostname"</span>: <span class="string">"test-net2-02"</span>&#125;</span><br><span class="line">&#123;<span class="string">"hostname"</span>: <span class="string">"test-net2-02"</span>&#125;</span><br><span class="line">&#123;<span class="string">"hostname"</span>: <span class="string">"test-net2-01"</span>&#125;</span><br><span class="line">&#123;<span class="string">"hostname"</span>: <span class="string">"test-net2-01"</span>&#125;</span><br><span class="line">&#123;<span class="string">"hostname"</span>: <span class="string">"test-net2-02"</span>&#125;</span><br><span class="line">&#123;<span class="string">"hostname"</span>: <span class="string">"test-net2-01"</span>&#125;</span><br></pre></td></tr></table></figure><p><img src="images-ALB%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1%5Cimage-20220408121453351.png" alt="image-20220408121453351"></p><p>okay，自建证书也实现了ALB的负载均衡。</p><h2 id="Part4-问题总结"><a href="#Part4-问题总结" class="headerlink" title="Part4 问题总结"></a>Part4 问题总结</h2><ol><li><p>part3的3.1目标组配置的协议要是HTTP协议的5000端口。因为创建的ALB是对7层的流量进行负载均衡，所以协议要选择是7层协议。如果创建NLB，那么协议选择TCP的5000端口。</p></li><li><p>part3的5.2部分添加侦听器时的协议要选择HTTPS协议的443端口。</p><p>注意：HTTP协议的443端口和HTTPS协议的443端口不是同一个。</p></li></ol><h2 id="Part5-参考文献"><a href="#Part5-参考文献" class="headerlink" title="Part5 参考文献"></a>Part5 参考文献</h2><p><a href="https://docs.aws.amazon.com/zh_cn/elasticloadbalancing/latest/application/introduction.html" target="_blank" rel="noopener">AWS Application Load Balancer用户指南</a></p><p><a href="https://docs.aws.amazon.com/zh_cn/Route53/latest/DeveloperGuide/migrate-dns-domain-inactive.html" target="_blank" rel="noopener">将Route 53作为非活动域的DNS服务</a></p><p><a href="https://blog.csdn.net/kingov/article/details/101696040" target="_blank" rel="noopener">亚马逊云服务器AWS配置ssl https证书</a></p>]]></content>
    
    <summary type="html">
    
      
      
        
        
          &lt;h1 id=&quot;ALB负载均衡&quot;&gt;&lt;a
        
      
    
    </summary>
    
    
      <category term="转载" scheme="https://blog.wjzhe.ml/categories/%E8%BD%AC%E8%BD%BD/"/>
    
    
      <category term="AWS" scheme="https://blog.wjzhe.ml/tags/AWS/"/>
    
      <category term="AWS Network" scheme="https://blog.wjzhe.ml/tags/AWS-Network/"/>
    
      <category term="转载 张小燕" scheme="https://blog.wjzhe.ml/tags/%E8%BD%AC%E8%BD%BD-%E5%BC%A0%E5%B0%8F%E7%87%95/"/>
    
  </entry>
  
  <entry>
    <title>AWS Organizations账户管理服务&amp;SCP</title>
    <link href="https://blog.wjzhe.ml/2022/04/05/AWSOrganizations/"/>
    <id>https://blog.wjzhe.ml/2022/04/05/AWSOrganizations/</id>
    <published>2022-04-05T16:00:00.000Z</published>
    <updated>2022-04-05T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="AWS-Organizations账户管理服务-amp-SCP"><a href="#AWS-Organizations账户管理服务-amp-SCP" class="headerlink" title="AWS Organizations账户管理服务&amp;SCP"></a>AWS Organizations账户管理服务&amp;SCP</h1><h2 id="Part1-介绍AWS-Organizations"><a href="#Part1-介绍AWS-Organizations" class="headerlink" title="Part1 介绍AWS Organizations"></a>Part1 介绍AWS Organizations</h2><p>AWS Organizations 是一项账户管理服务，使您能够将多个AWS 账户整合到您创建并集中管理的组织中。AWS Organizations 包含账户管理和整合账单功能，可利用这些功能更好地满足企业的预算、安全性和合规性需求。作为组织的管理员，您可以在组织中创建账户并邀请现有账户加入组织。</p><p><strong>AWS Organizations功能</strong></p><ul><li>集中管理您的所有AWS账户</li><li>所有成员账户的整合账单</li><li>对账户进行分层分组以满足预算、安全性或合规性需求</li><li>集中控制每个账户可访问的AWS服务和API操作的策略</li><li>帮助在组织账户中跨资源标准化标签的策略</li><li>控制AWS AI和机器学习服务可以手机和存储数据的策略</li><li>为组织账户中的资源配置自动备份的策略</li><li>针对AWS IAM的集成和支持</li><li>与其他AWS服务集成</li><li>全局访问</li><li>具备最终一致性的数据复制</li><li>免费使用</li></ul><h2 id="Part2-实验场景"><a href="#Part2-实验场景" class="headerlink" title="Part2 实验场景"></a>Part2 实验场景</h2><p>前提条件：需要2个账户，称作Account A和Account B。</p><p>描述：在Account A中创建组织，并邀请Account B加入组织。在Account A中设置策略来防止Account B访问S3，在Account B上进行测试。</p><p>说明：本实验demo的Account A的ID尾号为5283，Account B的ID尾号为8124</p><h2 id="Part3-实验步骤"><a href="#Part3-实验步骤" class="headerlink" title="Part3 实验步骤"></a>Part3 实验步骤</h2><h3 id="3-1-实验账户说明"><a href="#3-1-实验账户说明" class="headerlink" title="3.1 实验账户说明"></a>3.1 实验账户说明</h3><p>本实验demo的Account A的ID尾号为5283，Account B的ID尾号为8124</p><p>实验会在Account A账户中创建组织，即Account A是主账户，Account B是成员账户。</p><h3 id="3-2-创建组织"><a href="#3-2-创建组织" class="headerlink" title="3.2 创建组织"></a>3.2 创建组织</h3><p>在Account A账户中创建组织。在Organization主页，点击“创建组织”。</p><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20220412004932107.png" alt="image-20220412004932107"></p><p>点击之后直接就能创建组织，创建组织需要邮箱验证。</p><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20220412005002268.png" alt="image-20220412005002268"></p><h3 id="3-3-邀请账户"><a href="#3-3-邀请账户" class="headerlink" title="3.3 邀请账户"></a>3.3 邀请账户</h3><p>输入账户ID和要创建的键值，点击发送邀请。</p><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20220412011458396.png" alt="image-20220412011458396"></p><p>在Account B中可以看到邀请</p><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20220412011633785.png" alt="image-20220412011633785"></p><p>点开邀请链接之后，接受邀请</p><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20220412011714385.png" alt="image-20220412011714385"></p><p>在Account A上查看组织的账户，一个主账户，一个成员账户</p><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20220412011914453.png" alt="image-20220412011914453"></p><h3 id="3-4-创建S3策略"><a href="#3-4-创建S3策略" class="headerlink" title="3.4 创建S3策略"></a>3.4 创建S3策略</h3><p>进入策略页面，点击“服务控制策略”</p><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20220412102406807.png" alt="image-20220412102406807"></p><p>启用服务控制策略</p><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20220412102431828.png" alt="image-20220412102431828"></p><p>加载完成之后，如下所示</p><p>新创建一个策略，来阻止对S3的访问，点击创建策略</p><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20220412102504986.png" alt="image-20220412102504986"></p><p>策略设置</p><ul><li>名称：denyS3</li><li>选择服务：S3，动作：All Actions</li></ul><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20220412103202634.png" alt="image-20220412103202634"></p><p>添加资源，添加完成之后点击创建策略</p><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20220412132453499.png" alt="image-20220412132453499"></p><h3 id="3-5-前-Account-B访问S3测试"><a href="#3-5-前-Account-B访问S3测试" class="headerlink" title="3.5 [前]Account B访问S3测试"></a>3.5 [前]Account B访问S3测试</h3><p>目前没有给Account B账户做任何限制，Account B可以正常访问S3存储桶</p><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20220412133347888.png" alt="image-20220412133347888"></p><h3 id="3-6-将策略应用到Account-B"><a href="#3-6-将策略应用到Account-B" class="headerlink" title="3.6 将策略应用到Account B"></a>3.6 将策略应用到Account B</h3><p>在Account A账户的Organizations中，将denyS3策略附加到Account B</p><p>选中denyS3策略，点击操作。点击附加策略</p><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20220412133545337.png" alt="image-20220412133545337"></p><p>选中要附加的这个账户，点击附加策略</p><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20220412133640477.png" alt="image-20220412133640477"></p><p>Okay，策略附加成功</p><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20220412133717996.png" alt="image-20220412133717996"></p><h3 id="3-7-后-Account-B访问S3测试"><a href="#3-7-后-Account-B访问S3测试" class="headerlink" title="3.7 [后]Account B访问S3测试"></a>3.7 [后]Account B访问S3测试</h3><p>Account A为Account B添加了限制S3所有权限的策略，现在Account B账户上访问S3进行测试。</p><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20220412133938873.png" alt="image-20220412133938873"></p><p>Account B再次访问S3时出现提示：无权列出存储桶。所以可以看出策略附加成功，在Account B上已经生效。</p><p>总结：本实验是一个简单的AWS Organizations创建以及测试，主要测试的服务控制策略SCP。Organizations还有很多别的功能。</p><h2 id="Part4-参考文献"><a href="#Part4-参考文献" class="headerlink" title="Part4 参考文献"></a>Part4 参考文献</h2><ul><li><a href="https://docs.aws.amazon.com/zh_cn/zh_cn/organizations/latest/userguide/orgs_introduction.html" target="_blank" rel="noopener">什么是AWS Organizations</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        
        
          &lt;h1
        
      
    
    </summary>
    
    
      <category term="转载" scheme="https://blog.wjzhe.ml/categories/%E8%BD%AC%E8%BD%BD/"/>
    
    
      <category term="AWS" scheme="https://blog.wjzhe.ml/tags/AWS/"/>
    
      <category term="转载 张小燕" scheme="https://blog.wjzhe.ml/tags/%E8%BD%AC%E8%BD%BD-%E5%BC%A0%E5%B0%8F%E7%87%95/"/>
    
      <category term="Organizations" scheme="https://blog.wjzhe.ml/tags/Organizations/"/>
    
      <category term="IAM" scheme="https://blog.wjzhe.ml/tags/IAM/"/>
    
  </entry>
  
  <entry>
    <title>EC2安装CloudWatch Agent自定义监控指标</title>
    <link href="https://blog.wjzhe.ml/2022/03/24/installCloudwathagent/"/>
    <id>https://blog.wjzhe.ml/2022/03/24/installCloudwathagent/</id>
    <published>2022-03-24T16:00:00.000Z</published>
    <updated>2022-03-24T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>Amazon CloudWatch是一项针对AWS上运行的应用程序的监控服务。使用Amazon CloudWatch可以收集和跟中指标、收集和监控日志文件以及设置警报。Amazon CloudWatch可以监控各种AWS资源，例如Amazon EC2实例、Amazon DynamoDB表、Amazon RDS数据库实例、应用程序和服务生成的自定义指标以及应用程序生成的所有日志文件。</p></blockquote><p>随着业务需求越来越大，客户需要进步详细的监控某些资源的使用情况，比如需要监控EC2内存的总量和使用情况进行监控，默认情况下，CloudWatch是没有对这些指标进行监控的，因为内存属于用户操作系统内的信息，在AWS的产品设计中，所有系统内的信息都属于用户的私有财产和信息。所以默认情况下，AWS的CloudWatch不收集相关信息。但在实际使用的项目中，以内存监控为代表的系统、应用层面的监控是系统监控中非常重要的一环，所以AWS CloudWatch Agent来帮助用户监控EC2实例中的更多的系统层面的信息，如：内存、CPU、Disk、Network等信息。同时通过CloudWatch Agent还可以对系统中的各种日志进行统一的收集并存放至CloudWatch Log中，方便用户后续的分析等操作。</p><p><strong>本文档主要指引如何为EC2实例安装cloudwatch agent自定义监控指标，监控内存使用率、磁盘使用率等</strong></p><h2 id="前期准备"><a href="#前期准备" class="headerlink" title="前期准备"></a><strong>前期准备</strong></h2><ul><li>创建好自己的VPC；</li><li>启动一台EC2；</li></ul><h1 id="实验步骤"><a href="#实验步骤" class="headerlink" title="实验步骤"></a><strong>实验步骤</strong></h1><h2 id="EC2附加具有相应策略的角色"><a href="#EC2附加具有相应策略的角色" class="headerlink" title="EC2附加具有相应策略的角色"></a><strong>EC2附加具有相应策略的角色</strong></h2><h3 id="登录到AWS-控制台-创建IAM角色"><a href="#登录到AWS-控制台-创建IAM角色" class="headerlink" title="登录到AWS 控制台 创建IAM角色"></a><strong>登录到AWS 控制台 创建IAM角色</strong></h3><p>登入亚马逊控制台,点击上方Services,搜索IAM</p><p><em>如下图 红圈处1</em></p><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/ABUIABAEGAAggOTSkAYoqLf9ggQw0gc4tgM.png" alt=" "></p><p><strong>1.左边导航栏选中”角色” -</strong> <em>如下图 红圈1</em></p><p><strong>2.点击上方“创建角色” -</strong> <em>如下图 红圈2</em></p><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/ABUIABAEGAAggOTSkAYo9qr6QDDSBzioAw.png" alt=" "></p><p><strong>3.在”可信实体类型”选择”亚马逊服务”</strong> <em>如下图 红圈处1</em></p><p><strong>4.选择”EC2”点击 -</strong> <em>如下图 红圈2</em></p><p><strong>5.点击右下角”下一步” -</strong> <em>如下图 红圈3</em></p><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/ABUIABAEGAAggOTSkAYojpGvoQYw0gc47gQ.png" alt=" "></p><p><strong>6.在红框内搜索策略Cloudwatchagent</strong></p><p><img src="https://22252606.s21i.faiusr.com/4/ABUIABAEGAAggOTSkAYostyYEzDSBziqAw.png" alt=" "></p><p><strong>7.选择添加</strong>CloudWatchAgentServerPolicy<strong>和</strong>CloudWatchAgentAdminPolicy<strong>策略,点击”下一步”</strong></p><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/ABUIABAEGAAggOTSkAYosKXu6gYw0gc4sgM.png" alt=" "></p><p><strong>8.给角色起一个名称，这里是”Ec2-Cloudwatchagent” -</strong> <em>如下图 红圈1</em></p><p><strong>9.点击”创建角色” -</strong> <em>如下图 红圈2</em></p><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/ABUIABAEGAAggeTSkAYo0KOyxwQw3AY4vgY.png" alt=" "></p><p><strong>角色创建完成</strong></p><h2 id="将该角色附加到EC2"><a href="#将该角色附加到EC2" class="headerlink" title="将该角色附加到EC2"></a><strong>将该角色附加到EC2</strong></h2><p><strong>1.在控制台打开EC2服务，选择右边”实例”</strong></p><p><em>如下图 红圈1</em></p><p><strong>2.选择需要监控的EC2实例 -</strong> <em>如下图 红圈2</em></p><p><strong>3.点击操作按钮 -</strong> <em>如下图 红圈3</em></p><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/ABUIABAEGAAggeTSkAYogOSngAUw0gc41AM.png" alt=" "></p><p><strong>4.点击”安全” -</strong> <em>如下图 红圈1</em></p><p><strong>5.点击”修改IAM角色”选择 -</strong> <em>如下图 红圈2</em></p><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/ABUIABAEGAAggeTSkAYo86b75wQwkgU46AM.png" alt=" "></p><p><strong>6.选择刚才创建的IAM角色，点击保存，这样就把有相关权限的角色附加到EC2实例，前期准备工作完成。</strong></p><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/ABUIABAEGAAggeTSkAYosO_5jQQw0gc4nAQ.png" alt=" "></p><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/ABUIABAEGAAggeTSkAYo3t7kxQMw0gc4ngQ.png" alt=" "></p><h2 id="安装CloudWatchAgent代理"><a href="#安装CloudWatchAgent代理" class="headerlink" title="安装CloudWatchAgent代理"></a><strong>安装CloudWatchAgent代理</strong></h2><blockquote><p>登录到EC2实例,安装和配置CloudWatchAgent</p></blockquote><p><strong>输入命令sudo yum update，更新实例</strong></p><p><em>如下图 红圈处1</em></p><p><strong>2.输入以下命令,下载cloudwatch代理软件包</strong></p><p><em>如下图 红圈处2</em></p><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/ABUIABAEGAAggeTSkAYokLLJ4gcw0gc45AQ.png" alt=" "></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wegt - https:&#x2F;&#x2F;s3.amazonaws.com&#x2F;amazoncloudwatch-agent&#x2F;amazon_linux&#x2F;amd64&#x2F;latest&#x2F;amazon-cloudwatch-agent.rpm</span><br></pre></td></tr></table></figure><p><strong>3.输入命令 sudo rpm -U ./amazon-cloudwatch-agent.rpm安装软件包。</strong></p><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/ABUIABAEGAAggeTSkAYonJH8pgYw0gc41AE.png" alt=" "></p><p><strong>4.输入以下命令进入到目录</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd &#x2F;opt&#x2F;aws&#x2F;amazon-cloudwatch-agent&#x2F;etc&#x2F;</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/ABUIABAEGAAggeTSkAYo_-zTlAEw-AY4pAE.png" alt=" "></p><p><strong>5.手动创建或编辑cloudwatch代理配置文件</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vim amazon-cloudwatch-agent.json</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/ABUIABAEGAAggeTSkAYo4POGyQQwxgY4Og.png" alt=" "></p><p><strong>6.编辑Cloudwatch代理配置文件（配置文件链接已附上，需要请在最下面提取），其中“metrics”模块为监控指标</strong></p><p><strong>7.保存并推出。</strong></p><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/ABUIABAEGAAgguTSkAYolLD1aDDSBzioBQ.png" alt=" "></p><p><strong>8.依次输入红圈处的命令,将刚创建的json文件复制移动到doc目录下,并将原先doc目录下”amazon-cloudwatch-agent-schema.json”文件删除,重命名amazon-cloudwatch-agent.json为amazon-cloudwatch-agent-schema.json</strong></p><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/ABUIABAEGAAgguTSkAYo-K69ywQw0gc48AE.png" alt=" "></p><p><strong>9.输入以下命令，启动CloudWatchAgent</strong></p><p><em>如下图 红圈处</em></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo &#x2F;opt&#x2F;aws&#x2F;amazon-cloudwatch-agent&#x2F;bin&#x2F;amazon-cloudwatch-agent-ctl-a fetch-config-m ec2-s-c file:&#x2F;opt&#x2F;aws&#x2F;amazon-cloudwatch-agent&#x2F;doc&#x2F;amazon-cloudwatch-agent-schema.json</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/ABUIABAEGAAgguTSkAYoxuXW_wQw0gc4vgE.png" alt=" "></p><p><strong>10.输入以下命令，检查是否启动成功</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo &#x2F;opt&#x2F;aws&#x2F;amazon-cloudwatch-agent&#x2F;bin&#x2F;amazon-cloudwatch-agent-ctl -m ec2 -a status</span><br></pre></td></tr></table></figure><p><strong>11.看到”status”:”running”，表示启动成功</strong></p><p><em>如下图 红圈处</em></p><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/ABUIABAEGAAgguTSkAYoysPPoAcw0gc43gE.png" alt=" "></p><h2 id="查看监控情况"><a href="#查看监控情况" class="headerlink" title="查看监控情况"></a><strong>查看监控情况</strong></h2><blockquote><p><strong>登录cloudwatch控制台，查看监控指标</strong></p></blockquote><p><strong>1.先打开EC2服务，复制EC2的实例ID</strong></p><p><strong>2.搜索服务cloudwatch</strong>  <em>如图红圈1处</em></p><p><strong>3.在打开的页面点击“全部指标”</strong> <em>如图红圈2处</em></p><p><strong>4.在“指标”信息栏搜索框处，输入刚才的EC2实例ID</strong> <em>如图红圈处3</em></p><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/ABUIABAEGAAgguTSkAYo1J2HiAcwhAc4kAU.png" alt=" "></p><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/ABUIABAEGAAgguTSkAYoovKK4wIw0gc4gAQ.png.webp" alt=" "></p><p>5.到这里，我们就可以根据需要，选择查看各指标监控情况。</p><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/ABUIABAEGAAgguTSkAYo0Oe_5QMw0gc42gM.png.webp" alt=" "></p><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/ABUIABAEGAAgguTSkAYo_LiQeTDSBzj8AQ.png.webp" alt=" "></p><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/ABUIABAEGAAgguTSkAYorozjxQMw0gc47AM.png.webp" alt=" "></p><p>可以看到服务了。</p><p><strong>转载地址:<a href="https://www.ecloudrover.com/h-nd-180.html#_np=21_2595" target="_blank" rel="noopener">https://www.ecloudrover.com/h-nd-180.html#_np=21_2595</a></strong></p>]]></content>
    
    <summary type="html">
    
      
      
        
        
          &lt;blockquote&gt;
&lt;p&gt;Amazon
        
      
    
    </summary>
    
    
      <category term="Cloudwatch" scheme="https://blog.wjzhe.ml/categories/Cloudwatch/"/>
    
    
      <category term="AWS" scheme="https://blog.wjzhe.ml/tags/AWS/"/>
    
      <category term="转载" scheme="https://blog.wjzhe.ml/tags/%E8%BD%AC%E8%BD%BD/"/>
    
  </entry>
  
  <entry>
    <title>创建ec2使用的iam</title>
    <link href="https://blog.wjzhe.ml/2022/03/24/installCloudwathagentbywjshuai/"/>
    <id>https://blog.wjzhe.ml/2022/03/24/installCloudwathagentbywjshuai/</id>
    <published>2022-03-24T16:00:00.000Z</published>
    <updated>2022-03-24T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="创建ec2使用的iam"><a href="#创建ec2使用的iam" class="headerlink" title="创建ec2使用的iam"></a>创建ec2使用的iam</h1><p><strong>选择iam</strong></p><p><img src="img/image-20220325121800389.png" alt="image-20220325121800389"></p><p><strong>选择策略</strong></p><p>输入<code>Cloudwatchagent</code>,选中<strong>CloudWatchAgentAdminPolicy</strong>与<strong>CloudWatchAgentServerPolicy</strong></p><p><img src="img/image-20220325121855992.png" alt="image-20220325121855992"></p><p><strong>名称填写</strong></p><p>填写<code>Ec2Cloudwatchagent</code></p><p><img src="img/image-20220325122003638.png" alt="image-20220325122003638"></p><p>点击创建角色</p><h1 id="将角色附加到ec2"><a href="#将角色附加到ec2" class="headerlink" title="将角色附加到ec2"></a><strong>将角色附加到ec2</strong></h1><p><img src="img/image-20220325122108264.png" alt="image-20220325122108264"></p><p><strong>选择之前创建的角色</strong></p><p><img src="img/image-20220325122137024.png" alt="image-20220325122137024"></p><h1 id="服务器操作"><a href="#服务器操作" class="headerlink" title="服务器操作"></a>服务器操作</h1><p><strong>安装代理工具</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum install amazon-cloudwatch-agent -y</span><br></pre></td></tr></table></figure><p>安装成功</p><p><img src="img/image-20220325122323900.png" alt="image-20220325122323900"></p><p><strong>编写metric配置文件</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd &#x2F;opt&#x2F;aws&#x2F;amazon-cloudwatch-agent&#x2F;etc&#x2F;</span><br></pre></td></tr></table></figure><p><img src="img/image-20220325122504757.png" alt="image-20220325122504757"></p><p>写入配置内容</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;opt&#x2F;aws&#x2F;amazon-cloudwatch-agent&#x2F;bin&#x2F;nspconfig.json</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">&quot;agent&quot;: &#123;</span><br><span class="line">&quot;metrics_collection_interval&quot;: 60,</span><br><span class="line">&quot;run_as_user&quot;: &quot;root&quot;</span><br><span class="line">&#125;,</span><br><span class="line">&quot;metrics&quot;: &#123;</span><br><span class="line">&quot;namespace&quot;: &quot;NSP&#x2F;EC2&quot;,</span><br><span class="line">&quot;metrics_collected&quot;: &#123;</span><br><span class="line">&quot;collectd&quot;: &#123;</span><br><span class="line">&quot;metrics_aggregation_interval&quot;: 60</span><br><span class="line">&#125;,</span><br><span class="line">&quot;disk&quot;: &#123;</span><br><span class="line">&quot;drop_device&quot;: true,</span><br><span class="line">&quot;ignore_file_system_types&quot;: [</span><br><span class="line">&quot;sysfs&quot;,</span><br><span class="line">&quot;tmpfs&quot;,</span><br><span class="line">&quot;devtmpfs&quot;</span><br><span class="line">],</span><br><span class="line">&quot;measurement&quot;: [</span><br><span class="line">&quot;free&quot;,</span><br><span class="line">&quot;used_percent&quot;</span><br><span class="line">],</span><br><span class="line">&quot;metrics_collection_interval&quot;: 60,</span><br><span class="line">&quot;resources&quot;: [</span><br><span class="line">&quot;*&quot;</span><br><span class="line">]</span><br><span class="line">&#125;,</span><br><span class="line">&quot;diskio&quot;: &#123;</span><br><span class="line">&quot;measurement&quot;: [</span><br><span class="line">&quot;read_bytes&quot;,</span><br><span class="line">&quot;write_bytes&quot;</span><br><span class="line">],</span><br><span class="line">&quot;metrics_collection_interval&quot;: 60,</span><br><span class="line">&quot;resources&quot;: [</span><br><span class="line">&quot;*&quot;</span><br><span class="line">]</span><br><span class="line">&#125;,</span><br><span class="line">&quot;mem&quot;: &#123;</span><br><span class="line">&quot;measurement&quot;: [</span><br><span class="line">&quot;mem_used_percent&quot;</span><br><span class="line">],</span><br><span class="line">&quot;metrics_collection_interval&quot;: 60,</span><br><span class="line">&quot;resources&quot;: [</span><br><span class="line">&quot;*&quot;</span><br><span class="line">]</span><br><span class="line">&#125;</span><br><span class="line">&#125;,</span><br><span class="line">&quot;append_dimensions&quot;: &#123;</span><br><span class="line">&quot;InstanceId&quot;: &quot;$&#123;aws:InstanceId&#125;&quot;,</span><br><span class="line">&quot;InstanceType&quot;: &quot;$&#123;aws:InstanceType&#125;&quot;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        
        
          &lt;h1 id=&quot;创建ec2使用的iam&quot;&gt;&lt;a
        
      
    
    </summary>
    
    
      <category term="AWS" scheme="https://blog.wjzhe.ml/categories/AWS/"/>
    
    
      <category term="AWS" scheme="https://blog.wjzhe.ml/tags/AWS/"/>
    
  </entry>
  
  <entry>
    <title>S3 跨账号复制</title>
    <link href="https://blog.wjzhe.ml/2022/03/09/MigrateOfS3/"/>
    <id>https://blog.wjzhe.ml/2022/03/09/MigrateOfS3/</id>
    <published>2022-03-09T16:00:00.000Z</published>
    <updated>2022-03-09T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="场景背景"><a href="#场景背景" class="headerlink" title="场景背景"></a>场景背景</h1><p>公司业务中可能涉及到内部账号之间数据的迁移，那么如何迁移整个 S3 中的数据到另外一个账户可能困扰着我们。今天我们就要教大家怎么实现跨账号的 S3 数据迁移，请准备两个Amazon Web Services 账户，一起开启数据迁移之旅。</p><p>要确保目标账户拥有从另一个账户复制 S3 的对象，请授予目标账户拥有跨账户复制的权限。大致按照以下步骤配置跨账户权限，将对象从账户 A 中的源存储桶复制到账户 B 中的目标存储桶：</p><ul><li>将 <strong>存储桶策略</strong> 附加到账户 A 中的源存储桶。</li><li>将 <strong>Amazon IAM 策略</strong> 附加到账户 B 中的目标用户。</li><li>使用目标账户 B 中的 IAM 用户执行跨账户复制。</li><li>整个存储桶迁移的过程就是从A存储桶迁移到B存储桶的过程</li></ul><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/ABUIABAEGAAgs7LZ-QUojumZxAMwxgU4wQI.png" alt=" "></p><h1 id="步骤一：创建A存储桶"><a href="#步骤一：创建A存储桶" class="headerlink" title="步骤一：创建A存储桶"></a>步骤一：创建A存储桶</h1><p><strong>在账户 A 中创建 S3 存储桶。</strong></p><p>登录账号 A， 点击 <strong>服务</strong>，进入 S3 服务控制台，并选择 <strong>创建存储桶</strong>。</p><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/ABUIABAEGAAgzrLZ-QUo8LPEwgYw3gY49QM.png" alt=" "></p><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/ABUIABAEGAAg3rLZ-QUo4PO5owQwyAY4kAI.png" alt=" "></p><p>接着，设定存储桶的相关配置：</p><ul><li>存储桶名称：请根据需要自行创建一个<strong>全球唯一的存储桶名称</strong>；</li><li>区域：请根据需要自行选择；</li></ul><p>其他配置保持默认，选择创建存储桶；</p><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/ABUIABAEGAAg7rLZ-QUoiJXR2AIwyAY4zgc.png" alt=" "></p><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/ABUIABAEGAAg_LLZ-QUooNz02QYwyAY4sQI.png" alt=" "></p><h1 id="步骤二：A存储桶策略添加"><a href="#步骤二：A存储桶策略添加" class="headerlink" title="步骤二：A存储桶策略添加"></a>步骤二：A存储桶策略添加</h1><p>选择第一步创建的 S3 存储桶，选择 <strong>权限</strong>，向下滚动，找到 <strong>存储桶策略</strong>，点击 <strong>编辑</strong>。</p><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/ABUIABAEGAAgjLPZ-QUo5vW4wgcwyAY4hAc.png" alt=" "></p><p>将以下存储桶策略复制进去，并修改以下相关配置：</p><p><strong>arn:aws:iam::11111111111:user/s3-demo</strong> 替换为<strong>账户 B 中 IAM 用户的 ARN</strong>；</p><p><strong>sourcebucketname</strong> 替换为<strong>在账号 A 中创建的 S3 存储桶名称；</strong></p><p>其他配置保留默认。</p><p><strong>Global区域</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;Version&quot;: &quot;2012-10-17&quot;,</span><br><span class="line">    &quot;Statement&quot;: [</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;Sid&quot;: &quot;DelegateS3Access&quot;,</span><br><span class="line">            &quot;Effect&quot;: &quot;Allow&quot;,</span><br><span class="line">            &quot;Principal&quot;: &#123;</span><br><span class="line">                &quot;AWS&quot;: &quot;arn:aws:iam::11111111111:user&#x2F;s3-demo&quot;</span><br><span class="line">            &#125;,</span><br><span class="line">            &quot;Action&quot;: [</span><br><span class="line">                &quot;s3:ListBucket&quot;,</span><br><span class="line">                &quot;s3:GetObject&quot;</span><br><span class="line">            ],</span><br><span class="line">            &quot;Resource&quot;: [</span><br><span class="line">                &quot;arn:aws:s3:::source_bucket_name&#x2F;*&quot;,</span><br><span class="line">                &quot;arn:aws:s3:::source_bucket_name&quot;</span><br><span class="line">            ]</span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>中国区域</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;Version&quot;: &quot;2012-10-17&quot;,</span><br><span class="line">    &quot;Statement&quot;: [</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;Sid&quot;: &quot;DelegateS3Access&quot;,</span><br><span class="line">            &quot;Effect&quot;: &quot;Allow&quot;,</span><br><span class="line">            &quot;Principal&quot;: &#123;</span><br><span class="line">                 &quot;AWS&quot;: &quot;arn:aws:iam::11111111111:user&#x2F;s3-demo&quot;</span><br><span class="line">            &#125;,</span><br><span class="line">            &quot;Action&quot;: [</span><br><span class="line">                &quot;s3:ListBucket&quot;,</span><br><span class="line">                &quot;s3:GetObject&quot;,</span><br><span class="line">                &quot;s3:PutObject&quot;</span><br><span class="line">            ],</span><br><span class="line">            &quot;Resource&quot;: [</span><br><span class="line">                &quot;arn:aws-cn:s3:::sensors2aws&#x2F;*&quot;,</span><br><span class="line">                &quot;arn:aws-cn:s3:::sensors2aws&quot;</span><br><span class="line">            ]</span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="步骤三：创建B存储桶"><a href="#步骤三：创建B存储桶" class="headerlink" title="步骤三：创建B存储桶"></a>步骤三：创建B存储桶</h1><p><strong>同理，在账号 B 中也创建一个 S3 存储桶，作为目标存储桶。</strong>具体操作过程请参考<strong>创建A存储桶</strong>。</p><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/ABUIABAEGAAgpLPZ-QUolJKjwAIwyAY4wgI.png" alt=" "></p><h1 id="步骤四：B账号添加IAM策略"><a href="#步骤四：B账号添加IAM策略" class="headerlink" title="步骤四：B账号添加IAM策略"></a>步骤四：B账号添加IAM策略</h1><p><strong>在账户 B 中，创建 IAM 客户托管策略。</strong></p><p>点击 <strong>服务</strong>，进入 <strong>IAM 服务控制台</strong>，选择 <strong>策略</strong>，选择 <strong>创建策略</strong>，接着选择 <strong>JSON</strong>；</p><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/ABUIABAEGAAgtLPZ-QUo3Mv34gcwyAY4mQI.png" alt=" "></p><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/ABUIABAEGAAgvLPZ-QUo3r6FowUwyAY4pQM.png" alt=" "></p><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/ABUIABAEGAAgx7PZ-QUo-Mb5wwQwyAY47QI.png" alt=" "></p><p>接着，将以下 IAM 策略复制进去，并修改以下相关配置：</p><p><strong>sourcebucketname</strong> 替换为源存储桶的名称，即在账户 A 中创建的 S3 存储桶名称；</p><p><strong>destinationbucketname</strong> 替换为目标存储桶的名称，即在账户 B 中创建的 S3 存储桶名称。</p><p>这条策略是允许 IAM 用户将对象从账户 A 中的源存储桶复制到账户 B 中的目标存储桶。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;Version&quot;: &quot;2012-10-17&quot;,</span><br><span class="line">    &quot;Statement&quot;: [</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;Effect&quot;: &quot;Allow&quot;,</span><br><span class="line">            &quot;Action&quot;: [</span><br><span class="line">                &quot;s3:ListBucket&quot;,</span><br><span class="line">                &quot;s3:GetObject&quot;</span><br><span class="line">            ],</span><br><span class="line">            &quot;Resource&quot;: [</span><br><span class="line">                &quot;arn:aws:s3:::source_bucket_name&quot;,</span><br><span class="line">                &quot;arn:aws:s3:::source_bucket_name&#x2F;*&quot;</span><br><span class="line">            ]</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;Effect&quot;: &quot;Allow&quot;,</span><br><span class="line">            &quot;Action&quot;: [</span><br><span class="line">                &quot;s3:ListBucket&quot;,</span><br><span class="line">                &quot;s3:PutObject&quot;,</span><br><span class="line">                &quot;s3:PutObjectAcl&quot;</span><br><span class="line">            ],</span><br><span class="line">            &quot;Resource&quot;: [</span><br><span class="line">                &quot;arn:aws:s3:::destination_bucket_name&quot;,</span><br><span class="line">                &quot;arn:aws:s3:::destination_bucket_name&#x2F;*&quot;</span><br><span class="line">            ]</span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>中国区域</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;Version&quot;: &quot;2012-10-17&quot;,</span><br><span class="line">    &quot;Statement&quot;: [</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;Effect&quot;: &quot;Allow&quot;,</span><br><span class="line">            &quot;Action&quot;: [</span><br><span class="line">                &quot;s3:ListBucket&quot;,</span><br><span class="line">                &quot;s3:GetObject&quot;</span><br><span class="line">            ],</span><br><span class="line">            &quot;Resource&quot;: [</span><br><span class="line">                &quot;arn:aws-cn:s3:::source_bucket_name&quot;,</span><br><span class="line">                &quot;arn:aws-cn:s3:::source_bucket_name&#x2F;*&quot;</span><br><span class="line">            ]</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;Effect&quot;: &quot;Allow&quot;,</span><br><span class="line">            &quot;Action&quot;: [</span><br><span class="line">                &quot;s3:ListBucket&quot;,</span><br><span class="line">                &quot;s3:PutObject&quot;,</span><br><span class="line">                &quot;s3:PutObjectAcl&quot;</span><br><span class="line">            ],</span><br><span class="line">            &quot;Resource&quot;: [</span><br><span class="line">                &quot;arn:aws-cn:s3:::destination_bucket_name&quot;,</span><br><span class="line">                &quot;arn:aws-cn:s3:::destination_bucket_name&#x2F;*&quot;</span><br><span class="line">            ]</span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>再接着，选择 <strong>查看策略</strong>，输入策略的 <strong>名称和描述</strong>，最后选择 <strong>创建策略</strong>。</p><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/ABUIABAEGAAg47PZ-QUoluKrmQcwyAY4gQQ.png" alt=" "></p><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/ABUIABAEGAAg6rPZ-QUoxPyD4gYwyAY45AI.png" alt=" "></p><h1 id="步骤五：创建B账户的IAM用户"><a href="#步骤五：创建B账户的IAM用户" class="headerlink" title="步骤五：创建B账户的IAM用户"></a><strong>步骤五</strong>：创建B账户的IAM用户</h1><p><strong>在账号 B 中，创建 IAM 用户。并将步骤 4 中的 IAM 策略附加到该用户中[1]。</strong>具体操作步骤可以参考以下官方文档：</p><p>[1] <a href="https://docs.aws.amazon.com/zh_cn/IAM/latest/UserGuide/id_users_create.html" target="_blank" rel="noopener">https://docs.aws.amazon.com/zh_cn/IAM/latest/UserGuide/id_users_create.html</a></p><p>注意：请把用户的访问密钥（访问密钥 ID 和秘密访问密钥）下载下来，后续会用到。</p><h1 id="步骤六：本地安装CLI工具"><a href="#步骤六：本地安装CLI工具" class="headerlink" title="步骤六：本地安装CLI工具"></a>步骤六：本地安装CLI工具</h1><p><strong>在本地电脑安装AWS CLI 工具[2]，并配置账号 B 的访问密钥[3]。</strong></p><p>具体操作步骤可以参考以下官方文档：</p><p>[2] <a href="https://docs.aws.amazon.com/zh_cn/cli/latest/userguide/cli-chap-install.html" target="_blank" rel="noopener">https://docs.aws.amazon.com/zh_cn/cli/latest/userguide/cli-chap-install.html</a></p><p>[3] <a href="https://docs.aws.amazon.com/zh_cn/cli/latest/userguide/cli-chap-configure.html" target="_blank" rel="noopener">https://docs.aws.amazon.com/zh_cn/cli/latest/userguide/cli-chap-configure.html</a></p><h1 id="步骤七：测试跨账号复制"><a href="#步骤七：测试跨账号复制" class="headerlink" title="步骤七：测试跨账号复制"></a>步骤七：测试跨账号复制</h1><p>请在账号 A 的存储桶上传一个文件，并在账户 B 中的 IAM 用户可以使用 AWS 命令行界面 (AWS CLI) 运行 sync 命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">aws s3 sync s3:&#x2F;&#x2F;source_bucket_name   s3:&#x2F;&#x2F;destination_bucket_name</span><br></pre></td></tr></table></figure><p>并修改以下相关配置：</p><p><strong>sourcebucketname</strong> 替换为源存储桶的名称，即在账户 A 中创建的 S3 存储桶名称；</p><p><strong>destinationbucketname</strong> 替换为目标存储桶的名称，即在账户 B 中创建的 S3 存储桶名称。</p><p><strong>原始地址</strong>：</p><p><a href="https://www.ecloudrover.com/h-nd-112.html" target="_blank" rel="noopener">https://www.ecloudrover.com/h-nd-112.html</a></p>]]></content>
    
    <summary type="html">
    
      
      
        
        
          &lt;h1 id=&quot;场景背景&quot;&gt;&lt;a href=&quot;#场景背景&quot;
        
      
    
    </summary>
    
    
      <category term="迁移" scheme="https://blog.wjzhe.ml/categories/%E8%BF%81%E7%A7%BB/"/>
    
    
      <category term="AWS" scheme="https://blog.wjzhe.ml/tags/AWS/"/>
    
      <category term="AWS S3" scheme="https://blog.wjzhe.ml/tags/AWS-S3/"/>
    
      <category term="migrate" scheme="https://blog.wjzhe.ml/tags/migrate/"/>
    
      <category term="转载" scheme="https://blog.wjzhe.ml/tags/%E8%BD%AC%E8%BD%BD/"/>
    
  </entry>
  
  <entry>
    <title>aws参考链接</title>
    <link href="https://blog.wjzhe.ml/2022/03/09/awslink/"/>
    <id>https://blog.wjzhe.ml/2022/03/09/awslink/</id>
    <published>2022-03-09T16:00:00.000Z</published>
    <updated>2022-03-09T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="伊克罗德信息科技"><a href="#伊克罗德信息科技" class="headerlink" title="伊克罗德信息科技"></a>伊克罗德信息科技</h1><table><thead><tr><th>序号</th><th>文章标题</th><th>链接</th></tr></thead><tbody><tr><td>1</td><td>如何防止 CPDoS 攻击？ - 伊克罗德信息科技</td><td><a href="https://www.ecloudrover.com/h-nd-1.html#_np=21_2595" target="_blank" rel="noopener">https://www.ecloudrover.com/h-nd-1.html#_np=21_2595</a></td></tr><tr><td>2</td><td>技术分享</td><td>AWS Elastic Beanstalk - 伊克罗德信息科技</td></tr><tr><td>3</td><td>Service Quotas – 如何申请 AWS EC2 资源上限？ - 伊克罗德信息科技</td><td><a href="https://www.ecloudrover.com/h-nd-3.html#_np=21_2595" target="_blank" rel="noopener">https://www.ecloudrover.com/h-nd-3.html#_np=21_2595</a></td></tr><tr><td>5</td><td>为什么很多成功企业选择使用数据湖？ - 伊克罗德信息科技</td><td><a href="https://www.ecloudrover.com/h-nd-5.html#_np=21_2595" target="_blank" rel="noopener">https://www.ecloudrover.com/h-nd-5.html#_np=21_2595</a></td></tr><tr><td>6</td><td>新一代的购物中心如何利用数据获取业务见解？ - 伊克罗德信息科技</td><td><a href="https://www.ecloudrover.com/h-nd-6.html#_np=21_2595" target="_blank" rel="noopener">https://www.ecloudrover.com/h-nd-6.html#_np=21_2595</a></td></tr><tr><td>7</td><td>规划云迁移？ 三大关键事项需要注意！ - 伊克罗德信息科技</td><td><a href="https://www.ecloudrover.com/h-nd-7.html#_np=21_2595" target="_blank" rel="noopener">https://www.ecloudrover.com/h-nd-7.html#_np=21_2595</a></td></tr><tr><td>8</td><td>无痛搬迁的关键角色—— CloudEndure - 伊克罗德信息科技</td><td><a href="https://www.ecloudrover.com/h-nd-8.html#_np=21_2595" target="_blank" rel="noopener">https://www.ecloudrover.com/h-nd-8.html#_np=21_2595</a></td></tr><tr><td>9</td><td>强化企业竞争力的秘密武器: 管理运营服务 - 伊克罗德信息科技</td><td><a href="https://www.ecloudrover.com/h-nd-9.html#_np=21_2595" target="_blank" rel="noopener">https://www.ecloudrover.com/h-nd-9.html#_np=21_2595</a></td></tr><tr><td>10</td><td>如何成为一间「云优先(CLOUD-FIRST)」的企业 - 伊克罗德信息科技</td><td><a href="https://www.ecloudrover.com/h-nd-10.html#_np=21_2595" target="_blank" rel="noopener">https://www.ecloudrover.com/h-nd-10.html#_np=21_2595</a></td></tr><tr><td>11</td><td>提升企业创新速度 ： DevOps - 伊克罗德信息科技</td><td><a href="https://www.ecloudrover.com/h-nd-11.html#_np=21_2595" target="_blank" rel="noopener">https://www.ecloudrover.com/h-nd-11.html#_np=21_2595</a></td></tr><tr><td>12</td><td>伊克罗德通过 AWS IoT 能力认证，在云端实现万物互联 - 伊克罗德信息科技</td><td><a href="https://www.ecloudrover.com/h-nd-12.html#_np=21_2595" target="_blank" rel="noopener">https://www.ecloudrover.com/h-nd-12.html#_np=21_2595</a></td></tr><tr><td>13</td><td>伊克罗德通过 AWS Data &amp; Analytics 资质认证　为企业数据分析备战 - 伊克罗德信息科技</td><td><a href="https://www.ecloudrover.com/h-nd-13.html#_np=21_2595" target="_blank" rel="noopener">https://www.ecloudrover.com/h-nd-13.html#_np=21_2595</a></td></tr><tr><td>14</td><td>伊克罗德正式成为APN Premier Consulting Partner - 伊克罗德信息科技</td><td><a href="https://www.ecloudrover.com/h-nd-14.html#_np=21_2595" target="_blank" rel="noopener">https://www.ecloudrover.com/h-nd-14.html#_np=21_2595</a></td></tr><tr><td>15</td><td>伊克罗德荣获AWS Migration Competency，为企业云端迁移保驾护航！ - 伊克罗德信息科技</td><td><a href="https://www.ecloudrover.com/h-nd-15.html#_np=21_2595" target="_blank" rel="noopener">https://www.ecloudrover.com/h-nd-15.html#_np=21_2595</a></td></tr><tr><td>16</td><td>伊克罗德荣获 Amazon Aurora 资质认证，协助企业实现安全高效迁移 - 伊克罗德信息科技</td><td><a href="https://www.ecloudrover.com/h-nd-16.html#_np=21_2595" target="_blank" rel="noopener">https://www.ecloudrover.com/h-nd-16.html#_np=21_2595</a></td></tr><tr><td>18</td><td>为什么效能测试那么不可或缺呢？ - 伊克罗德信息科技</td><td><a href="https://www.ecloudrover.com/h-nd-18.html#_np=21_2595" target="_blank" rel="noopener">https://www.ecloudrover.com/h-nd-18.html#_np=21_2595</a></td></tr><tr><td>19</td><td>实现真正的物联网价值 - 伊克罗德信息科技</td><td><a href="https://www.ecloudrover.com/h-nd-19.html#_np=21_2595" target="_blank" rel="noopener">https://www.ecloudrover.com/h-nd-19.html#_np=21_2595</a></td></tr><tr><td>24</td><td>如何防止 CPDoS 攻击？ - 伊克罗德信息科技</td><td><a href="https://www.ecloudrover.com/h-nd-24.html#_np=21_2595" target="_blank" rel="noopener">https://www.ecloudrover.com/h-nd-24.html#_np=21_2595</a></td></tr><tr><td>25</td><td>技术分享</td><td>AWS Elastic Beanstalk - 伊克罗德信息科技</td></tr><tr><td>27</td><td>AWS 大数据引擎驱动未来研讨会 - 伊克罗德信息科技</td><td><a href="https://www.ecloudrover.com/h-nd-27.html#_np=21_2595" target="_blank" rel="noopener">https://www.ecloudrover.com/h-nd-27.html#_np=21_2595</a></td></tr><tr><td>28</td><td>如何通过多区域部署实现高可用架构？ - 伊克罗德信息科技</td><td><a href="https://www.ecloudrover.com/h-nd-28.html#_np=21_2595" target="_blank" rel="noopener">https://www.ecloudrover.com/h-nd-28.html#_np=21_2595</a></td></tr><tr><td>29</td><td>伊克罗德通过AWS Data &amp; Analytics 资质认证　为企业数据分析备战 - 伊克罗德信息科技</td><td><a href="https://www.ecloudrover.com/h-nd-29.html#_np=21_2595" target="_blank" rel="noopener">https://www.ecloudrover.com/h-nd-29.html#_np=21_2595</a></td></tr><tr><td>31</td><td>案例分享</td><td>大华股份是如何通过云实现全球部署？ - 伊克罗德信息科技</td></tr><tr><td>32</td><td>Garner公布：2019年全球公共云基础设施专业和托管服务魔力象限的四大标准！ - 伊克罗德信息科技</td><td><a href="https://www.ecloudrover.com/h-nd-32.html#_np=21_2595" target="_blank" rel="noopener">https://www.ecloudrover.com/h-nd-32.html#_np=21_2595</a></td></tr><tr><td>33</td><td>和这些云专家“在一起”，上云一招变简单！ - 伊克罗德信息科技</td><td><a href="https://www.ecloudrover.com/h-nd-33.html#_np=21_2595" target="_blank" rel="noopener">https://www.ecloudrover.com/h-nd-33.html#_np=21_2595</a></td></tr><tr><td>34</td><td>5G将如何推动云计算发展？ - 伊克罗德信息科技</td><td><a href="https://www.ecloudrover.com/h-nd-34.html#_np=21_2595" target="_blank" rel="noopener">https://www.ecloudrover.com/h-nd-34.html#_np=21_2595</a></td></tr><tr><td>35</td><td>如何看待云计算和边缘计算的关系？ - 伊克罗德信息科技</td><td><a href="https://www.ecloudrover.com/h-nd-35.html#_np=21_2595" target="_blank" rel="noopener">https://www.ecloudrover.com/h-nd-35.html#_np=21_2595</a></td></tr><tr><td>36</td><td>AWS 新推出亚太（香港）区域！ - 伊克罗德信息科技</td><td><a href="https://www.ecloudrover.com/h-nd-36.html#_np=21_2595" target="_blank" rel="noopener">https://www.ecloudrover.com/h-nd-36.html#_np=21_2595</a></td></tr><tr><td>38</td><td>AI进入产业化阶段，还需谁的助力？ - 伊克罗德信息科技</td><td><a href="https://www.ecloudrover.com/h-nd-38.html#_np=21_2595" target="_blank" rel="noopener">https://www.ecloudrover.com/h-nd-38.html#_np=21_2595</a></td></tr><tr><td>40</td><td>在物联网领域，云计算到底有什么魔力？ - 伊克罗德信息科技</td><td><a href="https://www.ecloudrover.com/h-nd-40.html#_np=21_2595" target="_blank" rel="noopener">https://www.ecloudrover.com/h-nd-40.html#_np=21_2595</a></td></tr><tr><td>41</td><td>技术分享</td><td>如何利用S3fs在Amazon EC2 Linux实例上挂载S3存储桶 - 伊克罗德信息科技</td></tr><tr><td>42</td><td>6月20日，AWS技术峰会2019【上海站】，伊克罗德邀您即刻构建无限可能！ - 伊克罗德信息科技</td><td><a href="https://www.ecloudrover.com/h-nd-42.html#_np=21_2595" target="_blank" rel="noopener">https://www.ecloudrover.com/h-nd-42.html#_np=21_2595</a></td></tr><tr><td>43</td><td>技术分享</td><td>如何在AWS中启动并用Xshell连接一台Linux EC2? - 伊克罗德信息科技</td></tr><tr><td>44</td><td>案例分享</td><td>电子制造商的上云之路，你了解吗？ - 伊克罗德信息科技</td></tr><tr><td>45</td><td>技术分享</td><td>如何利用AWS Storage Gateway文件网关提高数据安全性 - 伊克罗德信息科技</td></tr><tr><td>46</td><td>7月31日，AWS技术峰会2019【北京站】，伊克罗德邀您即刻构建无限可能！ - 伊克罗德信息科技</td><td><a href="https://www.ecloudrover.com/h-nd-46.html#_np=21_2595" target="_blank" rel="noopener">https://www.ecloudrover.com/h-nd-46.html#_np=21_2595</a></td></tr><tr><td>47</td><td>技术分享</td><td>关于 AWS IoT Greengrass的部署与实践 - 伊克罗德信息科技</td></tr><tr><td>48</td><td>亚马逊AWS如何赋能区块链行业？专家们给出答案 - 伊克罗德信息科技</td><td><a href="https://www.ecloudrover.com/h-nd-48.html#_np=21_2595" target="_blank" rel="noopener">https://www.ecloudrover.com/h-nd-48.html#_np=21_2595</a></td></tr><tr><td>49</td><td>伊克罗德荣获【APN物联网合作伙伴之星】，为您实现智慧物联！ - 伊克罗德信息科技</td><td><a href="https://www.ecloudrover.com/h-nd-49.html#_np=21_2595" target="_blank" rel="noopener">https://www.ecloudrover.com/h-nd-49.html#_np=21_2595</a></td></tr><tr><td>50</td><td>伊克罗德受邀参加AWS Summit 2019，带您感受不一样的云端旅程 - 伊克罗德信息科技</td><td><a href="https://www.ecloudrover.com/h-nd-50.html#_np=21_2595" target="_blank" rel="noopener">https://www.ecloudrover.com/h-nd-50.html#_np=21_2595</a></td></tr><tr><td>51</td><td>案例分享</td><td>芝麻开门——云服务走进数据企业的大门 - 伊克罗德信息科技</td></tr><tr><td>52</td><td>无痛搬迁的关键角色 —— CloudEndure - 伊克罗德信息科技</td><td><a href="https://www.ecloudrover.com/h-nd-52.html#_np=21_2595" target="_blank" rel="noopener">https://www.ecloudrover.com/h-nd-52.html#_np=21_2595</a></td></tr><tr><td>53</td><td>9月27日，AWS技术峰会2019【深圳站】，伊克罗德邀您即刻构建无限可能！ - 伊克罗德信息科技</td><td><a href="https://www.ecloudrover.com/h-nd-53.html#_np=21_2595" target="_blank" rel="noopener">https://www.ecloudrover.com/h-nd-53.html#_np=21_2595</a></td></tr><tr><td>54</td><td>AWS 中国区域 8 月新服务汇整 - 伊克罗德信息科技</td><td><a href="https://www.ecloudrover.com/h-nd-54.html#_np=21_2595" target="_blank" rel="noopener">https://www.ecloudrover.com/h-nd-54.html#_np=21_2595</a></td></tr><tr><td>55</td><td>规划云迁移？ 三大关键事项需要注意！ - 伊克罗德信息科技</td><td><a href="https://www.ecloudrover.com/h-nd-55.html#_np=21_2595" target="_blank" rel="noopener">https://www.ecloudrover.com/h-nd-55.html#_np=21_2595</a></td></tr><tr><td>56</td><td>伊克罗德受邀参加AWS Summit 2019，助力企业走上云端 - 伊克罗德信息科技</td><td><a href="https://www.ecloudrover.com/h-nd-56.html#_np=21_2595" target="_blank" rel="noopener">https://www.ecloudrover.com/h-nd-56.html#_np=21_2595</a></td></tr><tr><td>58</td><td>案例分享</td><td>中企动力携手伊克罗德，助力中国企业出海！ - 伊克罗德信息科技</td></tr><tr><td>59</td><td>开启全景式区块链应用落地，还需这把“云梯”</td><td>亚马逊AWS系列分享 - 伊克罗德信息科技</td></tr><tr><td>60</td><td>案例分享</td><td>心动网络借力云端，成功实现产品的海外发行 - 伊克罗德信息科技</td></tr><tr><td>61</td><td>数字广告和电商出海受阻？伊克罗德为您保驾护航！ - 伊克罗德信息科技</td><td><a href="https://www.ecloudrover.com/h-nd-61.html#_np=21_2595" target="_blank" rel="noopener">https://www.ecloudrover.com/h-nd-61.html#_np=21_2595</a></td></tr><tr><td>62</td><td>AWS re:Invent 2019 ，Andy Jessy带来了哪些硬核惊喜？ - 伊克罗德信息科技</td><td><a href="https://www.ecloudrover.com/h-nd-62.html#_np=21_2595" target="_blank" rel="noopener">https://www.ecloudrover.com/h-nd-62.html#_np=21_2595</a></td></tr><tr><td>63</td><td>企业如何落实大数据的迁移和分析？ - 伊克罗德信息科技</td><td><a href="https://www.ecloudrover.com/h-nd-63.html#_np=21_2595" target="_blank" rel="noopener">https://www.ecloudrover.com/h-nd-63.html#_np=21_2595</a></td></tr><tr><td>64</td><td>Service Quotas - 如何申请 AWS EC2 资源上限？ - 伊克罗德信息科技</td><td><a href="https://www.ecloudrover.com/h-nd-64.html#_np=21_2595" target="_blank" rel="noopener">https://www.ecloudrover.com/h-nd-64.html#_np=21_2595</a></td></tr><tr><td>65</td><td>案例分享</td><td>学旅家携手伊克罗德，为留学生打造便捷租房平台 - 伊克罗德信息科技</td></tr><tr><td>66</td><td>致客户：疫情当下，我们一直都在 - 伊克罗德信息科技</td><td><a href="https://www.ecloudrover.com/h-nd-66.html#_np=21_2595" target="_blank" rel="noopener">https://www.ecloudrover.com/h-nd-66.html#_np=21_2595</a></td></tr><tr><td>67</td><td>“疫”常时期, 云办公更受欢迎？ - 伊克罗德信息科技</td><td><a href="https://www.ecloudrover.com/h-nd-67.html#_np=21_2595" target="_blank" rel="noopener">https://www.ecloudrover.com/h-nd-67.html#_np=21_2595</a></td></tr><tr><td>68</td><td>伊克罗德荣获 Amazon CloudFront Service Delivery，助力企业安全实现低延迟！ - 伊克罗德信息科技</td><td><a href="https://www.ecloudrover.com/h-nd-68.html#_np=21_2595" target="_blank" rel="noopener">https://www.ecloudrover.com/h-nd-68.html#_np=21_2595</a></td></tr><tr><td>69</td><td>案例分享</td><td>IOST借力云端，快速实现全球化部署 - 伊克罗德信息科技</td></tr><tr><td>70</td><td>专家把脉新基建风口，诠释区块链+AWS云的N种可能 - 伊克罗德信息科技</td><td><a href="https://www.ecloudrover.com/h-nd-70.html#_np=21_2595" target="_blank" rel="noopener">https://www.ecloudrover.com/h-nd-70.html#_np=21_2595</a></td></tr><tr><td>71</td><td>伊克罗德荣获 AWS WAF 认证，助力企业实现高效精准的安全防护 - 伊克罗德信息科技</td><td><a href="https://www.ecloudrover.com/h-nd-71.html#_np=21_2595" target="_blank" rel="noopener">https://www.ecloudrover.com/h-nd-71.html#_np=21_2595</a></td></tr><tr><td>72</td><td>伊克罗德新 logo 官宣 - 伊克罗德信息科技</td><td><a href="https://www.ecloudrover.com/h-nd-72.html#_np=21_2595" target="_blank" rel="noopener">https://www.ecloudrover.com/h-nd-72.html#_np=21_2595</a></td></tr><tr><td>73</td><td>S3 作为 AWS CloudFront 源真的安全吗？ - 伊克罗德信息科技</td><td><a href="https://www.ecloudrover.com/h-nd-73.html#_np=21_2595" target="_blank" rel="noopener">https://www.ecloudrover.com/h-nd-73.html#_np=21_2595</a></td></tr><tr><td>74</td><td>伊克罗德荣获 Amazon EMR，惊喜突破 10 ！ - 伊克罗德信息科技</td><td><a href="https://www.ecloudrover.com/h-nd-74.html#_np=21_2595" target="_blank" rel="noopener">https://www.ecloudrover.com/h-nd-74.html#_np=21_2595</a></td></tr><tr><td>75</td><td>案例分享</td><td>上海视凯阅克信息科技有限公司 - 伊克罗德信息科技</td></tr><tr><td>76</td><td>案例分享</td><td>因时而变，上海必刻携手伊克罗德登入云端 - 伊克罗德信息科技</td></tr><tr><td>77</td><td>案例分享</td><td>伊克罗德助力海康威视，开启海外新征程！ - 伊克罗德信息科技</td></tr><tr><td>78</td><td>AWS DeepLens 带你感受 AI 经济新潮流 - 伊克罗德信息科技</td><td><a href="https://www.ecloudrover.com/h-nd-78.html#_np=21_2595" target="_blank" rel="noopener">https://www.ecloudrover.com/h-nd-78.html#_np=21_2595</a></td></tr><tr><td>79</td><td>案例分享</td><td>如兴携手伊克罗德，实现智慧分析和预测 - 伊克罗德信息科技</td></tr><tr><td>80</td><td>案例分享</td><td>伊克罗德协助春树实现商品智能分类 - 伊克罗德信息科技</td></tr><tr><td>81</td><td>三分钟了解机器学习的四个学习方式 - 伊克罗德信息科技</td><td><a href="https://www.ecloudrover.com/h-nd-81.html#_np=21_2595" target="_blank" rel="noopener">https://www.ecloudrover.com/h-nd-81.html#_np=21_2595</a></td></tr><tr><td>83</td><td>机器学习案例-采购成本预测模型建立 - 伊克罗德信息科技</td><td><a href="https://www.ecloudrover.com/h-nd-83.html#_np=21_2595" target="_blank" rel="noopener">https://www.ecloudrover.com/h-nd-83.html#_np=21_2595</a></td></tr><tr><td>84</td><td>Amazon SageMaker 三部曲 (上) - 伊克罗德信息科技</td><td><a href="https://www.ecloudrover.com/h-nd-84.html#_np=21_2595" target="_blank" rel="noopener">https://www.ecloudrover.com/h-nd-84.html#_np=21_2595</a></td></tr><tr><td>85</td><td>Amazon SageMaker 三部曲（中） - 伊克罗德信息科技</td><td><a href="https://www.ecloudrover.com/h-nd-85.html#_np=21_2595" target="_blank" rel="noopener">https://www.ecloudrover.com/h-nd-85.html#_np=21_2595</a></td></tr><tr><td>86</td><td>Amazon SageMaker 三部曲 (下) - 伊克罗德信息科技</td><td><a href="https://www.ecloudrover.com/h-nd-86.html#_np=21_2595" target="_blank" rel="noopener">https://www.ecloudrover.com/h-nd-86.html#_np=21_2595</a></td></tr><tr><td>87</td><td>向智慧企业转型，开创商业新模式 - 伊克罗德信息科技</td><td><a href="https://www.ecloudrover.com/h-nd-87.html#_np=21_2595" target="_blank" rel="noopener">https://www.ecloudrover.com/h-nd-87.html#_np=21_2595</a></td></tr><tr><td>89</td><td>一波预告</td><td>【Amazon Web Services助力企业云上高可用】线上研讨会来啦！ - 伊克罗德信息科技</td></tr><tr><td>90</td><td>Lambda@edge 轻松入手，以低延迟响应最终用户 - 伊克罗德信息科技</td><td><a href="https://www.ecloudrover.com/h-nd-90.html#_np=21_2595" target="_blank" rel="noopener">https://www.ecloudrover.com/h-nd-90.html#_np=21_2595</a></td></tr><tr><td>91</td><td>6月活动预告，会有哪些惊喜等你？ - 伊克罗德信息科技</td><td><a href="https://www.ecloudrover.com/h-nd-91.html#_np=21_2595" target="_blank" rel="noopener">https://www.ecloudrover.com/h-nd-91.html#_np=21_2595</a></td></tr><tr><td>92</td><td>活动预告</td><td>6月30日【出海 · 远征】，你预定好票了吗？ - 伊克罗德信息科技</td></tr><tr><td>94</td><td>跨境电商平台 XShoppy 的上云之路 - 伊克罗德信息科技</td><td><a href="https://www.ecloudrover.com/h-nd-94.html#_np=21_2595" target="_blank" rel="noopener">https://www.ecloudrover.com/h-nd-94.html#_np=21_2595</a></td></tr><tr><td>95</td><td>隐私权声明 - 伊克罗德信息科技</td><td><a href="https://www.ecloudrover.com/h-nd-95.html#_np=21_2595" target="_blank" rel="noopener">https://www.ecloudrover.com/h-nd-95.html#_np=21_2595</a></td></tr><tr><td>96</td><td>伊克罗德荣获 AWS 机器学习能力认证，助力客户构建“智慧型”企业 - 伊克罗德信息科技</td><td><a href="https://www.ecloudrover.com/h-nd-96.html#_np=21_2595" target="_blank" rel="noopener">https://www.ecloudrover.com/h-nd-96.html#_np=21_2595</a></td></tr><tr><td>97</td><td>案例分享</td><td>纺织制造商如何成为“智慧型”企业？ - 伊克罗德信息科技</td></tr><tr><td>98</td><td>案例分享</td><td>营销科技公司的云上 AI 之旅 - 伊克罗德信息科技</td></tr><tr><td>99</td><td>企业如何快速无痛的更换应用程序版本？ - 伊克罗德信息科技</td><td><a href="https://www.ecloudrover.com/h-nd-99.html#_np=21_2595" target="_blank" rel="noopener">https://www.ecloudrover.com/h-nd-99.html#_np=21_2595</a></td></tr><tr><td>100</td><td>AWS 合作伙伴峰会 2020，伊克罗德又添两大奖项！ - 伊克罗德信息科技</td><td><a href="https://www.ecloudrover.com/h-nd-100.html#_np=21_2595" target="_blank" rel="noopener">https://www.ecloudrover.com/h-nd-100.html#_np=21_2595</a></td></tr><tr><td>101</td><td>如何应对频繁访问的网络攻击? 一招 WAF 制胜 - 伊克罗德信息科技</td><td><a href="https://www.ecloudrover.com/h-nd-101.html#_np=21_2595" target="_blank" rel="noopener">https://www.ecloudrover.com/h-nd-101.html#_np=21_2595</a></td></tr><tr><td>102</td><td>Athena 帮您轻松查询分析 WAF 日志，有效阻止恶意攻击 - 伊克罗德信息科技</td><td><a href="https://www.ecloudrover.com/h-nd-102.html#_np=21_2595" target="_blank" rel="noopener">https://www.ecloudrover.com/h-nd-102.html#_np=21_2595</a></td></tr><tr><td>103</td><td>如何在 CentOS 7 上挂载 Amazon EFS 文件系统？ - 伊克罗德信息科技</td><td><a href="https://www.ecloudrover.com/h-nd-103.html#_np=21_2595" target="_blank" rel="noopener">https://www.ecloudrover.com/h-nd-103.html#_np=21_2595</a></td></tr><tr><td>104</td><td>10月20日，AWSome Day 2020 天津站来了! - 伊克罗德信息科技</td><td><a href="https://www.ecloudrover.com/h-nd-104.html#_np=21_2595" target="_blank" rel="noopener">https://www.ecloudrover.com/h-nd-104.html#_np=21_2595</a></td></tr><tr><td>105</td><td>大华股份携手伊克罗德，打造云上安全策略 - 伊克罗德信息科技</td><td><a href="https://www.ecloudrover.com/h-nd-105.html#_np=21_2595" target="_blank" rel="noopener">https://www.ecloudrover.com/h-nd-105.html#_np=21_2595</a></td></tr><tr><td>106</td><td>某区块链交易平台的云上安全之路 - 伊克罗德信息科技</td><td><a href="https://www.ecloudrover.com/h-nd-106.html#_np=21_2595" target="_blank" rel="noopener">https://www.ecloudrover.com/h-nd-106.html#_np=21_2595</a></td></tr><tr><td>107</td><td>11月6日，Amazon Web Services现场教您一键部署网络加速+安全，实现轻松出海 - 伊克罗德信息科技</td><td><a href="https://www.ecloudrover.com/h-nd-107.html#_np=21_2595" target="_blank" rel="noopener">https://www.ecloudrover.com/h-nd-107.html#_np=21_2595</a></td></tr><tr><td>108</td><td>11月13日，Amazon Web Services 邀您一起见证后疫情时代，企业如何实现敏捷创新？ - 伊克罗德信息科技</td><td><a href="https://www.ecloudrover.com/h-nd-108.html#_np=21_2595" target="_blank" rel="noopener">https://www.ecloudrover.com/h-nd-108.html#_np=21_2595</a></td></tr><tr><td>109</td><td>伊克罗德员工受邀亚马逊云科技 Academy采访，展现云技术人才风采 - 伊克罗德信息科技</td><td><a href="https://www.ecloudrover.com/h-nd-109.html#_np=21_2595" target="_blank" rel="noopener">https://www.ecloudrover.com/h-nd-109.html#_np=21_2595</a></td></tr><tr><td>110</td><td>如何高效实现音视频字幕自动生成及翻译？ - 伊克罗德信息科技</td><td><a href="https://www.ecloudrover.com/h-nd-110.html#_np=21_2595" target="_blank" rel="noopener">https://www.ecloudrover.com/h-nd-110.html#_np=21_2595</a></td></tr><tr><td>111</td><td>关于GDPR，你了解多少? - 伊克罗德信息科技</td><td><a href="https://www.ecloudrover.com/h-nd-111.html#_np=21_2595" target="_blank" rel="noopener">https://www.ecloudrover.com/h-nd-111.html#_np=21_2595</a></td></tr><tr><td>112</td><td>数据迁移篇之 S3 跨账号复制 - 伊克罗德信息科技</td><td><a href="https://www.ecloudrover.com/h-nd-112.html#_np=21_2595" target="_blank" rel="noopener">https://www.ecloudrover.com/h-nd-112.html#_np=21_2595</a></td></tr><tr><td>113</td><td>网络排错神器 VPC- Reachability Analyzer 来了！您get了吗？ - 伊克罗德信息科技</td><td><a href="https://www.ecloudrover.com/h-nd-113.html#_np=21_2595" target="_blank" rel="noopener">https://www.ecloudrover.com/h-nd-113.html#_np=21_2595</a></td></tr><tr><td>114</td><td>如何快速将 SAP 文件传输到 S3，实现自动化 - 伊克罗德信息科技</td><td><a href="https://www.ecloudrover.com/h-nd-114.html#_np=21_2595" target="_blank" rel="noopener">https://www.ecloudrover.com/h-nd-114.html#_np=21_2595</a></td></tr><tr><td>115</td><td>伊克罗德助力莱煕科技上云，打赢社交出海攻坚战 - 伊克罗德信息科技</td><td><a href="https://www.ecloudrover.com/h-nd-115.html#_np=21_2595" target="_blank" rel="noopener">https://www.ecloudrover.com/h-nd-115.html#_np=21_2595</a></td></tr><tr><td>116</td><td>恒天携手伊克罗德迁移上云，国内外用户访问体验提升助推业务增长 - 伊克罗德信息科技</td><td><a href="https://www.ecloudrover.com/h-nd-116.html#_np=21_2595" target="_blank" rel="noopener">https://www.ecloudrover.com/h-nd-116.html#_np=21_2595</a></td></tr><tr><td>117</td><td>伊克罗德受邀CTDC，荣获最具信赖技术服务商奖 - 伊克罗德信息科技</td><td><a href="https://www.ecloudrover.com/h-nd-117.html#_np=21_2595" target="_blank" rel="noopener">https://www.ecloudrover.com/h-nd-117.html#_np=21_2595</a></td></tr><tr><td>118</td><td>电商新赛道 - 从亚马逊 SP-API中洞察数据价值 - 伊克罗德信息科技</td><td><a href="https://www.ecloudrover.com/h-nd-118.html#_np=21_2595" target="_blank" rel="noopener">https://www.ecloudrover.com/h-nd-118.html#_np=21_2595</a></td></tr><tr><td>119</td><td>某电商独立站建站商上云，安全、低延迟赢得用户信赖 - 伊克罗德信息科技</td><td><a href="https://www.ecloudrover.com/h-nd-119.html#_np=21_2595" target="_blank" rel="noopener">https://www.ecloudrover.com/h-nd-119.html#_np=21_2595</a></td></tr><tr><td>120</td><td>借助 AWS Glue + Athena ，手把手带您快速搭建数据湖 - 伊克罗德信息科技</td><td><a href="https://www.ecloudrover.com/h-nd-120.html#_np=21_2595" target="_blank" rel="noopener">https://www.ecloudrover.com/h-nd-120.html#_np=21_2595</a></td></tr><tr><td>121</td><td>3月15日  AI/ML 启未来 驱动企业智慧转型 - 伊克罗德信息科技</td><td><a href="https://www.ecloudrover.com/h-nd-121.html#_np=21_2595" target="_blank" rel="noopener">https://www.ecloudrover.com/h-nd-121.html#_np=21_2595</a></td></tr><tr><td>122</td><td>CICD- 自动更新Docker Image到Auto Scaling Group - 伊克罗德信息科技</td><td><a href="https://www.ecloudrover.com/h-nd-122.html#_np=21_2595" target="_blank" rel="noopener">https://www.ecloudrover.com/h-nd-122.html#_np=21_2595</a></td></tr><tr><td>123</td><td>伊克罗德荣获亚马逊云安全能力认证，助力企业安全上云！ - 伊克罗德信息科技</td><td><a href="https://www.ecloudrover.com/h-nd-123.html#_np=21_2595" target="_blank" rel="noopener">https://www.ecloudrover.com/h-nd-123.html#_np=21_2595</a></td></tr><tr><td>124</td><td>4月9日，亚马逊云科技助力电商海外乘风破浪 - 伊克罗德信息科技</td><td><a href="https://www.ecloudrover.com/h-nd-124.html#_np=21_2595" target="_blank" rel="noopener">https://www.ecloudrover.com/h-nd-124.html#_np=21_2595</a></td></tr><tr><td>125</td><td>宏富云通过云端实现自动化，提高运营效率 - 伊克罗德信息科技</td><td><a href="https://www.ecloudrover.com/h-nd-125.html#_np=21_2595" target="_blank" rel="noopener">https://www.ecloudrover.com/h-nd-125.html#_np=21_2595</a></td></tr><tr><td>126</td><td>某专业服务型厂商安全高效上云，实现数字化转型 - 伊克罗德信息科技</td><td><a href="https://www.ecloudrover.com/h-nd-126.html#_np=21_2595" target="_blank" rel="noopener">https://www.ecloudrover.com/h-nd-126.html#_np=21_2595</a></td></tr><tr><td>127</td><td>特步运用云端优势实现全球业务部署 - 伊克罗德信息科技</td><td><a href="https://www.ecloudrover.com/h-nd-127.html#_np=21_2595" target="_blank" rel="noopener">https://www.ecloudrover.com/h-nd-127.html#_np=21_2595</a></td></tr><tr><td>128</td><td>某运动品牌厂商运用云端优势，成功走向海外 - 伊克罗德信息科技</td><td><a href="https://www.ecloudrover.com/h-nd-128.html#_np=21_2595" target="_blank" rel="noopener">https://www.ecloudrover.com/h-nd-128.html#_np=21_2595</a></td></tr><tr><td>129</td><td>实力彰显！伊克罗德售前总监黄家曦被评为 “亚马逊云科技 APN 大使” - 伊克罗德信息科技</td><td><a href="https://www.ecloudrover.com/h-nd-129.html#_np=21_2595" target="_blank" rel="noopener">https://www.ecloudrover.com/h-nd-129.html#_np=21_2595</a></td></tr><tr><td>130</td><td>如何安全快速的实现SAP自动化部署？ - 伊克罗德信息科技</td><td><a href="https://www.ecloudrover.com/h-nd-130.html#_np=21_2595" target="_blank" rel="noopener">https://www.ecloudrover.com/h-nd-130.html#_np=21_2595</a></td></tr><tr><td>131</td><td>玩转数据，结合SAP将数据的价值最大化 - 伊克罗德信息科技</td><td><a href="https://www.ecloudrover.com/h-nd-131.html#_np=21_2595" target="_blank" rel="noopener">https://www.ecloudrover.com/h-nd-131.html#_np=21_2595</a></td></tr><tr><td>132</td><td>​这个新功能要火！简单四步骤实现海外中国镜像共享 - 伊克罗德信息科技</td><td><a href="https://www.ecloudrover.com/h-nd-132.html#_np=21_2595" target="_blank" rel="noopener">https://www.ecloudrover.com/h-nd-132.html#_np=21_2595</a></td></tr><tr><td>133</td><td>伊克罗德受邀参加【亚马逊云科技AI在线大会】，为您揭秘：企业如何融入 AI 实现智慧转型 - 伊克罗德信息科技</td><td><a href="https://www.ecloudrover.com/h-nd-133.html#_np=21_2595" target="_blank" rel="noopener">https://www.ecloudrover.com/h-nd-133.html#_np=21_2595</a></td></tr><tr><td>134</td><td>如何有效防御 CC DDoS 攻击？ - 伊克罗德信息科技</td><td><a href="https://www.ecloudrover.com/h-nd-134.html#_np=21_2595" target="_blank" rel="noopener">https://www.ecloudrover.com/h-nd-134.html#_np=21_2595</a></td></tr><tr><td>135</td><td>CloudFront - 限制访问 Application Load Balancer - 伊克罗德信息科技</td><td><a href="https://www.ecloudrover.com/h-nd-135.html#_np=21_2595" target="_blank" rel="noopener">https://www.ecloudrover.com/h-nd-135.html#_np=21_2595</a></td></tr><tr><td>136</td><td>伊克罗德 AI 数据中台解决方案荣获2020-2021中国大数据产业优秀解决方案 - 伊克罗德信息科技</td><td><a href="https://www.ecloudrover.com/h-nd-136.html#_np=21_2595" target="_blank" rel="noopener">https://www.ecloudrover.com/h-nd-136.html#_np=21_2595</a></td></tr><tr><td>137</td><td>Pinpoint 助力营销团队轻松实现广告推送及分析 - 伊克罗德信息科技</td><td><a href="https://www.ecloudrover.com/h-nd-137.html#_np=21_2595" target="_blank" rel="noopener">https://www.ecloudrover.com/h-nd-137.html#_np=21_2595</a></td></tr><tr><td>138</td><td>5月27日，亚马逊云科技赋能跨境电商出海新体验 - 伊克罗德信息科技</td><td><a href="https://www.ecloudrover.com/h-nd-138.html#_np=21_2595" target="_blank" rel="noopener">https://www.ecloudrover.com/h-nd-138.html#_np=21_2595</a></td></tr><tr><td>139</td><td>伊克罗德荣获亚马逊云 SAP 认证，助力企业实现数字化转型 - 伊克罗德信息科技</td><td><a href="https://www.ecloudrover.com/h-nd-139.html#_np=21_2595" target="_blank" rel="noopener">https://www.ecloudrover.com/h-nd-139.html#_np=21_2595</a></td></tr><tr><td>140</td><td>AWSome Day 2021 天津站、郑州站完美落幕，最后一站济南站 我们不见不散！ - 伊克罗德信息科技</td><td><a href="https://www.ecloudrover.com/h-nd-140.html#_np=21_2595" target="_blank" rel="noopener">https://www.ecloudrover.com/h-nd-140.html#_np=21_2595</a></td></tr><tr><td>141</td><td>CDN加速之旅，快速实现低成本的业务和市场的拓展，我们杭州见！ - 伊克罗德信息科技</td><td><a href="https://www.ecloudrover.com/h-nd-141.html#_np=21_2595" target="_blank" rel="noopener">https://www.ecloudrover.com/h-nd-141.html#_np=21_2595</a></td></tr><tr><td>142</td><td>伊克罗德助力知名游戏公司 加速游戏迭代周期 - 伊克罗德信息科技</td><td><a href="https://www.ecloudrover.com/h-nd-142.html#_np=21_2595" target="_blank" rel="noopener">https://www.ecloudrover.com/h-nd-142.html#_np=21_2595</a></td></tr><tr><td>143</td><td>伊克罗德助力某科技产业公司卓越运维 - 伊克罗德信息科技</td><td><a href="https://www.ecloudrover.com/h-nd-143.html#_np=21_2595" target="_blank" rel="noopener">https://www.ecloudrover.com/h-nd-143.html#_np=21_2595</a></td></tr><tr><td>144</td><td>手把后教你如何使用 Elasticsearch 进行 WAF 日志分析 - 伊克罗德信息科技</td><td><a href="https://www.ecloudrover.com/h-nd-144.html#_np=21_2595" target="_blank" rel="noopener">https://www.ecloudrover.com/h-nd-144.html#_np=21_2595</a></td></tr><tr><td>146</td><td>AI机器人结合物联网，伊克罗德助力镁伽踏云而行！ - 伊克罗德信息科技</td><td><a href="https://www.ecloudrover.com/h-nd-146.html#_np=21_2595" target="_blank" rel="noopener">https://www.ecloudrover.com/h-nd-146.html#_np=21_2595</a></td></tr><tr><td>147</td><td>CICD- 自动部署应用到EKS - 伊克罗德信息科技</td><td><a href="https://www.ecloudrover.com/h-nd-147.html#_np=21_2595" target="_blank" rel="noopener">https://www.ecloudrover.com/h-nd-147.html#_np=21_2595</a></td></tr><tr><td>148</td><td>CodePipeline - 构建CICD流程 - 伊克罗德信息科技</td><td><a href="https://www.ecloudrover.com/h-nd-148.html#_np=21_2595" target="_blank" rel="noopener">https://www.ecloudrover.com/h-nd-148.html#_np=21_2595</a></td></tr><tr><td>149</td><td>热腾腾新技能GET！ 无停机跨账号迁移Cloudfront Distribution - 伊克罗德信息科技</td><td><a href="https://www.ecloudrover.com/h-nd-149.html#_np=21_2595" target="_blank" rel="noopener">https://www.ecloudrover.com/h-nd-149.html#_np=21_2595</a></td></tr><tr><td>150</td><td>贺！中国队勇夺9金、伊克罗德荣获亚马逊云科技双项殊荣 - 伊克罗德信息科技</td><td><a href="https://www.ecloudrover.com/h-nd-150.html#_np=21_2595" target="_blank" rel="noopener">https://www.ecloudrover.com/h-nd-150.html#_np=21_2595</a></td></tr><tr><td>151</td><td>泛娱乐、游戏、电商全球化 我们助你一臂之力！ - 伊克罗德信息科技</td><td><a href="https://www.ecloudrover.com/h-nd-151.html#_np=21_2595" target="_blank" rel="noopener">https://www.ecloudrover.com/h-nd-151.html#_np=21_2595</a></td></tr><tr><td>152</td><td>庆贺！！！伊克罗德成为国内率先使用宁夏西云新上线原生服务WAF为自有系统通过网络安全等级保护2.0认证企业 - 伊克罗德信息科技</td><td><a href="https://www.ecloudrover.com/h-nd-152.html#_np=21_2595" target="_blank" rel="noopener">https://www.ecloudrover.com/h-nd-152.html#_np=21_2595</a></td></tr><tr><td>153</td><td>伊克罗德与Radware中国正式成为战略合作伙伴 为您的云上安全保驾护航！ - 伊克罗德信息科技</td><td><a href="https://www.ecloudrover.com/h-nd-153.html#_np=21_2595" target="_blank" rel="noopener">https://www.ecloudrover.com/h-nd-153.html#_np=21_2595</a></td></tr><tr><td>154</td><td>跨境电商新赛道，云原生下的电商独立站出海 - 伊克罗德信息科技</td><td><a href="https://www.ecloudrover.com/h-nd-154.html#_np=21_2595" target="_blank" rel="noopener">https://www.ecloudrover.com/h-nd-154.html#_np=21_2595</a></td></tr><tr><td>156</td><td>以科技赋能初创企业  引领创新新时代！ - 伊克罗德信息科技</td><td><a href="https://www.ecloudrover.com/h-nd-156.html#_np=21_2595" target="_blank" rel="noopener">https://www.ecloudrover.com/h-nd-156.html#_np=21_2595</a></td></tr><tr><td>157</td><td>伊克罗德助力创新加速周第三季</td><td>与亚马逊云科技助您打造数据驱动型企业 - 伊克罗德信息科技</td></tr><tr><td>158</td><td>伊克罗德助力拼量网完成核心业务数据中心云迁移！ - 伊克罗德信息科技</td><td><a href="https://www.ecloudrover.com/h-nd-158.html#_np=21_2595" target="_blank" rel="noopener">https://www.ecloudrover.com/h-nd-158.html#_np=21_2595</a></td></tr><tr><td>159</td><td>又双叒叕得奖了！伊克罗德荣获鲸鸣奖2021年度出海新锐出海品牌！ - 伊克罗德信息科技</td><td><a href="https://www.ecloudrover.com/h-nd-159.html#_np=21_2595" target="_blank" rel="noopener">https://www.ecloudrover.com/h-nd-159.html#_np=21_2595</a></td></tr><tr><td>160</td><td>社交应用抢占海外市场，上云更简单！ - 伊克罗德信息科技</td><td><a href="https://www.ecloudrover.com/h-nd-160.html#_np=21_2595" target="_blank" rel="noopener">https://www.ecloudrover.com/h-nd-160.html#_np=21_2595</a></td></tr><tr><td>161</td><td>贺！伊克罗德获得AWS DevOps 能力认证！相关项目能力达行业领先水平！ - 伊克罗德信息科技</td><td><a href="https://www.ecloudrover.com/h-nd-161.html#_np=21_2595" target="_blank" rel="noopener">https://www.ecloudrover.com/h-nd-161.html#_np=21_2595</a></td></tr><tr><td>162</td><td>伊克罗德携手TiDB 提升您云数据库性能！ - 伊克罗德信息科技</td><td><a href="https://www.ecloudrover.com/h-nd-162.html#_np=21_2595" target="_blank" rel="noopener">https://www.ecloudrover.com/h-nd-162.html#_np=21_2595</a></td></tr><tr><td>163</td><td>亚马逊云托管服务和地端托管服务相比丨优点真的太多啦！ - 伊克罗德信息科技</td><td><a href="https://www.ecloudrover.com/h-nd-163.html#_np=21_2595" target="_blank" rel="noopener">https://www.ecloudrover.com/h-nd-163.html#_np=21_2595</a></td></tr><tr><td>164</td><td>伊克罗德荣获亚马逊云科技 Well-Architected Partners - 伊克罗德信息科技</td><td><a href="https://www.ecloudrover.com/h-nd-164.html#_np=21_2595" target="_blank" rel="noopener">https://www.ecloudrover.com/h-nd-164.html#_np=21_2595</a></td></tr><tr><td>165</td><td>确保在亚马逊上顺利进行 SAP 迁移 - 伊克罗德信息科技</td><td><a href="https://www.ecloudrover.com/h-nd-165.html#_np=21_2595" target="_blank" rel="noopener">https://www.ecloudrover.com/h-nd-165.html#_np=21_2595</a></td></tr><tr><td>166</td><td>成为数据驱动型公司的秘诀 - 伊克罗德信息科技</td><td><a href="https://www.ecloudrover.com/h-nd-166.html#_np=21_2595" target="_blank" rel="noopener">https://www.ecloudrover.com/h-nd-166.html#_np=21_2595</a></td></tr><tr><td>167</td><td>ABAP 使 SAP S/4HANA 和亚马逊S3 之间的文件交换变得更便捷 - 伊克罗德信息科技</td><td><a href="https://www.ecloudrover.com/h-nd-167.html#_np=21_2595" target="_blank" rel="noopener">https://www.ecloudrover.com/h-nd-167.html#_np=21_2595</a></td></tr><tr><td>168</td><td>为亚马逊的SAP应用程序启用 AUTO SCALING - 伊克罗德信息科技</td><td><a href="https://www.ecloudrover.com/h-nd-168.html#_np=21_2595" target="_blank" rel="noopener">https://www.ecloudrover.com/h-nd-168.html#_np=21_2595</a></td></tr><tr><td>169</td><td>如何使用亚马逊上的数据湖构建下一代分析平台 - 伊克罗德信息科技</td><td><a href="https://www.ecloudrover.com/h-nd-169.html#_np=21_2595" target="_blank" rel="noopener">https://www.ecloudrover.com/h-nd-169.html#_np=21_2595</a></td></tr><tr><td>170</td><td>我的上云故事</td><td>亚马逊云科技协同伊克罗德赋能赛凌科技 - 伊克罗德信息科技</td></tr><tr><td>171</td><td>伊克罗德亮相2021全球互联网产业CEO大会（GICC）！助力企业高效连接全球用户！ - 伊克罗德信息科技</td><td><a href="https://www.ecloudrover.com/h-nd-171.html#_np=21_2595" target="_blank" rel="noopener">https://www.ecloudrover.com/h-nd-171.html#_np=21_2595</a></td></tr><tr><td>172</td><td>伊克罗德 &amp; Radware携手举办 《看不见的威胁-恶意机器人攻击》线上直播活动 - 伊克罗德信息科技</td><td><a href="https://www.ecloudrover.com/h-nd-172.html#_np=21_2595" target="_blank" rel="noopener">https://www.ecloudrover.com/h-nd-172.html#_np=21_2595</a></td></tr><tr><td>173</td><td>满分过审！伊克罗德获得1000分成功通过亚马逊云科技MSP稽核！ - 伊克罗德信息科技</td><td><a href="https://www.ecloudrover.com/h-nd-173.html#_np=21_2595" target="_blank" rel="noopener">https://www.ecloudrover.com/h-nd-173.html#_np=21_2595</a></td></tr><tr><td>174</td><td>伊克罗德为数据库 TiDB 性能提升“加冕” - 伊克罗德信息科技</td><td><a href="https://www.ecloudrover.com/h-nd-174.html#_np=21_2595" target="_blank" rel="noopener">https://www.ecloudrover.com/h-nd-174.html#_np=21_2595</a></td></tr><tr><td>175</td><td>数字化时代｜如何保证流畅稳定的网络环境你知道吗？ - 伊克罗德信息科技</td><td><a href="https://www.ecloudrover.com/h-nd-175.html#_np=21_2595" target="_blank" rel="noopener">https://www.ecloudrover.com/h-nd-175.html#_np=21_2595</a></td></tr><tr><td>176</td><td>与数家企业强强联合，伊克罗德初步构建云服务合作伙伴生态圈 - 伊克罗德信息科技</td><td><a href="https://www.ecloudrover.com/h-nd-176.html#_np=21_2595" target="_blank" rel="noopener">https://www.ecloudrover.com/h-nd-176.html#_np=21_2595</a></td></tr><tr><td>177</td><td>SSO Keycloak安装&amp;配置SAML登录AWS Console - 伊克罗德信息科技</td><td><a href="https://www.ecloudrover.com/h-nd-177.html#_np=21_2595" target="_blank" rel="noopener">https://www.ecloudrover.com/h-nd-177.html#_np=21_2595</a></td></tr><tr><td>178</td><td>一键上云穿越，回到“你我当年”！ - 伊克罗德信息科技</td><td><a href="https://www.ecloudrover.com/h-nd-178.html#_np=21_2595" target="_blank" rel="noopener">https://www.ecloudrover.com/h-nd-178.html#_np=21_2595</a></td></tr><tr><td>179</td><td>利用多可用区实现RDS存储类型无缝切换 - 伊克罗德信息科技</td><td><a href="https://www.ecloudrover.com/h-nd-179.html#_np=21_2595" target="_blank" rel="noopener">https://www.ecloudrover.com/h-nd-179.html#_np=21_2595</a></td></tr><tr><td>180</td><td>为EC2安装CloudWatch Agent自定义监控指标 - 伊克罗德信息科技</td><td><a href="https://www.ecloudrover.com/h-nd-180.html#_np=21_2595" target="_blank" rel="noopener">https://www.ecloudrover.com/h-nd-180.html#_np=21_2595</a></td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      
      
        
        
          &lt;h1 id=&quot;伊克罗德信息科技&quot;&gt;&lt;a
        
      
    
    </summary>
    
    
      <category term="迁移" scheme="https://blog.wjzhe.ml/categories/%E8%BF%81%E7%A7%BB/"/>
    
    
      <category term="AWS" scheme="https://blog.wjzhe.ml/tags/AWS/"/>
    
      <category term="转载" scheme="https://blog.wjzhe.ml/tags/%E8%BD%AC%E8%BD%BD/"/>
    
  </entry>
  
</feed>
