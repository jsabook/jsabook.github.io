<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Qier&#39;s blog</title>
  <icon>http://yoursite.com/icon.png</icon>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2021-11-24T14:37:54.284Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>qier</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>UsingJemdocToGenfile</title>
    <link href="http://yoursite.com/2021/11/24/UsingJemdocToGenfile/"/>
    <id>http://yoursite.com/2021/11/24/UsingJemdocToGenfile/</id>
    <published>2021-11-24T14:37:54.284Z</published>
    <updated>2021-11-24T14:37:54.284Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>jemdoc是什么？</p><p>jemdoc是一种用于创建网站的基于文本的轻量标记语言。它需要一个用jemdoc标记编写的文本文件，一个可选的配置文件和一个可选的菜单文件。（类似markdown）jemdoc的灵感来自于AsciiDoc，这是一个文本文件格式。AsciiDoc很棒，AsciiDoc的许多想法都复制到了jemdoc中。主要区别在于jemdoc更简单（您可以说故意功能较差）并且语法更加一致。同事jemdoc的网页严峻简洁风格也表明其非常适合充当学术简历。</p></blockquote><h1 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h1><p><strong>jemdoc</strong>使用的是<strong>python2</strong>环境，而不能是<strong>python3</strong>.如果没有安装<strong>python2</strong> 可以使用虚拟环境安装<strong>python2</strong>.如果电脑中安装了<strong>python3</strong>，那么可以用虚拟环境来安装<strong>python2</strong>.</p><h2 id="前置准备"><a href="#前置准备" class="headerlink" title="前置准备"></a>前置准备</h2><p><strong>安装virtualenv</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install virtualenv</span><br></pre></td></tr></table></figure><h2 id="创建虚拟环境"><a href="#创建虚拟环境" class="headerlink" title="创建虚拟环境"></a>创建虚拟环境</h2><p><strong>创建文件夹</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir website &amp;&amp; cd website</span><br></pre></td></tr></table></figure><p><strong>创建虚拟环境</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">virtualenv venv --python&#x3D;python2.5</span><br></pre></td></tr></table></figure><h2 id="激活虚拟环境"><a href="#激活虚拟环境" class="headerlink" title="激活虚拟环境"></a>激活虚拟环境</h2><p><strong>windows 环境</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">venv\Scripts\activate</span><br></pre></td></tr></table></figure><p><strong>Linux/macOS</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">. venv&#x2F;bin&#x2F;activate</span><br></pre></td></tr></table></figure><p><strong>激活结果</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(venv) \&gt;</span><br></pre></td></tr></table></figure><p>前面就有<strong>(venv)</strong> 这个了。</p><h1 id="QuickStart"><a href="#QuickStart" class="headerlink" title="QuickStart"></a>QuickStart</h1><p><strong>环境准备</strong></p><p>去<a href="http://jemdoc.jaboc.net/download.html" target="_blank" rel="noopener">jemdoc官网</a>下载jemdoc.py。对的，你没看错，就只要一个.py代码文件就行了。不过建议顺带下载使用官方的<a href="http://jemdoc.jaboc.net/dist/jemdoc.css" target="_blank" rel="noopener">示例CSS文件:jemdoc.css</a>。</p><p>下载完毕之后，如下图所示：</p><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20211120022626280.png" alt="image-20211120022626280"></p><p>新建example.jemdoc文件,(建议和jemdoc.py同级目录，比较好写命令)在example.jemdoc文件中可以尝试复制下官方的example的内容:</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">[https://jemnz.com/ Jacob Mattingley] ([www@jemnz.com])</span><br><span class="line"></span><br><span class="line">If the first line of the file starts with +\# jemdoc+, special functions like [menu.html menus] will be used.</span><br><span class="line"></span><br><span class="line">== Example</span><br><span class="line">Here are some <span class="emphasis">*text*</span> /features/. I could [http://cvxmod.net/ link somewhere] or insert a raw link to another page like [download.html]. I could use +monospace+, too.</span><br><span class="line"></span><br><span class="line">I could write special characters like \#, \$ and \+ by just using a backslash (\\) in front of those characters. Or automatically detect an [www@jemnz.com email address].</span><br><span class="line"></span><br><span class="line">~~~</span><br><span class="line">Save the file as +index.jemdoc+, say, and simply call +jemdoc index+ (after [download.html downloading jemdoc], of course).</span><br><span class="line">~~~</span><br><span class="line"></span><br><span class="line">== Next bit, next heading level two</span><br><span class="line">=== Getting into level three now</span><br><span class="line"></span><br><span class="line">Why not use a list</span><br><span class="line"><span class="bullet">- </span>to explain the way you do lists?</span><br><span class="line"><span class="bullet">- </span>to demonstrate how a line\n break might work?</span><br><span class="line"></span><br><span class="line">Or perhaps a</span><br><span class="line">. Multilevel</span><br><span class="line">  .. Numbered list</span><br><span class="line">  .. Is more</span><br><span class="line">. Useful?</span><br><span class="line"></span><br><span class="line">: &#123;Definition&#125; lists, especially when there are many definitions</span><br><span class="line">: &#123;Can be useful&#125; for explaining things</span><br><span class="line"></span><br><span class="line">== Finally, a few more blocks</span><br><span class="line">This `section' features "smart quotes".</span><br><span class="line"></span><br><span class="line">~~~</span><br><span class="line">&#123;Simple block&#125;</span><br><span class="line">This is a simple text block, with a title. Notice how the previous line has only one set of braces (\&#123;\&#125;).</span><br><span class="line">~~~</span><br><span class="line"></span><br><span class="line">~~~</span><br><span class="line">&#123;Interactive Python listing&#125;&#123;pyint&#125;</span><br><span class="line">&gt;&gt;&gt; print 'Interactive Python code.'</span><br><span class="line">'Interactive Python code.'</span><br><span class="line">~~~</span><br><span class="line"></span><br><span class="line">~~~</span><br><span class="line">&#123;&#125;&#123;&#125;</span><br><span class="line">Plain code block with no title.</span><br><span class="line">~~~</span><br><span class="line"></span><br><span class="line">You might need 2--3 different-sized dashes---they can be useful. Now we're done!</span><br></pre></td></tr></table></figure><p><strong>生成网页</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python jemdoc.py example.jemdoc</span><br></pre></td></tr></table></figure><p>然后就会在目录下生成index.html文件，打开页面如下：</p><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20211120023012306.png" alt="image-20211120023012306"></p><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20211120023055071.png" alt="image-20211120023055071"></p><h1 id="Jemdoc语法"><a href="#Jemdoc语法" class="headerlink" title="Jemdoc语法"></a>Jemdoc语法</h1><p>可以结合官方文档和本篇教程一起学习，官方文档：<a href="http://jemdoc.jaboc.net/cheatsheet.html" target="_blank" rel="noopener">http://jemdoc.jaboc.net/cheatsheet.html</a></p><p>新建cheatsheet.jemdoc，在里面使用教程上的语法</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;斜字体&#x2F;</span><br><span class="line"></span><br><span class="line">*加粗*</span><br><span class="line"></span><br><span class="line">+等宽（li和cs等宽）+</span><br><span class="line"></span><br><span class="line">+等宽（cs和li等宽）+</span><br><span class="line"></span><br><span class="line">不等宽（li占的比cs小哦）</span><br><span class="line"></span><br><span class="line">不等宽（cs占的比li大哦）</span><br><span class="line"></span><br><span class="line">连字符-连字符</span><br><span class="line"></span><br><span class="line">破折号1--破折号1</span><br><span class="line"></span><br><span class="line">破折号2---破折号2</span><br><span class="line"></span><br><span class="line">省略号...省略号</span><br><span class="line"></span><br><span class="line">不间断空格~不间断空格(最重要的作用就是换行时不被打断)</span><br><span class="line"></span><br><span class="line"># 注释？？</span><br><span class="line"></span><br><span class="line">\C is ©</span><br><span class="line"></span><br><span class="line">\R is ®</span><br><span class="line"></span><br><span class="line">\M is · </span><br><span class="line"></span><br><span class="line">“单引号文字”写为“单引号文字”</span><br><span class="line"></span><br><span class="line">“双引号文字”写为“双引号文字”</span><br><span class="line"></span><br><span class="line">jemdoc&#39;s的撇号jemdoc&#39;s的输入自动转换</span><br><span class="line"></span><br><span class="line">\n 强制手动换行</span><br><span class="line"></span><br><span class="line">段落由空白行分隔（即空一行才可以另起一段）下面这句话</span><br><span class="line">（我是第二行了的）是会在同一行&#x2F;段的哦</span><br><span class="line"></span><br><span class="line">LaTeX方程(暂不能用哦)</span><br><span class="line"></span><br><span class="line">#s (and only #s) must be quoted in URLs</span><br><span class="line"></span><br><span class="line">&#x3D; 标题一</span><br><span class="line">&#x3D;&#x3D; 标题二</span><br><span class="line">&#x3D;&#x3D;&#x3D; 标题三</span><br><span class="line">&#x3D;&#x3D;&#x3D;&#x3D; 标题四</span><br><span class="line"></span><br><span class="line">[https:&#x2F;&#x2F;www.hojun.cn&#x2F; 这是超链接写法] </span><br><span class="line"></span><br><span class="line">邮箱哦：([hojun@qq.com])</span><br><span class="line"></span><br><span class="line">这个会跳转到当前目录的[other.html]，和超链接类似。</span><br><span class="line"></span><br><span class="line">这是无序列表:</span><br><span class="line"></span><br><span class="line">- 无序列表</span><br><span class="line">  -- 二级无序列表</span><br><span class="line">      --- 三级无序列表</span><br><span class="line">- 无序列表</span><br><span class="line"></span><br><span class="line">这是有序列表:</span><br><span class="line"></span><br><span class="line">. level1</span><br><span class="line">  .. level2</span><br><span class="line">    ... level3</span><br><span class="line">. level1</span><br><span class="line"></span><br><span class="line">:&#123;定义解释块&#125;balabala,这里解释，比如下面例子</span><br><span class="line"></span><br><span class="line">:&#123;233&#125;233是一个网络用语，大致意思就是啊哈哈，非常好笑的意思。233来源于猫扑表情第233号，是一张捶地大笑的表情，因此不少网友就喜爱在贴吧和论坛发帖的时候加上一句233，用来表示哈哈大笑的意思。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">~~~</span><br><span class="line">&#123;简单块，这里是标题&#125;</span><br><span class="line">This is a simple text block, with a title. Notice how the previous line has only one set of braces (\&#123;\&#125;).</span><br><span class="line">~~~</span><br><span class="line"></span><br><span class="line">~~~</span><br><span class="line">&#123;这个是代码块标题，后面那个是代码高亮，好像仅支持py&#125;&#123;python&#125;</span><br><span class="line">def putbsbs(l):</span><br><span class="line">  for i in range(len(l)):</span><br><span class="line">    l[i] &#x3D; &#39;\\b&#39; + l[i] + &#39;\\b&#39;</span><br><span class="line"></span><br><span class="line">  return l</span><br><span class="line">~~~</span><br><span class="line"></span><br><span class="line">~~~</span><br><span class="line">&#123;&#125;&#123;&#125;</span><br><span class="line">啥都不写就是不要标题~</span><br><span class="line">~~~</span><br><span class="line"></span><br><span class="line">&#123;&#123;&lt;h2&gt;&#125;&#125;这是用inline html escaping包裹的h2，语法结束记的要换行，不然有bug&#123;&#123;&lt;&#x2F;h2&gt;&#125;&#125;</span><br><span class="line"></span><br><span class="line">~~~</span><br><span class="line">&#123;&#125;&#123;raw&#125;</span><br><span class="line">要写html代码记的用raw，而不是楼上的：</span><br><span class="line">&lt;form&gt;</span><br><span class="line">First name: &lt;input type&#x3D;&quot;text&quot; name&#x3D;&quot;firstname&quot;&gt;&lt;br&gt;</span><br><span class="line">Last name: &lt;input type&#x3D;&quot;text&quot; name&#x3D;&quot;lastname&quot;&gt;</span><br><span class="line">&lt;&#x2F;form&gt;</span><br><span class="line">~~~</span><br><span class="line"></span><br><span class="line">#include&#123;include.jemdoc&#125;</span><br><span class="line"></span><br><span class="line">#includeraw&#123;include.html&#125;</span><br><span class="line"></span><br><span class="line">~~~</span><br><span class="line">&#123;&#125;&#123;img_left&#125;&#123;https:&#x2F;&#x2F;jemnz.com&#x2F;jacobm2.png&#125;&#123;Jacob Mattingley&#125;&#123;120px&#125;&#123;160px&#125;&#123;https:&#x2F;&#x2F;www.baidu.com&#125;</span><br><span class="line">加图片</span><br><span class="line">&#123;&#125;&#123;img_left&#125;&#123;图片url&#125;&#123;描述图像&#125;&#123;宽&#125;&#123;高&#125;&#123;点击图片跳转的链接&#125;</span><br><span class="line"> (后面三个参数可以省略)</span><br><span class="line">&#123;&#125;&#123;img_left&#125;&#123;图片url&#125;&#123;描述图像&#125;</span><br><span class="line">~~~</span><br></pre></td></tr></table></figure><h1 id="高级用法"><a href="#高级用法" class="headerlink" title="高级用法"></a>高级用法</h1><h2 id="添加菜单"><a href="#添加菜单" class="headerlink" title="添加菜单"></a>添加菜单</h2><p>jemdoc只适用于做页面？NONONO，jemdoc的官网就是运用添加菜单功能实现的。<br>首先，你在新建一个菜单文件MENU，内容如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">jemdoc学习</span><br><span class="line">    home                [index.html]</span><br><span class="line">    cheatsheet          [cheatsheet.html]</span><br><span class="line">    example             [example.html]</span><br><span class="line"></span><br><span class="line">jemdoc学习二</span><br><span class="line">    testgbk             [testgbk.html]</span><br><span class="line">    include             [include.html]</span><br></pre></td></tr></table></figure><p>然后分别在index.jemdoc、cheatsheet.jemdoc等以上MENU包含的jemdoc中首行加入：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;index.jemdoc 加这个</span><br><span class="line"># jemdoc: menu&#123;MENU&#125;&#123;index.html&#125;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;cheatsheet.jemdoc 加这个</span><br><span class="line"># jemdoc: menu&#123;MENU&#125;&#123;cheatsheet.html&#125;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;其他雷同</span><br><span class="line">......</span><br></pre></td></tr></table></figure><p>在全部重新生成一遍</p><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20211120023609340.png" alt="image-20211120023609340"></p><h2 id="modeline-模式行设置"><a href="#modeline-模式行设置" class="headerlink" title="modeline 模式行设置"></a>modeline 模式行设置</h2><p>jemdoc的modeline要在首行（或头部配置），如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># jemdoc: menu&#123;MENU&#125;&#123;cheatsheet.html&#125;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 或</span><br><span class="line"></span><br><span class="line"># jemdoc: addcss&#123;jemdoc.css&#125;</span><br><span class="line"># jemdoc: addjs&#123;jemdoc.js&#125;</span><br></pre></td></tr></table></figure><h3 id="addcss-amp-js"><a href="#addcss-amp-js" class="headerlink" title="addcss&amp;js"></a>addcss&amp;js</h3><p>上图前面的就是上一步说的添加menu，而后面的则是引入css和js。<br>试这在录下新建个js文件夹，在下面新建jemdoc.js，内容如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">console.log(&quot;this is .&#x2F;js&#x2F;jemdoc.js&quot;)</span><br></pre></td></tr></table></figure><p>然后新建modeline.jemdoc中引入，注意这里有个坑，我们试着在头部引入：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># jemdoc: addcss&#123;jemdo&#125;</span><br><span class="line"># jemdoc: addcss&#123;jemdo.css&#125;</span><br><span class="line"># jemdoc: addjs&#123;.&#x2F;js&#x2F;jemdoc&#125;</span><br><span class="line"># jemdoc: addjs&#123;.&#x2F;js&#x2F;jemdoc.js&#125;</span><br></pre></td></tr></table></figure><p>生成的代码如下：(解释就写在备注那里)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F; 这个是jemdoc默认会生成的，自动引入jemdoc.css</span><br><span class="line">&lt;link rel&#x3D;&quot;stylesheet&quot; href&#x3D;&quot;jemdoc.css&quot; type&#x3D;&quot;text&#x2F;css&quot; &#x2F;&gt;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 这个是addcss&#123;jemdo&#125;生成的，可以看到jemdoc自动给加了.css后缀</span><br><span class="line">&lt;link rel&#x3D;&quot;stylesheet&quot; href&#x3D;&quot;jemdo.css&quot; type&#x3D;&quot;text&#x2F;css&quot; &#x2F;&gt;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 这个是addcss&#123;jemdo.css&#125;生成的，可以看到jemdoc没给加后缀</span><br><span class="line">&lt;link rel&#x3D;&quot;stylesheet&quot; href&#x3D;&quot;jemdo.css&quot; type&#x3D;&quot;text&#x2F;css&quot; &#x2F;&gt;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 这个是addjs&#123;.&#x2F;js&#x2F;jemdoc&#125;生成的，可以看到jemdoc自动给加了.js后缀</span><br><span class="line">&lt;script src&#x3D;&quot;.&#x2F;js&#x2F;jemdoc.js&quot; type&#x3D;&quot;text&#x2F;javascript&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 这个是addjs&#123;.&#x2F;js&#x2F;jemdoc.js&#125;生成的，可以看到jemdoc多加了个.js后缀，导至找不到js.</span><br><span class="line">&lt;script src&#x3D;&quot;.&#x2F;js&#x2F;jemdoc.js.js&quot; type&#x3D;&quot;text&#x2F;javascript&quot;&gt;&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure><p>综上所述，在使用addcss和addjs模式行的时候都不要加后缀，jemdoc会自动生成。</p><h3 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F; 自定义页面titile</span><br><span class="line"># jemdoc: title&#123;自定义titile&#125;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 清除jemdoc自动包含的jemdoc.css</span><br><span class="line"># jemdoc: nodefaultcss</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 添加Google Analytics（分析）支持</span><br><span class="line">analytics &#123;ANALYTICS KEY&#125;</span><br></pre></td></tr></table></figure><h3 id="底部footer配置"><a href="#底部footer配置" class="headerlink" title="底部footer配置"></a>底部footer配置</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F; 不要生成时间</span><br><span class="line"># jemdoc: notime</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 不要生成日期</span><br><span class="line"># jemdoc: nodate</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 不要生成时指向jemdoc的超链接</span><br><span class="line"># jemdoc: showsource</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 不要生成footer</span><br><span class="line"># jemdoc: nofooter</span><br></pre></td></tr></table></figure><p>在jemdoc中首行加入：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># jemdoc: nofooter</span><br></pre></td></tr></table></figure><h3 id="方程式"><a href="#方程式" class="headerlink" title="方程式"></a>方程式</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F; 禁用LaTeX方程式支持。</span><br><span class="line"># jemdoc: noeqs</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 调整方程式的大小（默认值为130）</span><br><span class="line"># jemdoc: eqsize &#123;SIZE&#125;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 调整方程式目录（默认eqs）。</span><br><span class="line"># jemdoc: noeqs</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 禁用方程式缓存。</span><br><span class="line"># jemdoc: noeqs</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 在编译方程式时包括对LATEX_PACKAGE_NAME的支持</span><br><span class="line"># jemdoc: addpackage &#123;LATEX_PACKAGE_NAME&#125;</span><br></pre></td></tr></table></figure><h2 id="html成生模版更改"><a href="#html成生模版更改" class="headerlink" title="html成生模版更改"></a>html成生模版更改</h2><p>可以修改jemdoc的生成规则，在cmd中输入。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python jemdoc.py --show-config</span><br></pre></td></tr></table></figure><p>或者在jemdoc.py文件的133-207行可以看到对应的html配置。<br>首先，找出需要使用来更改哪个块，这里拿[footerend]举例。创建一个新文件myfooterend.conf，一开始内容为原来模版的：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[footerend]</span><br><span class="line">&lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br></pre></td></tr></table></figure><p>然后我们总要搞点小动作：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[footerend]</span><br><span class="line">&lt;p style&#x3D;&quot;color: red;&quot;&gt;这是我改的footerend，就是为了说这句话2333~&lt;&#x2F;p&gt;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br></pre></td></tr></table></figure><p>然后新建个myfooter.jemdoc，在用以下命令生成它：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python2 jemdoc.py -c myfooterend.conf myfooter.jemdoc</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20211120024351543.png" alt="image-20211120024351543"></p><h1 id="使用clustrmaps"><a href="#使用clustrmaps" class="headerlink" title="使用clustrmaps"></a>使用clustrmaps</h1><p>该网站提供访问统计功能，独特之处是<strong>以全球地图的形式标明访问者全球分布情况</strong>。该站点承诺无 cookie、无间谍软件。网址提供了生成访问者地址分布图的代码，可以嵌入到网站或博客中，来显示来自世界各地访问者的实时地图，有助于发展您隐藏的兴趣社区。最重要的是，这个功能是<strong>免费</strong>的，能够满足个人网站的需求，如下图所示。可以用该网站来记录个人简历中的一些信息：</p><ul><li>每天的访问量；</li><li>每一个访问的人的IP相关信息都会记录下来，我们就可以查看；</li><li>。。。</li></ul><p>网站地址：<a href="clustrmaps.com">clustrmaps.com</a></p><h2 id="配置-clustrmaps"><a href="#配置-clustrmaps" class="headerlink" title="配置 clustrmaps"></a>配置 clustrmaps</h2><p>网站注册后，访问 <a href="https://clustrmaps.com/add" target="_blank" rel="noopener">Enter your website address</a> 添加自己的网站地址，选择免费的服务。将上面的github pages站点地址放置于内</p><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20211120024918799.png" alt="image-20211120024918799"></p><p>选择自己喜欢的插件格式，现在 Hexo 的 Next 两种主题都是支持的，但是自己比较喜欢 Map widget 的主题。</p><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20211120025013604.png" alt="image-20211120025013604"></p><p>点击选择后，拷贝网站出现的脚本 <a href="https://cloud.tencent.com/product/sms?from=10680" target="_blank" rel="noopener">javascript</a>代码，粘贴到特定位置</p><h1 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h1>]]></content>
    
    <summary type="html">
    
      
      
        
        
          &lt;blockquote&gt;
&lt;p&gt;jemdoc是什么？&lt;/p&gt;
&lt;
        
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>Hexo 静态博客增加密码</title>
    <link href="http://yoursite.com/2021/11/23/AddArticlePassword/"/>
    <id>http://yoursite.com/2021/11/23/AddArticlePassword/</id>
    <published>2021-11-23T16:00:00.000Z</published>
    <updated>2021-11-23T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>在《使用Github_action实现本地无需安装hexo》这篇博客中，讲述了如何利用Action做博客部署自动化。这里来讲述如何利用Action来进行博客的加密。一般情况下，如果想要对hexo博客进行加密需要以下步骤：</p><ul><li>电脑安装加密插件；</li><li>博客编写，设置密码</li><li>对博客进行重新渲染；</li><li>对博客进行部署</li></ul><p>整个过程如这篇文章所示：<a href="https://zhuanlan.zhihu.com/p/113235573" target="_blank" rel="noopener">https://zhuanlan.zhihu.com/p/113235573</a></p><p>利用github action进行操作，只需要进行2步骤</p><ul><li>对<strong>package.json</strong>文件进行修改</li><li>博客编写，设置密码</li><li>push博客</li></ul><p>下面进行操作</p><p><strong>对package.json文件进行修改</strong></p><p>增加<strong>“hexo-blog-encrypt”: “^3.1.6”</strong></p><p><img src="C:/Users/ECCOM/AppData/Roaming/Typora/typora-user-images/image-20211124223109377.png" alt="image-20211124223109377"></p><p><strong>博客编写，设置密码</strong></p><p>修改文章信息头如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">title: Hello World</span><br><span class="line">password: muyiio</span><br></pre></td></tr></table></figure><p><strong>push博客</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git add .</span><br><span class="line">git commit -m &quot;fix&quot;</span><br><span class="line">git push</span><br></pre></td></tr></table></figure><p><strong>参考文章</strong></p><p><a href="https://zhuanlan.zhihu.com/p/113235573" target="_blank" rel="noopener">https://zhuanlan.zhihu.com/p/113235573</a></p><p><strong>项目地址</strong></p><p><a href="https://github.com/D0n9X1n/hexo-blog-encrypt" target="_blank" rel="noopener">https://github.com/D0n9X1n/hexo-blog-encrypt</a></p>]]></content>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;在《使用Github_action实现本地无需安装hexo
        
      
    
    </summary>
    
    
      <category term="Hexo" scheme="http://yoursite.com/categories/Hexo/"/>
    
    
      <category term="博客" scheme="http://yoursite.com/tags/%E5%8D%9A%E5%AE%A2/"/>
    
      <category term="安全" scheme="http://yoursite.com/tags/%E5%AE%89%E5%85%A8/"/>
    
  </entry>
  
  <entry>
    <title>AWS常用VPN技术介绍与实践</title>
    <link href="http://yoursite.com/2021/11/14/VirtualPrivateNetworkINAWS/"/>
    <id>http://yoursite.com/2021/11/14/VirtualPrivateNetworkINAWS/</id>
    <published>2021-11-14T16:00:00.000Z</published>
    <updated>2021-11-14T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>在AWS中提供了几种方式的VPN技术，分别是：</p><ul><li>软件层面的VPN技术；</li><li>硬件层面的VPN技术；</li><li>专线层面的VPN技术；</li></ul><p>下面</p>]]></content>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;在AWS中提供了几种方式的VPN技术，分别是：&lt;/p&gt;
&lt;
        
      
    
    </summary>
    
    
      <category term="VPN" scheme="http://yoursite.com/categories/VPN/"/>
    
    
      <category term="AWS" scheme="http://yoursite.com/tags/AWS/"/>
    
      <category term="VPN" scheme="http://yoursite.com/tags/VPN/"/>
    
  </entry>
  
  <entry>
    <title>AWS账单提醒梳理</title>
    <link href="http://yoursite.com/2021/11/12/AWSBillingSupport/"/>
    <id>http://yoursite.com/2021/11/12/AWSBillingSupport/</id>
    <published>2021-11-12T16:00:00.000Z</published>
    <updated>2021-11-12T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="AWS-Cost-Anomaly-Detection"><a href="#AWS-Cost-Anomaly-Detection" class="headerlink" title="AWS Cost Anomaly Detection"></a>AWS Cost Anomaly Detection</h1><p>官方提供了一个很简单的异常支出检测机制—— <strong>AWS Cost Anomaly Detection</strong></p><p>可以实现以下两个功能：</p><ul><li>成本监控，如果成本超出的设定的阈值。即当前成本-原始成本&gt;阈值，例如阈值为10美元，昨天原始成本为5美元，今天增加到了25美元。则25-5&gt;10，因此则会被监控到。监控到之后就会发送信息到提醒订阅。</li><li>检测历史记录值，会根据成本监控对历史重大事件进行记录。默认情况下，您可以查看过去 90 天内检测到的异常。您可以按 <strong>Severity（严重性）</strong>、<strong>Assessment（评估）</strong>、<strong>Service（服务）</strong>、<strong>Account ID（账户 ID）</strong>、<strong>Usage type（使用类型）</strong>、<strong>Region（区域）</strong>或 <strong>Monitor type（监控类型）</strong>进行搜索。</li></ul><h2 id="创建监控"><a href="#创建监控" class="headerlink" title="创建监控"></a>创建监控</h2><p>这里选择AWS服务，会单独检测AWS的每一项服务</p>  <img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20211113190815989.png" alt="image-20211113190815989" style="zoom:67%;"  /><h2 id="设置提醒订阅"><a href="#设置提醒订阅" class="headerlink" title="设置提醒订阅"></a>设置提醒订阅</h2><p>提醒订阅中设置阈值。</p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20211113191050963.png" alt="image-20211113191050963" style="zoom:67%;" /><h1 id="自定义异常检测服务"><a href="#自定义异常检测服务" class="headerlink" title="自定义异常检测服务"></a>自定义异常检测服务</h1>]]></content>
    
    <summary type="html">
    
      
      
        
        
          &lt;h1
        
      
    
    </summary>
    
    
      <category term="AWS" scheme="http://yoursite.com/categories/AWS/"/>
    
    
      <category term="AWS" scheme="http://yoursite.com/tags/AWS/"/>
    
      <category term="云计算" scheme="http://yoursite.com/tags/%E4%BA%91%E8%AE%A1%E7%AE%97/"/>
    
      <category term="Billing" scheme="http://yoursite.com/tags/Billing/"/>
    
  </entry>
  
  <entry>
    <title>修理CI导致的hexo博客生成时间错误</title>
    <link href="http://yoursite.com/2021/11/12/FixTheHexoGenrateTime/"/>
    <id>http://yoursite.com/2021/11/12/FixTheHexoGenrateTime/</id>
    <published>2021-11-12T16:00:00.000Z</published>
    <updated>2021-11-12T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong>设置title</strong></p><p>只要在每篇文章的前面加入如下<strong>date</strong>内容即可</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">title: article title</span><br><span class="line">date: 2021-11-13</span><br><span class="line">updated: 2021-11-13</span><br><span class="line">slug:</span><br><span class="line">categories: SA</span><br><span class="line">tag:</span><br><span class="line">  - 架构</span><br><span class="line">copyright: true</span><br><span class="line">comment: true</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;&lt;strong&gt;设置title&lt;/strong&gt;&lt;/p&gt;

        
      
    
    </summary>
    
    
      <category term="博客架构" scheme="http://yoursite.com/categories/%E5%8D%9A%E5%AE%A2%E6%9E%B6%E6%9E%84/"/>
    
    
      <category term="博客" scheme="http://yoursite.com/tags/%E5%8D%9A%E5%AE%A2/"/>
    
      <category term="架构" scheme="http://yoursite.com/tags/%E6%9E%B6%E6%9E%84/"/>
    
  </entry>
  
  <entry>
    <title>iptables相关操作</title>
    <link href="http://yoursite.com/2021/11/11/iptablesOpration/"/>
    <id>http://yoursite.com/2021/11/11/iptablesOpration/</id>
    <published>2021-11-11T16:00:00.000Z</published>
    <updated>2021-11-12T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>iptables 是 Linux 防火墙工作在用户空间的管理工具，是 <code>netfilter/iptables</code>IP 信息包过滤系统是一部分，用来设置、维护和检查 Linux 内核的 IP 数据包过滤规则。</p></blockquote><p>iptables由两部分组成，一部分是ip另外一部分就是tables。因此iptables就是通过表的形式对ip进行各种操作。</p><p>iptables的重点是<strong>五链四表</strong>。</p><p><strong>四表五链</strong>：<br>链就是位置：共有五个 进路由(    PREROUTING)、进系统(INPUT) 、转发(FORWARD)、出系统(OUTPUT)、出路由(POSTROUTING)；<br>表就是存储的规则；数据包到了该链处，会去对应表中查询设置的规则，然后决定是否放行、丢弃、转发还是修改等等操作。</p><p><strong>四表</strong></p><ul><li><p>raw表，待学习</p></li><li><p>mangle表，操作系统级别的表，主要应用在修改数据包、流量整形、给数据包打标识，默认的规则链有：<code>INPUT</code>，<code>OUTPUT</code>、 <code>forward</code>，<code>POSTROUTING</code>，<code>PREROUTING</code></p></li><li><p>filter表，过滤表，对进入的不符合条件的流量过滤。对不符合规则输出流量也进行过滤；</p></li><li><p>nat表，对目的地址、目的端口、源地址源端口进行修改；</p></li></ul><p><strong>五链</strong></p><ul><li>INPUT</li><li>OUTPUT</li><li>FPRWARD</li><li>POSTROUTING</li><li>PREROUTING</li></ul><h1 id="五链"><a href="#五链" class="headerlink" title="五链"></a>五链</h1><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/iptables-Page-1-2drawio.svg" alt="iptables-Page-1-2drawio"></p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/iptables-%E4%BA%94%E8%A1%A8%E5%9B%9B%E9%93%BEdrawio.svg" alt="iptables-五表四链drawio" style="zoom:80%;" /><ol><li>当一个数据包进入网卡时，它首先进入 <code>PREROUTING</code> 链，内核根据数据包目的 IP 判断是否需要转送出去。</li><li>如果数据包就是进入本机的，它就会沿着图向下移动，到达 <code>INPUT</code> 链。数据包到了 INPUT 链后，任何进程都会收到它。</li><li>本机上运行的程序可以发送数据包，这些数据包会经过 <code>OUTPUT</code> 链，然后到达<code>POSTROUTING</code> 链输出。</li><li>如果数据包是要转发出去的，且内核允许转发，数据包就会如图所示向右移动，经过 <code>FORWARD</code> 链，然后到达 <code>POSTROUTING</code> 链输出。</li></ol><p><strong>小结</strong></p><p>整体数据包分两类：1、发给防火墙本身的数据包 ；2、需要经过防火墙的数据包.</p><p>数据包的流程：数据包进入到链中之后，会根据此时的状态去对应的表中查询对应的规则。</p><p><strong>匹配流程示意图</strong></p><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/iptables-%E7%A4%BA%E6%84%8F%E5%9B%BEdrawio.svg" alt="iptables-示意图drawio"></p><p>因此，在这五条链中。不同链承担的角色是不一样的。</p><p><strong>PREROUTING</strong>：承担SNAT的作用；</p><p><strong>POSTROUTING</strong>：承担DNAT的作用；</p><p><strong>FPRWARD</strong>:承担转发的作用，如果需要对转发流量进行限制则可以在这里进行限制；</p><p><strong>INPUT</strong>：承担流量输入的作用，如果想要主机不收到某些流量，则可以在这里进行限制；</p><p><strong>OUTPUT</strong>：承担流量输出的作用，如果想要主机不发出去某些流量，则可以在这里进行限制。</p><p><strong>iptables语法</strong></p><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/iptables-Optiondrawio.svg" alt="iptables-Optiondrawio"></p><p>这张图描述了iptables的相关语法命令。</p><h1 id="四表"><a href="#四表" class="headerlink" title="四表"></a>四表</h1><h2 id="filter表"><a href="#filter表" class="headerlink" title="filter表"></a>filter表</h2><p><strong>查看规则</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">iptables -t filter -L -n</span><br></pre></td></tr></table></figure><p>可以看到结果</p><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20211112214242489.png" alt="image-20211112214242489"></p><p><strong>添加规则</strong></p><p>追加规则，将所有进入流量的80端口的流量丢弃掉。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">iptables -t filter -A INPUT -j DROP -p tcp --dport 80</span><br></pre></td></tr></table></figure><p>追加规则，将出口到某个<strong>192.168.0.144</strong>的流量全部丢弃</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">iptables -t filter -A OUTPUT -j DROP -p tcp -d 192.168.0.144</span><br></pre></td></tr></table></figure><p>查看iptables表</p><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20211112215324542.png" alt="image-20211112215324542"></p><p><strong>删除规则</strong></p><p>将设置的第一条规则删除掉。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">iptables -t filter -D INPUT 1</span><br></pre></td></tr></table></figure><h2 id="nat表"><a href="#nat表" class="headerlink" title="nat表"></a>nat表</h2><p>查看nat 表</p><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20211112215806952.png" alt="image-20211112215806952"></p><h1 id="查询规则"><a href="#查询规则" class="headerlink" title="查询规则"></a>查询规则</h1><p>如图所示</p><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/iptables-%E6%9F%A5%E8%AF%A2%E8%A7%84%E5%88%992drawio.svg" alt="iptables-查询规则2drawio"></p><p><strong>查询规则</strong></p><p>-L 列出规则，在L之前还可以添加其他参数，如下所示：</p><ul><li>v：显示详细信息，包括每条规则匹配的包数和匹配字节号；</li><li>x：在v的基础上，禁止自动单位换算(K、M)</li><li>n：只显示IP地址与端口号码，不显示服务名称</li></ul><p>用详细方法列出filter表的的所有规则，只显示IP地址与端口号：</p><p><strong>第一种</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">root@wjshuai:~<span class="comment"># iptables -t filter -vnL INPUT</span></span><br><span class="line">Chain INPUT (policy ACCEPT 0 packets, 0 bytes)</span><br><span class="line"> pkts bytes target     prot opt <span class="keyword">in</span>     out     <span class="built_in">source</span>               destination         </span><br><span class="line">   35  2100 DROP       tcp  --  *      *       0.0.0.0/0            0.0.0.0/0            tcp dpt:80</span><br><span class="line"><span class="comment"># Warning: iptables-legacy tables present, use iptables-legacy to see them</span></span><br></pre></td></tr></table></figure><p><strong>第二种</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">root@wjshuai:~<span class="comment"># iptables -t filter -v -n -L  INPUT</span></span><br><span class="line">Chain INPUT (policy ACCEPT 0 packets, 0 bytes)</span><br><span class="line"> pkts bytes target     prot opt <span class="keyword">in</span>     out     <span class="built_in">source</span>               destination         </span><br><span class="line">   35  2100 DROP       tcp  --  *      *       0.0.0.0/0            0.0.0.0/0            tcp dpt:80</span><br><span class="line"><span class="comment"># Warning: iptables-legacy tables present, use iptables-legacy to see them</span></span><br></pre></td></tr></table></figure><h1 id="匹配规则"><a href="#匹配规则" class="headerlink" title="匹配规则"></a>匹配规则</h1><h2 id="按网络接口匹配"><a href="#按网络接口匹配" class="headerlink" title="按网络接口匹配"></a>按网络接口匹配</h2><p><strong>-i，匹配数据进入的网络接口</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">-i eth0 匹配是否从网络接口eth0进入</span><br><span class="line">-i ppp0 匹配是否从网络接口ppp0进入</span><br></pre></td></tr></table></figure><p><strong>-o，匹配数据流出的网络接口</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">-o eth0 匹配是否从网络接口eth0出去</span><br><span class="line">-o ppp0 匹配是否从网络接口ppp0出去</span><br></pre></td></tr></table></figure><h2 id="按照地址进行匹配"><a href="#按照地址进行匹配" class="headerlink" title="按照地址进行匹配"></a>按照地址进行匹配</h2><p><strong>-s，匹配来源地址</strong></p><p>可以是IP、NET、Domain也可以为空(任何)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">-s 192.168.0.1 匹配来自192.168.0.1的数据包</span><br><span class="line">-s 192.168.1.0&#x2F;24 匹配来自192.168.1.0&#x2F;24网络段的数据包</span><br></pre></td></tr></table></figure><p><strong>-d，匹配目的地址</strong></p><p>可以是IP、NET、Domain也可以为空(任何)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">-d 202.106.0.20 匹配去往202.106.0.20的数据包</span><br><span class="line">-d 202.106.0.0&#x2F;16 匹配去往202.106.0.0&#x2F;16网络段的数据包</span><br><span class="line">-d www.adc.com 匹配前往域名www.abc.com的数据包</span><br></pre></td></tr></table></figure><h2 id="按照协议类型进行匹配"><a href="#按照协议类型进行匹配" class="headerlink" title="按照协议类型进行匹配"></a>按照协议类型进行匹配</h2><p><strong>-p,匹配协议类型</strong></p><p>可以是任何的网络协议</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">-p tcp</span><br><span class="line">-p udp</span><br><span class="line">-p icmp</span><br></pre></td></tr></table></figure><h2 id="按照端口进行匹配"><a href="#按照端口进行匹配" class="headerlink" title="按照端口进行匹配"></a>按照端口进行匹配</h2><p><strong>–sport，匹配源端口</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">--sport 1000 匹配源端口是1000的数据包</span><br><span class="line">--sport 1000:3000 匹配源端口是1000到3000的数据包(包含1000与3000)</span><br></pre></td></tr></table></figure><p><strong>–dport，匹配目的端口</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">--dport 80</span><br><span class="line">--dport 1000:6000</span><br></pre></td></tr></table></figure><p><strong>ps</strong>:如果需要匹配端口那就需要规则中必须有<strong>-p</strong>参数。</p><h2 id="附加匹配模块"><a href="#附加匹配模块" class="headerlink" title="附加匹配模块"></a>附加匹配模块</h2><h3 id="按包状态匹配"><a href="#按包状态匹配" class="headerlink" title="按包状态匹配"></a>按包状态匹配</h3><p><strong>state</strong></p><p>-m state –state 状态</p><p><strong>状态</strong>：</p><ul><li>NEW,有别于tcp的syn</li><li>ESTABLISHED,连接状态</li></ul><p><strong>例子</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ipttables -A INPUT -m state --state NEW.ESTABLISHED -j ACCEPT</span><br></pre></td></tr></table></figure><h3 id="按来源MAC匹配"><a href="#按来源MAC匹配" class="headerlink" title="按来源MAC匹配"></a>按来源MAC匹配</h3><p><strong>mac</strong></p><p>-m mac –mac-source MAC</p><p><strong>例如</strong></p><p>阻断来自某MAC地址的数据包</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">iptables -A FORWARD -m mac --mac-source xx:xx:xx:xx:xx:xx -j DROP</span><br></pre></td></tr></table></figure><h3 id="按包速率匹配"><a href="#按包速率匹配" class="headerlink" title="按包速率匹配"></a>按包速率匹配</h3><p><strong>limit</strong></p><p>用一定的速率去匹配数据包，而不是去限制数据包。</p><h3 id="多端口匹配"><a href="#多端口匹配" class="headerlink" title="多端口匹配"></a>多端口匹配</h3><p><strong>multiport</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">iptables -A INPUT -p tcp -m multiports --ports 21,22,23-j DROP</span><br></pre></td></tr></table></figure><p><strong>ps</strong>:如果需要匹配端口那就需要规则中必须有<strong>-p</strong>参数。</p><h1 id="target"><a href="#target" class="headerlink" title="target"></a>target</h1><p>动作，处理方式，按照规则匹配到流量后，对该流量进行的动作。有如下处理方式：</p><ul><li>ACCEPT</li><li>DROP</li><li>SNAT</li><li>DNAT</li><li>MASQUERADE</li></ul><h2 id="ACCEPT"><a href="#ACCEPT" class="headerlink" title="ACCEPT"></a>ACCEPT</h2><p>接受数据流量</p><h2 id="DROP"><a href="#DROP" class="headerlink" title="DROP"></a>DROP</h2><p>丢弃数据流量</p><h2 id="SNAT"><a href="#SNAT" class="headerlink" title="SNAT"></a>SNAT</h2><p>源地址转换，<strong>nat</strong>表的<strong>POSTROUTING</strong>链</p><p>例如</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 将内网192.168.0.0&#x2F;24源地址修改为1.1.1.1</span><br><span class="line">iptables -t nat -A POSTROUTING -s 192.168.0.0&#x2F;24 -j SNAT --to 1.1.1.1</span><br></pre></td></tr></table></figure><h2 id="DNAT"><a href="#DNAT" class="headerlink" title="DNAT"></a><strong>DNAT</strong></h2><p>目的地址转换，DNAT支持    转换为单IP，也支持转换到IP地址池</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 从ppp0接口进来的要访问TCP&#x2F;80端口的数据包目的地址修改为192.168.0.1</span><br><span class="line">iptables -t nat -A PREROUTING -i ppp0 -p tcp --dport 80 -j DNAT --to 192.168.0.1</span><br></pre></td></tr></table></figure><h1 id="转发流量"><a href="#转发流量" class="headerlink" title="转发流量"></a>转发流量</h1><p>使用iptables的转发流量功能前，需要先开启转发功能</p><p><strong>开启转发功能</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sed -i &#39;s&#x2F;net.ipv4.ip_forward &#x3D; 0&#x2F;net.ipv4.ip_forward &#x3D; 1&#x2F;g&#39; &#x2F;etc&#x2F;sysctl.conf</span><br><span class="line">sysctl -p</span><br></pre></td></tr></table></figure><p><strong>清除下所有默认的iptables表</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">iptables -F</span><br><span class="line">iptables -t nat -F</span><br><span class="line">service iptables save</span><br></pre></td></tr></table></figure><h2 id="SNAT策略"><a href="#SNAT策略" class="headerlink" title="SNAT策略"></a><strong>SNAT策略</strong></h2><p><strong>策略概述</strong></p><p>SNAT策略的典型应用环境</p><ul><li>局域网主机共享单个公网IP地址接入Internet</li></ul><p>SNAT策略的原理</p><p>源地址转换，Source Network Address Translation</p><ul><li>修改数据包的源地址</li></ul><p><strong>SNAT未使用前</strong></p><p>如果SNAT没有使用的话，那么就会像下图以下，无法进行通信。</p><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20211113054542183.png" alt="image-20211113054542183"></p><p><strong>SNAT使用后</strong></p><p>可以进行相互通信了</p><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20211113054621095.png" alt="image-20211113054621095"></p><p><strong>SNAT 规则编写</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# iptables -t nat -A POSTROUTING -s A.A.A.0&#x2F;24 -o eth0 -j SNAT --to-source D.D.D.D</span><br></pre></td></tr></table></figure><p><strong>SNAT效果</strong></p><p>如果SNAT设置成功，那么就会实现以下效果</p><ul><li><p>在局域网主机 A.A.A.A 中能够访问外网的Web服务器 C.C.C.C</p></li><li><p>查看Web主机 C.C.C.C 的访问日志，记录的来访者应是网关主机的外网IP地址 D.D.D.D</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># less /var/log/httpd/access_log</span></span><br><span class="line">……</span><br><span class="line">D.D.D.D - - [26/May/2011:15:26:23 +0800] <span class="string">"GET / HTTP/1.1"</span> 200 28 <span class="string">"-"</span> <span class="string">"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; Trident/4.0; SLCC2;</span></span><br><span class="line"><span class="string"> .NET CLR 2.0.50727; Media Center PC 6.0)"</span></span><br></pre></td></tr></table></figure></li></ul><h2 id="DNAT策略"><a href="#DNAT策略" class="headerlink" title="DNAT策略"></a>DNAT策略</h2><p><strong>DNAT</strong>的典型应用环境：在Internet中发布内网服务器。</p><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20211113060033937.png" alt="image-20211113060033937"></p><p><strong>策略编写</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# iptables -t nat -A PREROUTING -i eth0 -d D.D.D.D </span><br><span class="line">-p tcp --dport 80 -j DNAT --to-destination A.A.A.A</span><br></pre></td></tr></table></figure><p><strong>验证DNAT</strong></p><p>如何验证，很简单只要实现以下方式就算验证成功。</p><ul><li><p>在外网客户机 C.C.C.C 中能够访问位于企业内网的Web服务，访问地址为 <a href="http://D.D.D.D/" target="_blank" rel="noopener">http://D.D.D.D/</a></p></li><li><p>查看Web服务器 A.A.A.A 的访问日志，记录了外网客户机的IP地址 C.C.C.C</p></li></ul><h2 id="流量转发"><a href="#流量转发" class="headerlink" title="流量转发"></a>流量转发</h2><p><strong>转发TCP流量</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">iptables -t nat -A PREROUTING -p tcp --dport [源端口号] -j DNAT --to-destination [目标IP:目标端口号]</span><br><span class="line">iptables -t nat -A POSTROUTING -p tcp -d [目标IP] --dport [目标端口号] -j SNAT --to-source [中转服务器IP]</span><br></pre></td></tr></table></figure><p><strong>转发UDP流量</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">iptables -t nat -A PREROUTING -p udp --dport [源端口号] -j DNAT --to-destination [目标IP:目标端口号]</span><br><span class="line">iptables -t nat -A POSTROUTING -p udp -d [目标IP] --dport [目标端口号] -j SNAT --to-source [中转服务器IP]</span><br></pre></td></tr></table></figure><p><strong>PS</strong>：执行完毕后，必须进行保存 请使用<strong>service iptables save</strong> 进行保存。</p><h1 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h1><ol><li>开源Linux. iptables系列教程（一）| iptables入门篇[EB/OL]. 2020/05/13 [2021/11/13]. <a href="https://bbs.huaweicloud.com/blogs/164852" target="_blank" rel="noopener">https://bbs.huaweicloud.com/blogs/164852</a>.</li><li>2020/05. iptables系列教程（二）| iptables语法规则[EB/OL]. 2020/05[2021/11]. <a href="https://bbs.huaweicloud.com/blogs/detail/165033" target="_blank" rel="noopener">https://bbs.huaweicloud.com/blogs/detail/165033</a>.</li><li>开源Linux. iptables系列教程（三）| iptables 实战篇[EB/OL]. 2020/05/13[2021/11/13]. <a href="https://bbs.huaweicloud.com/blogs/167485" target="_blank" rel="noopener">https://bbs.huaweicloud.com/blogs/167485</a>.</li><li>乃逸夫. <a href="https://zhuanlan.zhihu.com/p/26325389[EB/OL]" target="_blank" rel="noopener">https://zhuanlan.zhihu.com/p/26325389[EB/OL]</a>. 2017/04/12[2021/11/13]. <a href="https://zhuanlan.zhihu.com/p/26325389" target="_blank" rel="noopener">https://zhuanlan.zhihu.com/p/26325389</a>.</li><li>一本正经的搞事情. iptables 四表五链[EB/OL]. 2018/09/26[2021/11/13]. <a href="https://www.cnblogs.com/zhujingzhi/p/9706664.html" target="_blank" rel="noopener">https://www.cnblogs.com/zhujingzhi/p/9706664.html</a>.</li></ol>]]></content>
    
    <summary type="html">
    
      
      
        
        
          &lt;blockquote&gt;
&lt;p&gt;iptables 是
        
      
    
    </summary>
    
    
      <category term="网络安全" scheme="http://yoursite.com/categories/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/"/>
    
    
      <category term="安全" scheme="http://yoursite.com/tags/%E5%AE%89%E5%85%A8/"/>
    
      <category term="防火墙" scheme="http://yoursite.com/tags/%E9%98%B2%E7%81%AB%E5%A2%99/"/>
    
  </entry>
  
  <entry>
    <title>配置https证书</title>
    <link href="http://yoursite.com/2021/11/03/configurethehttps/"/>
    <id>http://yoursite.com/2021/11/03/configurethehttps/</id>
    <published>2021-11-03T16:00:00.000Z</published>
    <updated>2021-11-03T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="08bf06ff7a7fe3ce66a079165bd6d090b3537f87eb5612cfe8a112865352636a"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      Here&#39;s something encrypted, password is required to continue reading.
    
    </summary>
    
    
      <category term="编程" scheme="http://yoursite.com/categories/%E7%BC%96%E7%A8%8B/"/>
    
    
      <category term="安全" scheme="http://yoursite.com/tags/%E5%AE%89%E5%85%A8/"/>
    
      <category term="公有云" scheme="http://yoursite.com/tags/%E5%85%AC%E6%9C%89%E4%BA%91/"/>
    
  </entry>
  
  <entry>
    <title>pycharm开发aws的Lambda</title>
    <link href="http://yoursite.com/2021/10/25/CodeLambdaOfAWSUsePycharm/"/>
    <id>http://yoursite.com/2021/10/25/CodeLambdaOfAWSUsePycharm/</id>
    <published>2021-10-25T16:00:00.000Z</published>
    <updated>2021-10-25T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Windows安装软件"><a href="#Windows安装软件" class="headerlink" title="Windows安装软件"></a>Windows安装软件</h1><blockquote><p>AWS 无服务器应用程序模型 (SAM) 是用于构建无服务器应用程序的开源框架。它提供速记语法来表达函数、API、数据库和事件源映射。每个资源只需几行，您就可以定义所需的应用程序并使用 YAML 对其进行建模。在部署期间，SAM 将 SAM 语法转换并扩展为 AWS CloudFormation 语法，使您能够更快地构建无服务器应用程序。</p></blockquote><p>因此，我们这里就需要用到这个软件进行使用。安装方式与安装<code>aws cli</code>的方式相同。</p><p>Windows64：<a href="https://github.com/awslabs/aws-sam-cli/releases/latest/download/AWS_SAM_CLI_64_PY3.msi" target="_blank" rel="noopener">下载链接</a></p><p>Linux:<a href="https://github.com/awslabs/aws-sam-cli/releases/latest/download/AWS_SAM_CLI_64_PY3.msi" target="_blank" rel="noopener">下载链接</a></p><p>其他下载方式:<a href="https://aws.amazon.com/cn/serverless/sam/" target="_blank" rel="noopener">其他方式</a></p><p>安装完毕之后，调出<code>termial</code>，输入sam即可测试安装是否成功</p><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20211026085056658.png" alt="image-20211026085056658"></p><h1 id="Pycharm安装插件"><a href="#Pycharm安装插件" class="headerlink" title="Pycharm安装插件"></a>Pycharm安装插件</h1><p>选择路径</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">File-&gt;Plugins-&gt;input &#39;aws&#39;-&gt; install</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20211025221833694.png" alt="image-20211025221833694"></p><p>通过以上路径安装<code>aws toolkit</code>插件</p><h1 id="设置权限"><a href="#设置权限" class="headerlink" title="设置权限"></a>设置权限</h1><p>这里我们需要使用aws账号的aksk进行权限设置</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">IAM-&gt;用户-&gt;安全证书-&gt;创建访问密钥</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20211025222308930.png" alt="image-20211025222308930"></p><p>这里创建访问密钥</p><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20211025222354422.png" alt="image-20211025222354422"></p><p>记录下访问ID与私有密钥</p><h1 id="pycharm设置AKSK"><a href="#pycharm设置AKSK" class="headerlink" title="pycharm设置AKSK"></a>pycharm设置AKSK</h1><p>打开pycharm，选择左下角的<code>AWS Explorer</code></p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20211025222559570.png" alt="image-20211025222559570" style="zoom:50%;" /><p>这里进行设置aws 凭证，将之前复制下来的访问ID与私有密钥放入</p><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20211025222809040.png" alt="image-20211025222809040"></p><h1 id="开始编程"><a href="#开始编程" class="headerlink" title="开始编程"></a>开始编程</h1><p><strong>创建文件交</strong></p><p>选择一个空文件夹，这里选择helloworld。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir helloworld</span><br><span class="line">cd helloworld</span><br></pre></td></tr></table></figure><p><strong>进行sam初始化</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sam init</span><br></pre></td></tr></table></figure><p><strong>进行交互式输入</strong></p><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20211026085602200.png" alt="image-20211026085602200"></p><p>创建完毕之后，发现helloworld文件夹下就有一个初始架构</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">todo</span><br></pre></td></tr></table></figure><h1 id="创建Lambda"><a href="#创建Lambda" class="headerlink" title="创建Lambda"></a>创建Lambda</h1><p>pycharm 选择之前创建的helloworld文件夹</p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20211026085739778.png" alt="image-20211026085739778" style="zoom:50%;" /><p>选择<code>AWS Explorer</code>中的Lambda</p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20211026085906780.png" alt="image-20211026085906780" style="zoom:50%;" /><p>创建Lambda</p><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20211026090119362.png" alt="image-20211026090119362"></p><h1 id="本地调试"><a href="#本地调试" class="headerlink" title="本地调试"></a>本地调试</h1><p>本地调试完毕之后可以直接部署到远端。本地调试的话，需要本地安装docker环境。</p><h1 id="远程部署"><a href="#远程部署" class="headerlink" title="远程部署"></a>远程部署</h1><h2 id="上传本地代码"><a href="#上传本地代码" class="headerlink" title="上传本地代码"></a>上传本地代码</h2><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20211026090334452.png" alt="image-20211026090334452" style="zoom:70%;" /><h2 id="运行调试"><a href="#运行调试" class="headerlink" title="运行调试"></a>运行调试</h2><p>选择触发事件输入模板，这里选择<code>s3 put</code>事件</p><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20211026090506179.png" alt="image-20211026090506179"></p><p>点击<code>OK</code>运行，运行结果就出来了。</p><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20211026090632702.png" alt="image-20211026090632702"></p><h1 id="查看结果"><a href="#查看结果" class="headerlink" title="查看结果"></a>查看结果</h1><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20211026104617493.png" alt="image-20211026104617493"></p><p>Cloudwatch查看</p><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20211026104747235.png" alt="image-20211026104747235"></p>]]></content>
    
    <summary type="html">
    
      
      
        
        
          &lt;h1 id=&quot;Windows安装软件&quot;&gt;&lt;a
        
      
    
    </summary>
    
    
      <category term="编程" scheme="http://yoursite.com/categories/%E7%BC%96%E7%A8%8B/"/>
    
    
      <category term="aws" scheme="http://yoursite.com/tags/aws/"/>
    
      <category term="Linux" scheme="http://yoursite.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>AWS相关函数</title>
    <link href="http://yoursite.com/2021/10/10/AWS%E7%9A%84S3OFunctionPration/"/>
    <id>http://yoursite.com/2021/10/10/AWS%E7%9A%84S3OFunctionPration/</id>
    <published>2021-10-10T16:00:00.000Z</published>
    <updated>2021-10-10T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong>文件排序</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">list_s3_by_prefix</span><span class="params">(bucket, prefix, filter_func=None)</span>:</span></span><br><span class="line">    print(<span class="string">f"list_s3_by_prefix bucket: <span class="subst">&#123;bucket&#125;</span>, prefix: <span class="subst">&#123;prefix&#125;</span>"</span>)</span><br><span class="line">    s3_bucket = boto3.resource(<span class="string">'s3'</span>).Bucket(bucket)</span><br><span class="line">    <span class="keyword">if</span> filter_func <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">        key_list = [s.key <span class="keyword">for</span> s <span class="keyword">in</span> s3_bucket.objects.filter(Prefix=prefix)]</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        key_list = [s.key <span class="keyword">for</span> s <span class="keyword">in</span> s3_bucket.objects.filter(</span><br><span class="line">            Prefix=prefix) <span class="keyword">if</span> filter_func(s.key)]</span><br><span class="line"></span><br><span class="line">    print(<span class="string">"list_s3_by_prefix return:"</span>, key_list)</span><br><span class="line">    <span class="keyword">return</span> key_list</span><br></pre></td></tr></table></figure><p><strong>文件拷贝到s3</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">s3_copy</span><span class="params">(bucket, from_key, to_key)</span>:</span></span><br><span class="line">    s3_bucket = boto3.resource(<span class="string">'s3'</span>).Bucket(bucket)</span><br><span class="line">    copy_source = &#123;</span><br><span class="line">        <span class="string">'Bucket'</span>: bucket,</span><br><span class="line">        <span class="string">'Key'</span>: from_key</span><br><span class="line">    &#125;</span><br><span class="line">    s3_bucket.copy(copy_source, to_key)</span><br><span class="line">    print(<span class="string">"copied s3://&#123;&#125;/&#123;&#125; to s3://&#123;&#125;/&#123;&#125;"</span>.format(bucket, from_key, bucket, to_key))</span><br></pre></td></tr></table></figure><p><strong>文件同步到本地</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">sync_s3</span><span class="params">(file_name_list, s3_folder, local_folder)</span>:</span></span><br><span class="line">    <span class="keyword">for</span> f <span class="keyword">in</span> file_name_list:</span><br><span class="line">        print(<span class="string">"file preparation: download src key &#123;&#125; to dst key &#123;&#125;"</span>.format(os.path.join(</span><br><span class="line">            s3_folder, f), os.path.join(local_folder, f)))</span><br><span class="line">        s3client.download_file(bucket, os.path.join(</span><br><span class="line">            s3_folder, f), os.path.join(local_folder, f))</span><br></pre></td></tr></table></figure><p><strong>上传单个文件</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">write_to_s3</span><span class="params">(filename, bucket, key)</span>:</span></span><br><span class="line">    print(<span class="string">"upload s3://&#123;&#125;/&#123;&#125;"</span>.format(bucket, key))</span><br><span class="line">    <span class="keyword">with</span> open(filename, <span class="string">'rb'</span>) <span class="keyword">as</span> f:  <span class="comment"># Read in binary mode</span></span><br><span class="line">        <span class="comment"># return s3client.upload_fileobj(f, bucket, key)</span></span><br><span class="line">        <span class="keyword">return</span> s3client.put_object(</span><br><span class="line">            ACL=<span class="string">'bucket-owner-full-control'</span>,</span><br><span class="line">            Bucket=bucket,</span><br><span class="line">            Key=key,</span><br><span class="line">            Body=f</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;&lt;strong&gt;文件排序&lt;/strong&gt;&lt;/p&gt;
&lt;fi
        
      
    
    </summary>
    
    
      <category term="编程" scheme="http://yoursite.com/categories/%E7%BC%96%E7%A8%8B/"/>
    
    
      <category term="aws" scheme="http://yoursite.com/tags/aws/"/>
    
      <category term="Linux" scheme="http://yoursite.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Pycharm远程调试服务器代码</title>
    <link href="http://yoursite.com/2021/10/09/PycharmCodeRemoteCode/"/>
    <id>http://yoursite.com/2021/10/09/PycharmCodeRemoteCode/</id>
    <published>2021-10-09T16:00:00.000Z</published>
    <updated>2021-10-09T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>Pycharm是非常方便的非常强大的IDE编程工具，那么我们能不能使用Pycharm进行服务器代码的开发与调试。</p></blockquote><p>Pycharm 远程调试服务器代码，这里使用的方法是先将远程服务器的代码目录挂载到本地，再通过Pycharm调用远程python解析器进行编程。最后实现操作服务器代码就想操作本地代码进行调试一样。这样子既可以利用远程服务器强大的计算能力，也可以像编程本地代码这么方便的进行编程。实现效果</p><p>放图TODO</p><p>因此一共需要通过3个步骤完成：</p><ul><li><p>第一个步骤，在远程服务器上确定代码文件夹</p></li><li><p>第二个步骤，挂载远程代码文件夹目录到本地；</p></li><li><p>第三个步骤，通过Pycharm远程调用python解析器进行编程；</p></li></ul><h2 id="代码文件夹确定"><a href="#代码文件夹确定" class="headerlink" title="代码文件夹确定"></a>代码文件夹确定</h2><p>我这里选择了一台Centos服务器，因为Linux操作系统默认是安装了ssh服务器，如果是Windows则需要手动安装<code>ssh-server</code>。</p><p>这里在home目录下创建了<code>remote_dir</code>作为远程代码文件夹</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir &#x2F;home&#x2F;remote_dir</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20211009233513922.png" alt="image-20211009233513922"></p><p>可以看到文件夹已经创建成功了。目标路径<code>/home/remote_dir</code></p><h1 id="挂载目录"><a href="#挂载目录" class="headerlink" title="挂载目录"></a>挂载目录</h1><p>挂载远程代码文件夹的方法有很多，常见的有：</p><ul><li>通过rclone进行挂载；</li><li>通过第三方图形化工具，例如RaiDrive;</li></ul><p>这篇文章，讲述通过RaiDrive进行挂载，因为是在Windows操作系统下进行的，因此图形化比较方便。</p><h2 id="下载RaiDrive"><a href="#下载RaiDrive" class="headerlink" title="下载RaiDrive"></a><strong>下载RaiDrive</strong></h2><p>进入RaiDrive官网:<a href="https://www.raidrive.com/" target="_blank" rel="noopener">https://www.raidrive.com/</a>，下载安装包。</p><p>安装完毕，如图所示</p><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20211009232513414.png" alt="image-20211009232513414"></p><h2 id="挂载远程目录"><a href="#挂载远程目录" class="headerlink" title="挂载远程目录"></a>挂载远程目录</h2><p>这里为了安全起见，没有选择密码作为登录凭证，而是选择了密钥登陆。</p><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20211009234012939.png" alt="image-20211009234012939"></p><p>填写完毕之后点击OK即可。</p><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20211009234059552.png" alt="image-20211009234059552"></p><p>就会显示已经连接上了。在文件驱动器查看，发现虚拟文件盘已经挂载上了。</p><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20211009234144469.png" alt="image-20211009234144469"></p><p><strong>测试挂载</strong></p><p>这里在虚拟文件夹中创建一个文件<code>test_file.txt</code>，发现已经在远程服务器创建成功。</p><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20211009234328798.png" alt="image-20211009234328798"></p><h1 id="Pycharm调用远程python"><a href="#Pycharm调用远程python" class="headerlink" title="Pycharm调用远程python"></a>Pycharm调用远程python</h1><p>这里pycharm 创建一个远程的python解析器源，这样子就可以了。</p><p>File-&gt;setting-&gt;python interpreter -&gt;add-&gt;ssh interpreter</p><p><img src="C:/Users/ECCOM/AppData/Roaming/Typora/typora-user-images/image-20211009234828661.png" alt="image-20211009234828661"></p><p>这样子到了创建远程python解析器的界面了。填入对应的内容即可。选择主机与用户名</p><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20211009235006684.png" alt=""></p><p>这里我服务器设置的是密钥登陆，如果是密码登录则选择密码即可。</p><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20211009235133329.png" alt="image-20211009235133329"></p><p>选择服务器的python解析器，因为一个服务器上可以有多个python解析器，因此需要手动选择python解析器。</p><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20211009235439812.png" alt="image-20211009235439812"></p><p>已经设置成功</p><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20211009235520338.png" alt="image-20211009235520338"></p><p>这里测试一下在pycharm操作这个解析器，安装包能否安装成功。</p><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20211009235645416.png" alt="image-20211009235645416"></p><p>在服务器上查看，发现安装成功。因此可以得出结论，在本地pycharm操作远程python解析器就想在本地pycharm操作本地python解析器一样方便。</p><p><img src="C:/Users/ECCOM/AppData/Roaming/Typora/typora-user-images/image-20211009235713046.png" alt="image-20211009235713046"></p><h2 id="pycharm创建项目"><a href="#pycharm创建项目" class="headerlink" title="pycharm创建项目"></a>pycharm创建项目</h2><p>这里在挂载的虚拟盘中创建项目，使用的是远程的python解析器。</p>]]></content>
    
    <summary type="html">
    
      
      
        
        
          &lt;blockquote&gt;
&lt;p&gt;Pycharm是非常方便的非常强
        
      
    
    </summary>
    
    
      <category term="编程" scheme="http://yoursite.com/categories/%E7%BC%96%E7%A8%8B/"/>
    
    
      <category term="aws" scheme="http://yoursite.com/tags/aws/"/>
    
      <category term="Linux" scheme="http://yoursite.com/tags/Linux/"/>
    
  </entry>
  
</feed>
