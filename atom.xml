<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Qier&#39;s blog</title>
  <icon>http://yoursite.com/icon.png</icon>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2021-12-21T16:00:00.000Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>qier</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>资源汇总</title>
    <link href="http://yoursite.com/2021/12/20/resourcesummary/"/>
    <id>http://yoursite.com/2021/12/20/resourcesummary/</id>
    <published>2021-12-20T16:00:00.000Z</published>
    <updated>2021-12-21T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="sublime-text-教程"><a href="#sublime-text-教程" class="headerlink" title="sublime text 教程"></a>sublime text 教程</h2><p>sublime text3 字体大小的设置方法 <a href="https://blog.csdn.net/csdn_chenli/article/details/68060943" target="_blank" rel="noopener">https://blog.csdn.net/csdn_chenli/article/details/68060943</a></p><p>SublimeText3中使用terminal终端 <a href="https://www.codenong.com/cs105923270/" target="_blank" rel="noopener">https://www.codenong.com/cs105923270/</a></p><p>sublime text 3安装过程、语言汉化、基本插件安装、重要快捷键汇总 <a href="https://blog.csdn.net/qq_36595013/article/details/83039267" target="_blank" rel="noopener">https://blog.csdn.net/qq_36595013/article/details/83039267</a></p><p>有哪些炫酷的sublime text3 主题？ <a href="https://www.zhihu.com/question/46266742" target="_blank" rel="noopener">https://www.zhihu.com/question/46266742</a></p><p>sublime text 教程 <a href="https://www.w3cschool.cn/sublimetext/" target="_blank" rel="noopener">https://www.w3cschool.cn/sublimetext/</a> </p><h2 id="资源网站-amp-破解软件"><a href="#资源网站-amp-破解软件" class="headerlink" title="资源网站&amp;破解软件"></a>资源网站&amp;破解软件</h2><p>视频资源网站</p><p>乐于分享 <a href="https://masuit.com/" target="_blank" rel="noopener">https://masuit.com/</a></p><p>果核剥壳 <a href="https://www.ghxi.com/" target="_blank" rel="noopener">https://www.ghxi.com/</a></p><p>阿刚同学 <a href="https://www.isharepc.com/" target="_blank" rel="noopener">https://www.isharepc.com/</a></p><h2 id="视频网站"><a href="#视频网站" class="headerlink" title="视频网站"></a>视频网站</h2><p>天下无鱼 <a href="https://shikey.com/" target="_blank" rel="noopener">https://shikey.com/</a></p><p>乐于分享 <a href="https://masuit.com/" target="_blank" rel="noopener">https://masuit.com/</a></p><h2 id="AWS-教程"><a href="#AWS-教程" class="headerlink" title="AWS 教程"></a><strong>AWS 教程</strong></h2><p><a href="http://www.cloudbin.cn/?cat=135" target="_blank" rel="noopener"><a href="http://www.cloudbin.cn/" target="_blank" rel="noopener">IT Lab Service – Bing哥的博客</a></a></p><p><a href="https://www.youtube.com/watch?v=QxMZDzyWJj4&list=PLYD7D0d62WlABQJODWIq-Eks1B36OYzl8" target="_blank" rel="noopener">sap视频教程</a></p>]]></content>
    
    <summary type="html">
    
      
      
        
        
          &lt;h2 id=&quot;sublime-text-教程&quot;&gt;&lt;a
        
      
    
    </summary>
    
    
      <category term="资源" scheme="http://yoursite.com/categories/%E8%B5%84%E6%BA%90/"/>
    
    
  </entry>
  
  <entry>
    <title>Terraformer安装与使用</title>
    <link href="http://yoursite.com/2021/12/20/terraformerinstaller/"/>
    <id>http://yoursite.com/2021/12/20/terraformerinstaller/</id>
    <published>2021-12-20T16:00:00.000Z</published>
    <updated>2021-12-20T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="安装go环境"><a href="#安装go环境" class="headerlink" title="安装go环境"></a>安装go环境</h1><p>根据go.mod文件查看go的版本要求</p><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20211221144228939.png" alt="image-20211221144228939"></p><p>下载go安装包<a href="https://golang.google.cn/dl/" target="_blank" rel="noopener">https://golang.google.cn/dl/</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">wget https:&#x2F;&#x2F;golang.google.cn&#x2F;dl&#x2F;go1.17.linux-amd64.tar.gz</span><br><span class="line">sudo tar -zxvf go1.17.linux-amd64.tar.gz -C &#x2F;opt</span><br><span class="line">&#x2F;opt&#x2F;go&#x2F;bin&#x2F;go version</span><br></pre></td></tr></table></figure><p>修改环境变量<code>vi /etc/profile</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">export GOROOT&#x3D;&#x2F;opt&#x2F;go</span><br><span class="line">export GOPATH&#x3D;&#x2F;home&#x2F;ubuntu&#x2F;go</span><br><span class="line">export GOPROXY&#x3D;https:&#x2F;&#x2F;goproxy.cn</span><br><span class="line">export GOARCH&#x3D;amd64</span><br><span class="line">export GOOS&#x3D;linux</span><br><span class="line">export GOTOOLS&#x3D;$GOROOT&#x2F;pkg&#x2F;tool</span><br><span class="line">export PATH&#x3D;$PATH:$GOROOT&#x2F;bin:$GOPATH&#x2F;bin</span><br></pre></td></tr></table></figure><p>使环境变量生效<code>source /etc/profile</code></p><h1 id="编译terraformer"><a href="#编译terraformer" class="headerlink" title="编译terraformer"></a>编译terraformer</h1><ul><li><p>Run git clone  &amp;&amp; cd terraformer/</p></li><li><p>Run git clone  &amp;&amp; cd terraformer/ </p></li><li><p>Run go mod download (下载模块到本地缓存，缓存路径是 $GOPATH/pkg/mod/cache) </p></li><li><p>Run go build -v for all providers OR build with one provider: go run build/main.go {google,aws,azure,kubernetes and etc}</p><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20211221144524483.png" alt="image-20211221144524483"></p></li><li><p>.Run terraform init against a versions.tf file to install the plugins required for your platform. For example, if you need plugins for the google provider, versions.tf should contain:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">terraform &#123;</span><br><span class="line">required_providers &#123;</span><br><span class="line">google &#x3D; &#123;</span><br><span class="line">source &#x3D; &quot;hashicorp&#x2F;google&quot;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">required_version &#x3D; &quot;&gt;&#x3D; 0.13&quot;</span><br><span class="line">&#125;</span><br><span class="line"># if need aws</span><br><span class="line">terraform &#123;</span><br><span class="line">required_providers &#123;</span><br><span class="line">aws &#x3D; &#123;</span><br><span class="line">source &#x3D; &quot;hashicorp&#x2F;aws&quot;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>Or alternatively Copy your Terraform provider’s plugin(s) to</p><p>folder ~/.terraform.d/plugins/{darwin,linux}_amd64/, as appropriate.</p><p>cp terraform-provider-aws_v3.57.0_x5 /root/.terraform.d/plugins/linux_amd64/</p></li></ul><h1 id="terraform-安装"><a href="#terraform-安装" class="headerlink" title="terraform 安装"></a>terraform 安装</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ wget https:&#x2F;&#x2F;releases.hashicorp.com&#x2F;terraform&#x2F;1.0.5&#x2F;terraform_1.0.5_linux_amd64.zip</span><br><span class="line">$ unzip terraform_1.0.5_linux_amd64.zip</span><br><span class="line">$ sudo cp terraform &#x2F;usr&#x2F;local&#x2F;bin&#x2F;</span><br><span class="line">$ which terraform</span><br><span class="line">&#x2F;usr&#x2F;local&#x2F;bin&#x2F;terraform</span><br><span class="line">$ terraform init</span><br></pre></td></tr></table></figure><p>默认会下载aws插件到当前隐藏目录 ./terraform/.terraform/providers/registry.terraform.io/hashicorp/aws/3.57.0/linux_amd64/terraformprovider-aws_v3.57.0_x5</p><p>国内下载不了插件，可以去github下载release进行go编译;或者翻墙下载 <a href="https://registry.terraform.io/providers/hashicorp/aws/latest" target="_blank" rel="noopener">https://registry.terraform.io/providers/hashicorp/aws/latest</a></p><h1 id="资源tf抓取测试"><a href="#资源tf抓取测试" class="headerlink" title="资源tf抓取测试"></a>资源tf抓取测试</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># .&#x2F;terraformer-aws import aws --resources s3</span><br><span class="line">2021&#x2F;09&#x2F;03 10:25:53 aws importing default region</span><br><span class="line">2021&#x2F;09&#x2F;03 10:25:56 aws importing... s3</span><br><span class="line">2021&#x2F;09&#x2F;03 10:26:14 aws done importing s3</span><br><span class="line">2021&#x2F;09&#x2F;03 10:26:14 Number of resources for service s3: 3</span><br></pre></td></tr></table></figure><p>文件会保存在当前的generated目录下</p><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20211221144945997.png" alt="image-20211221144945997"></p>]]></content>
    
    <summary type="html">
    
      
      
        
        
          &lt;h1 id=&quot;安装go环境&quot;&gt;&lt;a
        
      
    
    </summary>
    
    
      <category term="转载" scheme="http://yoursite.com/categories/%E8%BD%AC%E8%BD%BD/"/>
    
    
      <category term="terraform" scheme="http://yoursite.com/tags/terraform/"/>
    
  </entry>
  
  <entry>
    <title>AWS ALB数据流变化</title>
    <link href="http://yoursite.com/2021/12/19/albchangeto/"/>
    <id>http://yoursite.com/2021/12/19/albchangeto/</id>
    <published>2021-12-19T16:00:00.000Z</published>
    <updated>2021-12-19T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="拓扑图"><a href="#拓扑图" class="headerlink" title="拓扑图"></a>拓扑图</h1><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/albnatdrawio.svg" alt="albnatdrawio"></p><h1 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h1><p>ALB与EC2通信需要满足以下两个要素：</p><ul><li>ALB与EC2之间需要能能够进行通信；</li><li>ALB再公网区域；</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        
        
          &lt;h1 id=&quot;拓扑图&quot;&gt;&lt;a href=&quot;#拓扑图&quot;
        
      
    
    </summary>
    
    
      <category term="EC2" scheme="http://yoursite.com/categories/EC2/"/>
    
    
      <category term="EC2" scheme="http://yoursite.com/tags/EC2/"/>
    
  </entry>
  
  <entry>
    <title>Terraform入门教程笔记</title>
    <link href="http://yoursite.com/2021/12/13/terraformlearn/"/>
    <id>http://yoursite.com/2021/12/13/terraformlearn/</id>
    <published>2021-12-13T16:00:00.000Z</published>
    <updated>2021-12-13T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h1><p><strong>Terraform</strong>：HashiCorp Terraform是一个IT基础架构自动化编排工具，可以用代码来管理维护IT资源。它编写了描述云资源拓扑的配置文件中的基础结构，例如虚拟机、存储账户和网络接口。其就是高度标准化。</p><h1 id="Terraform代码规范"><a href="#Terraform代码规范" class="headerlink" title="Terraform代码规范"></a><strong>Terraform代码规范</strong></h1><p>推荐以下代码规范：</p><ul><li>使用两个空格缩进</li><li>同一缩进层级的多个赋值语句以等号对齐：</li><li>当块体内同时有参数赋值以及内嵌块时，请先编写参数赋值，然后是内嵌块。参数与内嵌块之间空一行分隔；</li><li>对于同时包含参数赋值以及元参数赋值的块，请先编写元参数赋值语句，然后是参数赋值语句，之间空一行分隔。元参数块请置于块体的最后，空一行分隔：</li><li>顶层块之间应空一行分隔。内嵌块之间也应该空一行分隔，除非是相同类型的内嵌块(比如resource块内部多个provisioner块)</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">resource &quot;aws_instance&quot; &quot;example&quot; &#123;</span><br><span class="line">  count &#x3D; 2 # meta-argument first 元参数赋值</span><br><span class="line"></span><br><span class="line">  ami           &#x3D; &quot;abc123&quot;# 元参数赋值</span><br><span class="line">  instance_type &#x3D; &quot;t2.micro&quot;# 元参数赋值</span><br><span class="line"></span><br><span class="line">  network_interface &#123;# 参数赋值</span><br><span class="line">    # ...</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  lifecycle &#123; # # 参数赋值</span><br><span class="line">    create_before_destroy &#x3D; true</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="Terraform-基础概念"><a href="#Terraform-基础概念" class="headerlink" title="Terraform 基础概念"></a>Terraform 基础概念</h1><h2 id="Provider"><a href="#Provider" class="headerlink" title="Provider"></a><strong>Provider</strong></h2><p>Terraform被设计成一个多云基础设施编排工具，不像CloudFormation那样绑定AWS平台，Terraform可以同时编排各种云平台或是其他基础设施的资源。Terraform实现多云编排的方法就是Provider插件机制。</p><p><img src="https://gitee.com/lonegunman/introduction-to-terraform-pic/raw/master/2020-11-16/1605496195438-image.png" alt="Terraform通过RPC调用插件，插件代码通过调用SDK操作远程资源"></p><p><strong>Provider</strong> 缓存机制</p><p>默认情况下，当完成 <strong>terraform init</strong>  之后，项目文件夹中就会创建<strong>.terraform</strong>文件夹，并且会下载Provider的相关插件。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">.terraform</span><br><span class="line">└── plugins</span><br><span class="line">    ├── registry.terraform.io</span><br><span class="line">    │   └── ucloud</span><br><span class="line">    │       └── ucloud</span><br><span class="line">    │           └── 1.22.0</span><br><span class="line">    │               └── darwin_amd64 -&gt; /Users/byers/.terraform.d/plugin-cache/registry.terraform.io/ucloud/ucloud/1.22.0/darwin_amd64</span><br><span class="line">    └── selections.json</span><br></pre></td></tr></table></figure><p>有的时候下载某些Provider会非常缓慢，或是在开发环境中存在许多的Terraform项目，每个项目都保有自己独立的插件文件夹非常浪费磁盘，这时我们可以使用插件缓存。有两种方式可以启用插件缓存：</p><p><strong>第一种方法</strong>是配置<code>TF_PLUGIN_CACHE_DIR</code>这个环境变量：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">export TF_PLUGIN_CACHE_DIR&#x3D;&quot;$HOME&#x2F;.terraform.d&#x2F;plugin-cache&quot;</span><br></pre></td></tr></table></figure><p><strong>第二种方法</strong>是使用CLI配置文件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">plugin_cache_dir &#x3D; &quot;$HOME&#x2F;.terraform.d&#x2F;plugin-cache&quot;</span><br></pre></td></tr></table></figure><p>当启用插件缓存之后，每当执行<code>terraform init</code>命令时，Terraform引擎会首先检查期望使用的插件在缓存文件夹中是否已经存在，如果存在，那么就会将缓存的插件拷贝到当前工作目录下的<code>.terraform</code>文件夹内。如果插件不存在，那么Terraform仍然会像之前那样下载插件，并首先保存在插件文件夹中，随后再从插件文件夹拷贝到当前工作目录下的<code>.terraform</code>文件夹内。为了尽量避免同一份插件被保存多次，只要操作系统提供支持，Terraform就会使用符号连接而不是实际从插件缓存目录拷贝到工作目录。</p><p>同时需要注意的是，Terrafom引擎永远不会主动删除缓存文件夹中的插件，缓存文件夹的尺寸可能会随着时间而增长到非常大，这时需要手工清理。</p><h2 id="Provider的声明"><a href="#Provider的声明" class="headerlink" title="Provider的声明"></a>Provider的声明</h2><p>一组Terraform代码要被执行，相关的Provider必须在代码中被声明。不少的Provider在声明时需要传入一些关键信息才能被使用。不同的Provider所需要的关键信息也是不尽相同的，因此这里需要注意一下。</p><figure class="highlight haskell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="title">terraform</span> &#123;</span><br><span class="line">  required_providers &#123;</span><br><span class="line">    ucloud    = &#123;</span><br><span class="line">      source  = <span class="string">"ucloud/ucloud"</span></span><br><span class="line">      version = <span class="string">"&gt;=1.24.1"</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title">provider</span> <span class="string">"ucloud"</span> &#123;</span><br><span class="line">  public_key  = <span class="string">"your_public_key"</span></span><br><span class="line">  private_key = <span class="string">"your_private_key"</span></span><br><span class="line">  project_id  = <span class="string">"your_project_id"</span></span><br><span class="line">  region      = <span class="string">"cn-bj2"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里一部分的HCL（HashiCorp Configuration Language）也说明了如何进行声明一个Provider。</p><ul><li>required_providers 所需要的providers版本<ul><li>ucloud，声明了本段代码必须要名为ucloud的Provider才可以执行。</li><li>source = “ucloud/ucloud”，这一行声明了ucloud这个插件的源地址(Source Address)。一个源地址是全球唯一的，它指示了Terraform如何下载该插件。</li><li>version = “&gt;=1.24.1”，声明了该源码所需要的插件的版本约束。</li></ul></li><li>provider</li></ul><h2 id="多Provider实例"><a href="#多Provider实例" class="headerlink" title="多Provider实例"></a><strong>多Provider实例</strong></h2><p>一个Local Name是在一个模块中对一个Provider的唯一的标识。可以声明多个同类型的Provider，并给予不同的Local Name，也就是同时操作多个云资源环境。这使得我们可以在一组配置文件中同时操作不同区域、不同账号的资源。</p><p>这里提供了两种方式协助我们使用多Provider实例：</p><ul><li>指明Provider key</li><li>Alias 别名</li></ul><p><strong>显视指明Provider Local Name</strong></p><figure class="highlight haskell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="title">terraform</span> &#123;</span><br><span class="line">  required_version = <span class="string">"&gt;=0.13.5"</span></span><br><span class="line">  required_providers &#123;</span><br><span class="line">    ucloudbj  = &#123;</span><br><span class="line">      source  = <span class="string">"ucloud/ucloud"</span></span><br><span class="line">      version = <span class="string">"&gt;=1.24.1"</span></span><br><span class="line">    &#125;</span><br><span class="line">    ucloudsh  = &#123;</span><br><span class="line">      source  = <span class="string">"ucloud/ucloud"</span></span><br><span class="line">      version = <span class="string">"&gt;=1.24.1"</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title">provider</span> <span class="string">"ucloudbj"</span> &#123;</span><br><span class="line">  public_key  = <span class="string">"your_public_key"</span></span><br><span class="line">  private_key = <span class="string">"your_private_key"</span></span><br><span class="line">  project_id  = <span class="string">"your_project_id"</span></span><br><span class="line">  region      = <span class="string">"cn-bj2"</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title">provider</span> <span class="string">"ucloudsh"</span> &#123;</span><br><span class="line">  public_key  = <span class="string">"your_public_key"</span></span><br><span class="line">  private_key = <span class="string">"your_private_key"</span></span><br><span class="line">  project_id  = <span class="string">"your_project_id"</span></span><br><span class="line">  region      = <span class="string">"cn-sh2"</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">data</span> "ucloud_security_groups" "default" &#123;</span></span><br><span class="line"><span class="class">  <span class="title">provider</span> = <span class="title">ucloudbj</span></span></span><br><span class="line"><span class="class">  <span class="title">type</span>     = "<span class="title">recommend_web</span>"</span></span><br><span class="line"><span class="class">&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">data</span> "ucloud_images" "default" &#123;</span></span><br><span class="line"><span class="class">  <span class="title">provider</span>          = <span class="title">ucloudsh</span></span></span><br><span class="line"><span class="class">  <span class="title">availability_zone</span> = "<span class="title">cn</span>-<span class="title">sh2</span>-01"</span></span><br><span class="line"><span class="class">  <span class="title">name_regex</span>        = "^<span class="type">CentOS</span> 6.5 64"</span></span><br><span class="line"><span class="class">  <span class="title">image_type</span>        = "<span class="title">base</span>"</span></span><br><span class="line"><span class="class">&#125;</span></span><br></pre></td></tr></table></figure><p>例如上面的例子，声明了两个UCloud Provider，分别定位在北京区域和上海区域。在接下来的data声明中显式指定了provider的Local Name</p><p><strong>Alias别名</strong></p><figure class="highlight haskell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="title">terraform</span> &#123;</span><br><span class="line">  required_version = <span class="string">"&gt;=0.13.5"</span></span><br><span class="line">  required_providers &#123;</span><br><span class="line">    ucloud    = &#123;</span><br><span class="line">      source  = <span class="string">"ucloud/ucloud"</span></span><br><span class="line">      version = <span class="string">"&gt;=1.24.1"</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title">provider</span> <span class="string">"ucloud"</span> &#123;</span><br><span class="line">  public_key  = <span class="string">"your_public_key"</span></span><br><span class="line">  private_key = <span class="string">"your_private_key"</span></span><br><span class="line">  project_id  = <span class="string">"your_project_id"</span></span><br><span class="line">  region      = <span class="string">"cn-bj2"</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title">provider</span> <span class="string">"ucloud"</span> &#123;</span><br><span class="line">  alias       = <span class="string">"ucloudsh"</span></span><br><span class="line">  public_key  = <span class="string">"your_public_key"</span></span><br><span class="line">  private_key = <span class="string">"your_private_key"</span></span><br><span class="line">  project_id  = <span class="string">"your_project_id"</span></span><br><span class="line">  region      = <span class="string">"cn-sh2"</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">data</span> "ucloud_security_groups" "default" &#123;</span></span><br><span class="line"><span class="class">  <span class="title">type</span> = "<span class="title">recommend_web</span>"</span></span><br><span class="line"><span class="class">&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">data</span> "ucloud_images" "default" &#123;</span></span><br><span class="line"><span class="class">  <span class="title">provider</span>          = <span class="title">ucloud</span>.<span class="title">ucloudsh</span></span></span><br><span class="line"><span class="class">  <span class="title">availability_zone</span> = "<span class="title">cn</span>-<span class="title">sh2</span>-01"</span></span><br><span class="line"><span class="class">  <span class="title">name_regex</span>        = "^<span class="type">CentOS</span> 6.5 64"</span></span><br><span class="line"><span class="class">  <span class="title">image_type</span>        = "<span class="title">base</span>"</span></span><br><span class="line"><span class="class">&#125;</span></span><br></pre></td></tr></table></figure><p>这里的<code>required_providers</code>中只声明了一次<code>ucloud</code>，并且在data中指定provider时传入的是<code>ucloud.ucloudsh</code>。多实例Provider请使用别名。</p><h1 id="Terraform-代码编程"><a href="#Terraform-代码编程" class="headerlink" title="Terraform 代码编程"></a>Terraform 代码编程</h1><h2 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h2><p>原始类型分三类：string、number、bool。</p><ul><li>string代表一组Unicode字符串，例如：<code>&quot;hello&quot;</code>。</li><li>number代表数字，可以为整数，也可以为小数。</li><li>bool代表布尔值，要么为<code>true</code>，要么为<code>false</code>。bool值可以被用做逻辑判断。</li></ul><p><strong>数据格式转换</strong></p><p>隐式转换</p><p>number和bool都可以和string进行隐式转换，当我们把number或bool类型的值赋给string类型的值，或是反过来时，Terraform会自动替我们转换类型。</p><h2 id="基础语法"><a href="#基础语法" class="headerlink" title="基础语法"></a><strong>基础语法</strong></h2><h3 id="Count—循环结构"><a href="#Count—循环结构" class="headerlink" title="Count—循环结构"></a>Count—循环结构</h3><p><strong>定义count</strong></p><p><code>count</code>参数可以是任意自然数，Terraform会创建<code>count</code>个资源实例，每一个实例都对应了一个独立的基础设施对象，并且在执行Terraform代码时，这些对象是被分别创建、更新或者销毁的：</p><figure class="highlight haskell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="title">resource</span> <span class="string">"aws_instance"</span> <span class="string">"server"</span> &#123;</span><br><span class="line">  count = <span class="number">4</span> # create four similar <span class="type">EC2</span> instances</span><br><span class="line"></span><br><span class="line">  ami           = <span class="string">"ami-a1b2c3d4"</span></span><br><span class="line">  instance_type = <span class="string">"t2.micro"</span></span><br><span class="line"></span><br><span class="line">  tags = &#123;</span><br><span class="line">    <span class="type">Name</span> = <span class="string">"Server $&#123;count.index&#125;"</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在Resource块中的表达式里使用count对象来获取当前的count索引号，count对象只有一个属性<code>count.index</code>，代表当前对象对应的<code>count</code>下标索引(从0开始)。</p><p><strong>访问count</strong></p><p>如果一个Resource块定义了count参数，那么Terraform会把这种多资源实例对象与没有count参数的单资源实例对象区别开。</p><ul><li>访问单资源实例对象：<code>&lt;TYPE&gt;.&lt;NAME&gt;</code>(例如：<code>aws_instance.server</code>)</li><li>访问多资源实例对象：<code>&lt;TYPE&gt;.&lt;NAME&gt;[&lt;INDEX&gt;]</code> (例如：<code>aws_instance.server[0]</code>，<code>aws_instance.server[1]</code>)</li></ul><h3 id="for-each—循环结构"><a href="#for-each—循环结构" class="headerlink" title="for_each—循环结构"></a>for_each—循环结构</h3><p>for each的参数可以是一个map或者set，Terraform会为集合中的每一个元素都创建一个独立的资源对象。</p><p><strong>使用map</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">resource &quot;azurerm_resource_group&quot; &quot;rg&quot; &#123;</span><br><span class="line">  for_each &#x3D; &#123;</span><br><span class="line">    a_group &#x3D; &quot;eastus&quot;</span><br><span class="line">    another_group &#x3D; &quot;westus2&quot;</span><br><span class="line">  &#125;</span><br><span class="line">  name     &#x3D; each.key</span><br><span class="line">  location &#x3D; each.value</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>使用set(string)</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">resource &quot;aws_iam_user&quot; &quot;the-accounts&quot; &#123;</span><br><span class="line">  for_each &#x3D; toset( [&quot;Todd&quot;, &quot;James&quot;, &quot;Alice&quot;, &quot;Dottie&quot;] )</span><br><span class="line">  name     &#x3D; each.key</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以在声明了<code>for_each</code>参数的resource块内使用<code>each</code>对象来访问当前的迭代器对象：</p><ul><li><code>each.key</code>：map的键，或是set中的值</li><li><code>each.value</code>：map的值，或是set中的值</li></ul><p><strong>访问属性</strong></p><p>当一个resource声明了for_each时，Terraform会把这种多资源实例对象与没有count参数的单资源实例对象区别开：</p><ul><li>访问单资源实例对象：<code>&lt;TYPE&gt;.&lt;NAME&gt;</code>(例如：<code>aws_instance.server</code>)</li><li>访问多资源实例对象：<code>&lt;TYPE&gt;.&lt;NAME&gt;[&lt;KE&gt;]</code> (例如：<code>aws_instance.server[&quot;ap-northeast-1&quot;]</code>，<code>aws_instance.server[&quot;ap-northeast-2&quot;]</code>)</li></ul><h2 id="数据结构"><a href="#数据结构" class="headerlink" title="数据结构"></a>数据结构</h2><p>Terraform支持三种数据结构：列表、映射类型、集合类型；</p><p><strong>list</strong>：列表是一组值的连续集合，可以用下标访问内部元素，下标从0开始。例如名为l的list，l[0]就是第一个元素。list类型的声明可以是list(number)、list(string)、list(bool)等，括号中的类型即为元素类型。</p><p><strong>map</strong>:字典类型(或者叫映射类型)，代表一组键唯一的键值对，键类型必须是string，值类型任意。map(number)代表键为string类型而值为number类型，其余类推。map值有两种声明方式，一种是类似<code>{&quot;foo&quot;: &quot;bar&quot;, &quot;bar&quot;: &quot;baz&quot;}</code>，另一种是<code>{foo=&quot;bar&quot;, bar=&quot;baz&quot;}</code>。键可以不用双引号，但如果键是以数字开头则例外。多对键值对之间要用逗号分隔，也可以用换行符分隔。推荐使用=号(Terraform代码规范中规定按等号对齐，使用等号会使得代码在格式化后更加美观)</p><p><strong>set</strong>:集合类型，代表一组不重复的值。</p><h2 id="配置语法"><a href="#配置语法" class="headerlink" title="配置语法"></a><strong>配置语法</strong></h2><p><strong>参数</strong></p><p>参数赋值就是将一个值赋给一个特定的名称：</p><figure class="highlight haskell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title">image_id</span> = <span class="string">"abc123"</span></span><br></pre></td></tr></table></figure><p>等号前的标识符就是参数名，等号后的表达式就是参数值。参数赋值时Terraform会检查类型是否匹配。参数名是确定的，参数值可以是确定的字面量硬编码，也可以是一组表达式，用以通过其他的值加以计算得出结果值。</p><p><strong>块(Block)</strong></p><p>一个块是包含一组其他参数的容器，例如：</p><figure class="highlight haskell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="title">resource</span> <span class="string">"aws_instance"</span> <span class="string">"example"</span> &#123;</span><br><span class="line">  ami = <span class="string">"abc123"</span></span><br><span class="line"></span><br><span class="line">  network_interface &#123;</span><br><span class="line">    # ...</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>块由块类型、块标签和块主体构成，上面例子中的</p><ul><li>块类型：resource</li><li>块标签：aws_instance</li><li>块主题：example</li></ul><p><strong>注释</strong></p><p>Terraform支持三种注释：</p><ul><li><code>#</code> 单行注释，其后的内容为注释</li><li><code>//</code> 单行注释，其后的内容为注释</li><li><code>/*</code> 和 <code>*/</code>，多行注释，可以注释多行</li></ul><p>默认情况下单行注释优先使用#。自动化格式整理工具会自动把//替换成#。</p><h2 id="输入变量"><a href="#输入变量" class="headerlink" title="输入变量"></a>输入变量</h2><p>如果我们把一组Terraform代码想像成一个函数，那么输入变量就是函数的入参。输入变量用<code>variable</code>块进行定义：</p><figure class="highlight haskell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="title">variable</span> <span class="string">"image_id"</span> &#123;</span><br><span class="line">  <span class="class"><span class="keyword">type</span> = string</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title">variable</span> <span class="string">"availability_zone_names"</span> &#123;</span><br><span class="line">  <span class="class"><span class="keyword">type</span>    = list(<span class="title">string</span>)</span></span><br><span class="line">  <span class="keyword">default</span> = ["us-west-1a"]</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title">variable</span> <span class="string">"docker_ports"</span> &#123;</span><br><span class="line">  <span class="class"><span class="keyword">type</span> = list(<span class="title">object</span>(&#123;</span></span><br><span class="line"><span class="class">    <span class="title">internal</span> = <span class="title">number</span></span></span><br><span class="line"><span class="class">    <span class="title">external</span> = <span class="title">number</span></span></span><br><span class="line"><span class="class">    <span class="title">protocol</span> = <span class="title">string</span></span></span><br><span class="line"><span class="class">  &#125;))</span></span><br><span class="line">  <span class="keyword">default</span> = [</span><br><span class="line">    &#123;</span><br><span class="line">      internal = <span class="number">8300</span></span><br><span class="line">      external = <span class="number">8300</span></span><br><span class="line">      protocol = <span class="string">"tcp"</span></span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在同一个Terraform模块中的变量名必须是唯一的，可以在代码中通过<code>var.&lt;Name&gt;</code>来进行引用。输入变量只能在声明该变量的目录下的代码中使用，输入变量块中可以定义一些属性。</p><p><strong>类型</strong></p><p>可以在输入变量块中通过<code>type</code>定义类型，例如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">variable &quot;name&quot; &#123;</span><br><span class="line">    type &#x3D; string</span><br><span class="line">&#125;</span><br><span class="line">variable &quot;ports&quot; &#123;</span><br><span class="line">    type &#x3D; list(number)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>定义了类型的输入变量只能被赋予符合类型约束的值。</p><p><strong>默认值</strong></p><p>默认值定义了当Terraform无法获得一个输入变量得到值的时候会使用的默认值。例如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">variable &quot;name&quot; &#123;</span><br><span class="line">    type    &#x3D; string</span><br><span class="line">    default &#x3D; &quot;John Doe&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当Terraform无法通过其他途径获得name的值时，<code>var.name</code>的值为<code>&quot;John Doe&quot;</code></p><p><strong>描述</strong></p><p>可以在输入变量中定义一个描述，简单地向调用者描述该变量的意义和用法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">variable &quot;image_id&quot; &#123;</span><br><span class="line">  type        &#x3D; string</span><br><span class="line">  description &#x3D; &quot;The id of the machine image (AMI) to use for the server.&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果在执行<code>terraform plan</code>或是<code>terraform apply</code>时Terraform不知道某个输入变量的值，Terraform会在命令行界面上提示我们为输入变量设置一个值。例如上面的输入变量代码，执行<code>terraform apply</code>时：</p><p><strong>断言</strong></p><p>通过断言来约束输入输入变量是否符合规范。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">variable &quot;image_id&quot; &#123;</span><br><span class="line">  type        &#x3D; string</span><br><span class="line">  description &#x3D; &quot;The id of the machine image (AMI) to use for the server.&quot;</span><br><span class="line"></span><br><span class="line">  validation &#123;</span><br><span class="line">    condition     &#x3D; length(var.image_id) &gt; 4 &amp;&amp; substr(var.image_id, 0, 4) &#x3D;&#x3D; &quot;ami-&quot;</span><br><span class="line">    error_message &#x3D; &quot;The image_id value must be a valid AMI id, starting with \&quot;ami-\&quot;.&quot;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Condition参数是一个bool类型的参数，我们可以用一个表达式来定义如何界定输入变量是合法的。当contidion为true时输入变量合法，反之不合法。condition表达式中只能通过var.\引用当前定义的变量，并且它的计算不能产生错误。</p><h3 id="对输入变量赋值"><a href="#对输入变量赋值" class="headerlink" title="对输入变量赋值"></a><strong>对输入变量赋值</strong></h3><p><strong>命令行参数</strong></p><p>对输入变量赋值有几种途径，一种是在调用terraform plan或是terraform apply命令时以参数的形式传入：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ terraform apply -var=<span class="string">"image_id=ami-abc123"</span></span><br><span class="line">$ terraform apply -var=<span class="string">'image_id_list=["ami-abc123","ami-def456"]'</span></span><br><span class="line">$ terraform plan -var=<span class="string">'image_id_map=&#123;"us-east-1":"ami-abc123","us-east-2":"ami-def456"&#125;'</span></span><br></pre></td></tr></table></figure><p>可以在一条命令中使用多个<code>-var</code>参数。</p><p><strong>参数文件</strong></p><p>第二种方法是使用参数文件。参数文件的后缀名可以是<code>.tfvars</code>或是<code>.tfvars.json</code>。<code>.tfvars</code>文件使用HCL语法，<code>.tfvars.json</code>使用JSON语法。</p><p>以<code>.tfvars</code>为例，参数文件中用HCL代码对需要赋值的参数进行赋值，例如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">image_id &#x3D; &quot;ami-abc123&quot;</span><br><span class="line">availability_zone_names &#x3D; [</span><br><span class="line">  &quot;us-east-1a&quot;,</span><br><span class="line">  &quot;us-west-1c&quot;,</span><br><span class="line">]</span><br></pre></td></tr></table></figure><p>后缀名为<code>.tfvars.json</code>的文件用一个JSON对象来对输入变量赋值，例如：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"image_id"</span>: <span class="string">"ami-abc123"</span>,</span><br><span class="line">  <span class="attr">"availability_zone_names"</span>: [<span class="string">"us-west-1a"</span>, <span class="string">"us-west-1c"</span>]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>调用terraform命令时，通过<code>-var-file</code>参数指定要用的参数文件，例如：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">terraform apply -var-file=<span class="string">"testing.tfvars"</span></span><br></pre></td></tr></table></figure><p><strong>交互界面传值</strong></p><p>在前面介绍断言的例子中我们看到过，当我们从命令行界面执行terraform操作，Terraform无法通过其他途径获取一个输入变量的值，而该变量也没有定义默认值时，Terraform会进行最后的尝试，在交互界面上要求我们给出变量值.</p><p><strong>输入变量赋值优先级</strong></p><p>当上述的赋值方式同时存在时，同一个变量可能会被赋值多次。Terraform会使用新值覆盖旧值。</p><p>Terraform加载变量值的顺序是：</p><ol><li>环境变量</li><li><code>terraform.tfvars</code>文件(如果存在的话)</li><li><code>terraform.tfvars.json</code>文件(如果存在的话)</li><li>所有的<code>.auto.tfvars</code>或者<code>.auto.tfvars.json</code>文件，以字母顺序排序处理</li><li>通过<code>-var</code>或是<code>-var-file</code>命令行参数传递的输入变量，按照在命令行参数中定义的顺序加载</li></ol><p>假如以上方式均未能成功对变量赋值，那么Terraform会尝试使用默认值；对于没有定义默认值的变量，Terraform会采用交互界面方式要求用户输入一个。对于某些Terraform命令，如果执行时带有<code>-input=false</code>参数禁用了交互界面传值方式，那么就会报错。</p><h2 id="输出变量"><a href="#输出变量" class="headerlink" title="输出变量"></a>输出变量</h2><p><strong>输出值的声明</strong></p><p>输出值的声明使用输出块，例如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">output &quot;instance_ip_addr&quot; &#123;</span><br><span class="line">  value &#x3D; aws_instance.server.private_ip</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>output</code>关键字后紧跟的就是输出值的名称。在当前模块内的所有输出值的名字都必须是唯一的。<code>output</code>块内的<code>value</code>参数即为输出值，它可以像是上面的例子里那样某个resource的输出属性，也可以是任意合法的表达式。</p><p>输出值只有在执行<code>terraform apply</code>后才会被计算，光是使用<code>terraform plan</code>并不会计算输出值。</p><p>Terraform代码中无法引用本目录下定义的输出值。</p><p><strong>description</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">output &quot;instance_ip_addr&quot; &#123;</span><br><span class="line">  value       &#x3D; aws_instance.server.private_ip</span><br><span class="line">  description &#x3D; &quot;The private IP address of the main server instance.&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>与输入变量的<code>description</code>类似，我们不再赘述。</p><p><strong>depends_on</strong></p><p>在同一个 Terraform 配置文件中可以包含多个资源。通过在资源中引用其他资源的属 性值，Terraform可以自动推断出资源的依赖关系。然而，某些资源的依赖关系对于 Terraform是不可见的，这就需要使用 depends_on 来创建显式依赖。我们可以使用 depends_on 来更改资源的创建顺序或执行顺序，使其在所依赖资源之后处理。 depends_on 的表达式是依赖资源的地址列表。</p><p>例如我们在远程操作一台ECS服务器之 前，需要为其绑定EIP或配置NAT规则。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">output &quot;instance_ip_addr&quot; &#123;</span><br><span class="line">  value       &#x3D; aws_instance.server.private_ip</span><br><span class="line">  description &#x3D; &quot;The private IP address of the main server instance.&quot;</span><br><span class="line"></span><br><span class="line">  depends_on &#x3D; [</span><br><span class="line">    # Security group rule must be created before this IP address could</span><br><span class="line">    # actually be used, otherwise the services will be unreachable.</span><br><span class="line">    aws_security_group_rule.local_access,</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="局部值"><a href="#局部值" class="headerlink" title="局部值"></a><strong>局部值</strong></h2><p>todo</p><h2 id="关键字"><a href="#关键字" class="headerlink" title="关键字"></a>关键字</h2><p><strong>Resources</strong></p><p><strong>variable</strong></p><p><strong>data</strong></p><p><strong>output</strong></p><h2 id="资源"><a href="#资源" class="headerlink" title="资源"></a>资源</h2><p>资源是Terraform最重要的组成部分，而本节亦是本教程最重要的一节。资源通过resource块来定义，一个resource可以定义一个或多个基础设施资源对象，例如VPC、虚拟机，或是DNS记录、Consul的键值对数据等。</p><p>一个Resource代表了想要创建的基础设施建设。每当Terraform按照一个resource块创建了一个新的基础设施对象，这个实际的对象的id会被保存进Terraform状态中，使得将来Terraform可以根据变更计划对它进行更新或是销毁操作。</p><h3 id="访问资源输出属性"><a href="#访问资源输出属性" class="headerlink" title="访问资源输出属性"></a>访问资源输出属性</h3><p>在表达式中引用资源属性的语法是<code>&lt;RESOURCE TYPE&gt;.&lt;NAME&gt;.&lt;ATTRIBUTE&gt;</code>。</p><h3 id="资源的依赖关系"><a href="#资源的依赖关系" class="headerlink" title="资源的依赖关系"></a>资源的依赖关系</h3><p>正常情况下，Terraform定义的Resource之间不会有特定的依赖关系。大部分资源间的依赖关系可以被Terraform自动处理，Terraform会分析resource块内的表达式，根据表达式的引用链来确定资源之间的引用，进而计算出资源在创建、更新、销毁时的执行顺序。大部分情况下，我们不需要显式指定资源之间的依赖关系。</p><p>但是，创建某些资源所需的信息依赖于另外一个资源创建之后的输出属性。这种情况下，我们需要用<code>depends_on</code>来显式声明这种依赖关系。</p><h3 id="元参数"><a href="#元参数" class="headerlink" title="元参数"></a>元参数</h3><p>resource块支持几种元参数声明，这些元参数可以被声明在所有类型的resource块内，它们将会改变资源的行为：</p><ul><li>depends_on：显式声明依赖关系</li><li>count：创建多个资源实例</li><li>for_each：迭代集合，为集合中每一个元素创建一个对应的资源实例</li><li>provider：指定非默认Provider实例</li><li>lifecycle：自定义资源的生命周期行为</li><li>provisioner 和 connection：在资源创建后执行一些额外的操作</li></ul><h2 id="数据data"><a href="#数据data" class="headerlink" title="数据data"></a><strong>数据data</strong></h2><p>todo</p><h2 id="表达式"><a href="#表达式" class="headerlink" title="表达式"></a>表达式</h2><p>todo</p><h2 id="重载文件"><a href="#重载文件" class="headerlink" title="重载文件"></a>重载文件</h2><p>todo</p><h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><p><a href="https://lonegunmanb.github.io/introduction-terraform/1.Terraform%E5%88%9D%E6%AD%A5%E4%BD%93%E9%AA%8C.html" target="_blank" rel="noopener">https://lonegunmanb.github.io/introduction-terraform/1.Terraform%E5%88%9D%E6%AD%A5%E4%BD%93%E9%AA%8C.html</a></p>]]></content>
    
    <summary type="html">
    
      
      
        
        
          &lt;h1 id=&quot;说明&quot;&gt;&lt;a href=&quot;#说明&quot;
        
      
    
    </summary>
    
    
      <category term="Terraform" scheme="http://yoursite.com/categories/Terraform/"/>
    
    
      <category term="Cloud" scheme="http://yoursite.com/tags/Cloud/"/>
    
  </entry>
  
  <entry>
    <title>LandingZone设计规范</title>
    <link href="http://yoursite.com/2021/12/01/LandingZoneDesign/"/>
    <id>http://yoursite.com/2021/12/01/LandingZoneDesign/</id>
    <published>2021-12-01T16:00:00.000Z</published>
    <updated>2021-12-01T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="8bd8a3a65a7dbebf0cce0e8a17d40e750998b3d7a75c5104caf3ea5ffcf34798"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      Here&#39;s something encrypted, password is required to continue reading.
    
    </summary>
    
    
      <category term="HTTPS" scheme="http://yoursite.com/categories/HTTPS/"/>
    
    
      <category term="安全" scheme="http://yoursite.com/tags/%E5%AE%89%E5%85%A8/"/>
    
  </entry>
  
  <entry>
    <title>日志组导出S3</title>
    <link href="http://yoursite.com/2021/12/01/LogsExportToS3/"/>
    <id>http://yoursite.com/2021/12/01/LogsExportToS3/</id>
    <published>2021-12-01T16:00:00.000Z</published>
    <updated>2021-12-01T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="30b72d7f509247c0cb4bc57437c6c9493fc40a3700a9b46f9209a150006fa959"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      Here&#39;s something encrypted, password is required to continue reading.
    
    </summary>
    
    
      <category term="AWS" scheme="http://yoursite.com/categories/AWS/"/>
    
    
      <category term="aws" scheme="http://yoursite.com/tags/aws/"/>
    
      <category term="log" scheme="http://yoursite.com/tags/log/"/>
    
  </entry>
  
  <entry>
    <title>https协议抓包</title>
    <link href="http://yoursite.com/2021/11/30/HTTPSLearn/"/>
    <id>http://yoursite.com/2021/11/30/HTTPSLearn/</id>
    <published>2021-11-30T16:00:00.000Z</published>
    <updated>2021-11-30T16:00:00.000Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
      <category term="HTTPS" scheme="http://yoursite.com/categories/HTTPS/"/>
    
    
      <category term="安全" scheme="http://yoursite.com/tags/%E5%AE%89%E5%85%A8/"/>
    
  </entry>
  
  <entry>
    <title>Hexo 静态博客增加密码</title>
    <link href="http://yoursite.com/2021/11/23/AddArticlePassword/"/>
    <id>http://yoursite.com/2021/11/23/AddArticlePassword/</id>
    <published>2021-11-23T16:00:00.000Z</published>
    <updated>2021-11-23T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>在《使用Github_action实现本地无需安装hexo》这篇博客中，讲述了如何利用Action做博客部署自动化。这里来讲述如何利用Action来进行博客的加密。一般情况下，如果想要对hexo博客进行加密需要以下步骤：</p><ul><li>电脑安装加密插件；</li><li>博客编写，设置密码</li><li>对博客进行重新渲染；</li><li>对博客进行部署</li></ul><p>整个过程如这篇文章所示：<a href="https://zhuanlan.zhihu.com/p/113235573" target="_blank" rel="noopener">https://zhuanlan.zhihu.com/p/113235573</a></p><p>利用github action进行操作，只需要进行2步骤</p><ul><li>对<strong>package.json</strong>文件进行修改</li><li>博客编写，设置密码</li><li>push博客</li></ul><p>下面进行操作</p><p><strong>对package.json文件进行修改</strong></p><p>增加<strong>“hexo-blog-encrypt”: “^3.1.6”</strong></p><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20211125111712962.png" alt="image-20211125111712962"></p><p><strong>博客编写，设置密码</strong></p><p>修改文章信息头如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">title: Hello World</span><br><span class="line">password: muyiio</span><br></pre></td></tr></table></figure><p><strong>push博客</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git add .</span><br><span class="line">git commit -m &quot;fix&quot;</span><br><span class="line">git push</span><br></pre></td></tr></table></figure><p><strong>实现效果</strong></p><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20211125111911654.png" alt="image-20211125111911654"></p><p><strong>参考文章</strong></p><p><a href="https://zhuanlan.zhihu.com/p/113235573" target="_blank" rel="noopener">https://zhuanlan.zhihu.com/p/113235573</a></p><p><strong>项目地址</strong></p><p><a href="https://github.com/D0n9X1n/hexo-blog-encrypt" target="_blank" rel="noopener">https://github.com/D0n9X1n/hexo-blog-encrypt</a></p>]]></content>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;在《使用Github_action实现本地无需安装hexo
        
      
    
    </summary>
    
    
      <category term="Hexo" scheme="http://yoursite.com/categories/Hexo/"/>
    
    
      <category term="博客" scheme="http://yoursite.com/tags/%E5%8D%9A%E5%AE%A2/"/>
    
      <category term="安全" scheme="http://yoursite.com/tags/%E5%AE%89%E5%85%A8/"/>
    
  </entry>
  
  <entry>
    <title>试用jemdoc</title>
    <link href="http://yoursite.com/2021/11/19/UsingJemdocToGenfile/"/>
    <id>http://yoursite.com/2021/11/19/UsingJemdocToGenfile/</id>
    <published>2021-11-19T16:00:00.000Z</published>
    <updated>2021-11-23T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>jemdoc是什么？</p><p>jemdoc是一种用于创建网站的基于文本的轻量标记语言。它需要一个用jemdoc标记编写的文本文件，一个可选的配置文件和一个可选的菜单文件。（类似markdown）jemdoc的灵感来自于AsciiDoc，这是一个文本文件格式。AsciiDoc很棒，AsciiDoc的许多想法都复制到了jemdoc中。主要区别在于jemdoc更简单（您可以说故意功能较差）并且语法更加一致。同事jemdoc的网页严峻简洁风格也表明其非常适合充当学术简历。</p></blockquote><h1 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h1><p><strong>jemdoc</strong>使用的是<strong>python2</strong>环境，而不能是<strong>python3</strong>.如果没有安装<strong>python2</strong> 可以使用虚拟环境安装<strong>python2</strong>.如果电脑中安装了<strong>python3</strong>，那么可以用虚拟环境来安装<strong>python2</strong>.</p><h2 id="前置准备"><a href="#前置准备" class="headerlink" title="前置准备"></a>前置准备</h2><p><strong>安装virtualenv</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install virtualenv</span><br></pre></td></tr></table></figure><h2 id="创建虚拟环境"><a href="#创建虚拟环境" class="headerlink" title="创建虚拟环境"></a>创建虚拟环境</h2><p><strong>创建文件夹</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir website &amp;&amp; cd website</span><br></pre></td></tr></table></figure><p><strong>创建虚拟环境</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">virtualenv venv --python&#x3D;python2.5</span><br></pre></td></tr></table></figure><h2 id="激活虚拟环境"><a href="#激活虚拟环境" class="headerlink" title="激活虚拟环境"></a>激活虚拟环境</h2><p><strong>windows 环境</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">venv\Scripts\activate</span><br></pre></td></tr></table></figure><p><strong>Linux/macOS</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">. venv&#x2F;bin&#x2F;activate</span><br></pre></td></tr></table></figure><p><strong>激活结果</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(venv) \&gt;</span><br></pre></td></tr></table></figure><p>前面就有<strong>(venv)</strong> 这个了。</p><h1 id="QuickStart"><a href="#QuickStart" class="headerlink" title="QuickStart"></a>QuickStart</h1><p><strong>环境准备</strong></p><p>去<a href="http://jemdoc.jaboc.net/download.html" target="_blank" rel="noopener">jemdoc官网</a>下载jemdoc.py。对的，你没看错，就只要一个.py代码文件就行了。不过建议顺带下载使用官方的<a href="http://jemdoc.jaboc.net/dist/jemdoc.css" target="_blank" rel="noopener">示例CSS文件:jemdoc.css</a>。</p><p>下载完毕之后，如下图所示：</p><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20211120022626280.png" alt="image-20211120022626280"></p><p>新建example.jemdoc文件,(建议和jemdoc.py同级目录，比较好写命令)在example.jemdoc文件中可以尝试复制下官方的example的内容:</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">[https://jemnz.com/ Jacob Mattingley] ([www@jemnz.com])</span><br><span class="line"></span><br><span class="line">If the first line of the file starts with +\# jemdoc+, special functions like [menu.html menus] will be used.</span><br><span class="line"></span><br><span class="line">== Example</span><br><span class="line">Here are some <span class="emphasis">*text*</span> /features/. I could [http://cvxmod.net/ link somewhere] or insert a raw link to another page like [download.html]. I could use +monospace+, too.</span><br><span class="line"></span><br><span class="line">I could write special characters like \#, \$ and \+ by just using a backslash (\\) in front of those characters. Or automatically detect an [www@jemnz.com email address].</span><br><span class="line"></span><br><span class="line">~~~</span><br><span class="line">Save the file as +index.jemdoc+, say, and simply call +jemdoc index+ (after [download.html downloading jemdoc], of course).</span><br><span class="line">~~~</span><br><span class="line"></span><br><span class="line">== Next bit, next heading level two</span><br><span class="line">=== Getting into level three now</span><br><span class="line"></span><br><span class="line">Why not use a list</span><br><span class="line"><span class="bullet">- </span>to explain the way you do lists?</span><br><span class="line"><span class="bullet">- </span>to demonstrate how a line\n break might work?</span><br><span class="line"></span><br><span class="line">Or perhaps a</span><br><span class="line">. Multilevel</span><br><span class="line">  .. Numbered list</span><br><span class="line">  .. Is more</span><br><span class="line">. Useful?</span><br><span class="line"></span><br><span class="line">: &#123;Definition&#125; lists, especially when there are many definitions</span><br><span class="line">: &#123;Can be useful&#125; for explaining things</span><br><span class="line"></span><br><span class="line">== Finally, a few more blocks</span><br><span class="line">This `section' features "smart quotes".</span><br><span class="line"></span><br><span class="line">~~~</span><br><span class="line">&#123;Simple block&#125;</span><br><span class="line">This is a simple text block, with a title. Notice how the previous line has only one set of braces (\&#123;\&#125;).</span><br><span class="line">~~~</span><br><span class="line"></span><br><span class="line">~~~</span><br><span class="line">&#123;Interactive Python listing&#125;&#123;pyint&#125;</span><br><span class="line">&gt;&gt;&gt; print 'Interactive Python code.'</span><br><span class="line">'Interactive Python code.'</span><br><span class="line">~~~</span><br><span class="line"></span><br><span class="line">~~~</span><br><span class="line">&#123;&#125;&#123;&#125;</span><br><span class="line">Plain code block with no title.</span><br><span class="line">~~~</span><br><span class="line"></span><br><span class="line">You might need 2--3 different-sized dashes---they can be useful. Now we're done!</span><br></pre></td></tr></table></figure><p><strong>生成网页</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python jemdoc.py example.jemdoc</span><br></pre></td></tr></table></figure><p>然后就会在目录下生成index.html文件，打开页面如下：</p><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20211120023012306.png" alt="image-20211120023012306"></p><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20211120023055071.png" alt="image-20211120023055071"></p><h1 id="Jemdoc语法"><a href="#Jemdoc语法" class="headerlink" title="Jemdoc语法"></a>Jemdoc语法</h1><p>可以结合官方文档和本篇教程一起学习，官方文档：<a href="http://jemdoc.jaboc.net/cheatsheet.html" target="_blank" rel="noopener">http://jemdoc.jaboc.net/cheatsheet.html</a></p><p>新建cheatsheet.jemdoc，在里面使用教程上的语法</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;斜字体&#x2F;</span><br><span class="line"></span><br><span class="line">*加粗*</span><br><span class="line"></span><br><span class="line">+等宽（li和cs等宽）+</span><br><span class="line"></span><br><span class="line">+等宽（cs和li等宽）+</span><br><span class="line"></span><br><span class="line">不等宽（li占的比cs小哦）</span><br><span class="line"></span><br><span class="line">不等宽（cs占的比li大哦）</span><br><span class="line"></span><br><span class="line">连字符-连字符</span><br><span class="line"></span><br><span class="line">破折号1--破折号1</span><br><span class="line"></span><br><span class="line">破折号2---破折号2</span><br><span class="line"></span><br><span class="line">省略号...省略号</span><br><span class="line"></span><br><span class="line">不间断空格~不间断空格(最重要的作用就是换行时不被打断)</span><br><span class="line"></span><br><span class="line"># 注释？？</span><br><span class="line"></span><br><span class="line">\C is ©</span><br><span class="line"></span><br><span class="line">\R is ®</span><br><span class="line"></span><br><span class="line">\M is · </span><br><span class="line"></span><br><span class="line">“单引号文字”写为“单引号文字”</span><br><span class="line"></span><br><span class="line">“双引号文字”写为“双引号文字”</span><br><span class="line"></span><br><span class="line">jemdoc&#39;s的撇号jemdoc&#39;s的输入自动转换</span><br><span class="line"></span><br><span class="line">\n 强制手动换行</span><br><span class="line"></span><br><span class="line">段落由空白行分隔（即空一行才可以另起一段）下面这句话</span><br><span class="line">（我是第二行了的）是会在同一行&#x2F;段的哦</span><br><span class="line"></span><br><span class="line">LaTeX方程(暂不能用哦)</span><br><span class="line"></span><br><span class="line">#s (and only #s) must be quoted in URLs</span><br><span class="line"></span><br><span class="line">&#x3D; 标题一</span><br><span class="line">&#x3D;&#x3D; 标题二</span><br><span class="line">&#x3D;&#x3D;&#x3D; 标题三</span><br><span class="line">&#x3D;&#x3D;&#x3D;&#x3D; 标题四</span><br><span class="line"></span><br><span class="line">[https:&#x2F;&#x2F;www.hojun.cn&#x2F; 这是超链接写法] </span><br><span class="line"></span><br><span class="line">邮箱哦：([hojun@qq.com])</span><br><span class="line"></span><br><span class="line">这个会跳转到当前目录的[other.html]，和超链接类似。</span><br><span class="line"></span><br><span class="line">这是无序列表:</span><br><span class="line"></span><br><span class="line">- 无序列表</span><br><span class="line">  -- 二级无序列表</span><br><span class="line">      --- 三级无序列表</span><br><span class="line">- 无序列表</span><br><span class="line"></span><br><span class="line">这是有序列表:</span><br><span class="line"></span><br><span class="line">. level1</span><br><span class="line">  .. level2</span><br><span class="line">    ... level3</span><br><span class="line">. level1</span><br><span class="line"></span><br><span class="line">:&#123;定义解释块&#125;balabala,这里解释，比如下面例子</span><br><span class="line"></span><br><span class="line">:&#123;233&#125;233是一个网络用语，大致意思就是啊哈哈，非常好笑的意思。233来源于猫扑表情第233号，是一张捶地大笑的表情，因此不少网友就喜爱在贴吧和论坛发帖的时候加上一句233，用来表示哈哈大笑的意思。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">~~~</span><br><span class="line">&#123;简单块，这里是标题&#125;</span><br><span class="line">This is a simple text block, with a title. Notice how the previous line has only one set of braces (\&#123;\&#125;).</span><br><span class="line">~~~</span><br><span class="line"></span><br><span class="line">~~~</span><br><span class="line">&#123;这个是代码块标题，后面那个是代码高亮，好像仅支持py&#125;&#123;python&#125;</span><br><span class="line">def putbsbs(l):</span><br><span class="line">  for i in range(len(l)):</span><br><span class="line">    l[i] &#x3D; &#39;\\b&#39; + l[i] + &#39;\\b&#39;</span><br><span class="line"></span><br><span class="line">  return l</span><br><span class="line">~~~</span><br><span class="line"></span><br><span class="line">~~~</span><br><span class="line">&#123;&#125;&#123;&#125;</span><br><span class="line">啥都不写就是不要标题~</span><br><span class="line">~~~</span><br><span class="line"></span><br><span class="line">&#123;&#123;&lt;h2&gt;&#125;&#125;这是用inline html escaping包裹的h2，语法结束记的要换行，不然有bug&#123;&#123;&lt;&#x2F;h2&gt;&#125;&#125;</span><br><span class="line"></span><br><span class="line">~~~</span><br><span class="line">&#123;&#125;&#123;raw&#125;</span><br><span class="line">要写html代码记的用raw，而不是楼上的：</span><br><span class="line">&lt;form&gt;</span><br><span class="line">First name: &lt;input type&#x3D;&quot;text&quot; name&#x3D;&quot;firstname&quot;&gt;&lt;br&gt;</span><br><span class="line">Last name: &lt;input type&#x3D;&quot;text&quot; name&#x3D;&quot;lastname&quot;&gt;</span><br><span class="line">&lt;&#x2F;form&gt;</span><br><span class="line">~~~</span><br><span class="line"></span><br><span class="line">#include&#123;include.jemdoc&#125;</span><br><span class="line"></span><br><span class="line">#includeraw&#123;include.html&#125;</span><br><span class="line"></span><br><span class="line">~~~</span><br><span class="line">&#123;&#125;&#123;img_left&#125;&#123;https:&#x2F;&#x2F;jemnz.com&#x2F;jacobm2.png&#125;&#123;Jacob Mattingley&#125;&#123;120px&#125;&#123;160px&#125;&#123;https:&#x2F;&#x2F;www.baidu.com&#125;</span><br><span class="line">加图片</span><br><span class="line">&#123;&#125;&#123;img_left&#125;&#123;图片url&#125;&#123;描述图像&#125;&#123;宽&#125;&#123;高&#125;&#123;点击图片跳转的链接&#125;</span><br><span class="line"> (后面三个参数可以省略)</span><br><span class="line">&#123;&#125;&#123;img_left&#125;&#123;图片url&#125;&#123;描述图像&#125;</span><br><span class="line">~~~</span><br></pre></td></tr></table></figure><h1 id="高级用法"><a href="#高级用法" class="headerlink" title="高级用法"></a>高级用法</h1><h2 id="添加菜单"><a href="#添加菜单" class="headerlink" title="添加菜单"></a>添加菜单</h2><p>jemdoc只适用于做页面？NONONO，jemdoc的官网就是运用添加菜单功能实现的。<br>首先，你在新建一个菜单文件MENU，内容如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">jemdoc学习</span><br><span class="line">    home                [index.html]</span><br><span class="line">    cheatsheet          [cheatsheet.html]</span><br><span class="line">    example             [example.html]</span><br><span class="line"></span><br><span class="line">jemdoc学习二</span><br><span class="line">    testgbk             [testgbk.html]</span><br><span class="line">    include             [include.html]</span><br></pre></td></tr></table></figure><p>然后分别在index.jemdoc、cheatsheet.jemdoc等以上MENU包含的jemdoc中首行加入：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;index.jemdoc 加这个</span><br><span class="line"># jemdoc: menu&#123;MENU&#125;&#123;index.html&#125;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;cheatsheet.jemdoc 加这个</span><br><span class="line"># jemdoc: menu&#123;MENU&#125;&#123;cheatsheet.html&#125;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;其他雷同</span><br><span class="line">......</span><br></pre></td></tr></table></figure><p>在全部重新生成一遍</p><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20211120023609340.png" alt="image-20211120023609340"></p><h2 id="modeline-模式行设置"><a href="#modeline-模式行设置" class="headerlink" title="modeline 模式行设置"></a>modeline 模式行设置</h2><p>jemdoc的modeline要在首行（或头部配置），如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># jemdoc: menu&#123;MENU&#125;&#123;cheatsheet.html&#125;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 或</span><br><span class="line"></span><br><span class="line"># jemdoc: addcss&#123;jemdoc.css&#125;</span><br><span class="line"># jemdoc: addjs&#123;jemdoc.js&#125;</span><br></pre></td></tr></table></figure><h3 id="addcss-amp-js"><a href="#addcss-amp-js" class="headerlink" title="addcss&amp;js"></a>addcss&amp;js</h3><p>上图前面的就是上一步说的添加menu，而后面的则是引入css和js。<br>试这在录下新建个js文件夹，在下面新建jemdoc.js，内容如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">console.log(&quot;this is .&#x2F;js&#x2F;jemdoc.js&quot;)</span><br></pre></td></tr></table></figure><p>然后新建modeline.jemdoc中引入，注意这里有个坑，我们试着在头部引入：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># jemdoc: addcss&#123;jemdo&#125;</span><br><span class="line"># jemdoc: addcss&#123;jemdo.css&#125;</span><br><span class="line"># jemdoc: addjs&#123;.&#x2F;js&#x2F;jemdoc&#125;</span><br><span class="line"># jemdoc: addjs&#123;.&#x2F;js&#x2F;jemdoc.js&#125;</span><br></pre></td></tr></table></figure><p>生成的代码如下：(解释就写在备注那里)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F; 这个是jemdoc默认会生成的，自动引入jemdoc.css</span><br><span class="line">&lt;link rel&#x3D;&quot;stylesheet&quot; href&#x3D;&quot;jemdoc.css&quot; type&#x3D;&quot;text&#x2F;css&quot; &#x2F;&gt;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 这个是addcss&#123;jemdo&#125;生成的，可以看到jemdoc自动给加了.css后缀</span><br><span class="line">&lt;link rel&#x3D;&quot;stylesheet&quot; href&#x3D;&quot;jemdo.css&quot; type&#x3D;&quot;text&#x2F;css&quot; &#x2F;&gt;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 这个是addcss&#123;jemdo.css&#125;生成的，可以看到jemdoc没给加后缀</span><br><span class="line">&lt;link rel&#x3D;&quot;stylesheet&quot; href&#x3D;&quot;jemdo.css&quot; type&#x3D;&quot;text&#x2F;css&quot; &#x2F;&gt;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 这个是addjs&#123;.&#x2F;js&#x2F;jemdoc&#125;生成的，可以看到jemdoc自动给加了.js后缀</span><br><span class="line">&lt;script src&#x3D;&quot;.&#x2F;js&#x2F;jemdoc.js&quot; type&#x3D;&quot;text&#x2F;javascript&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 这个是addjs&#123;.&#x2F;js&#x2F;jemdoc.js&#125;生成的，可以看到jemdoc多加了个.js后缀，导至找不到js.</span><br><span class="line">&lt;script src&#x3D;&quot;.&#x2F;js&#x2F;jemdoc.js.js&quot; type&#x3D;&quot;text&#x2F;javascript&quot;&gt;&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure><p>综上所述，在使用addcss和addjs模式行的时候都不要加后缀，jemdoc会自动生成。</p><h3 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F; 自定义页面titile</span><br><span class="line"># jemdoc: title&#123;自定义titile&#125;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 清除jemdoc自动包含的jemdoc.css</span><br><span class="line"># jemdoc: nodefaultcss</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 添加Google Analytics（分析）支持</span><br><span class="line">analytics &#123;ANALYTICS KEY&#125;</span><br></pre></td></tr></table></figure><h3 id="底部footer配置"><a href="#底部footer配置" class="headerlink" title="底部footer配置"></a>底部footer配置</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F; 不要生成时间</span><br><span class="line"># jemdoc: notime</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 不要生成日期</span><br><span class="line"># jemdoc: nodate</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 不要生成时指向jemdoc的超链接</span><br><span class="line"># jemdoc: showsource</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 不要生成footer</span><br><span class="line"># jemdoc: nofooter</span><br></pre></td></tr></table></figure><p>在jemdoc中首行加入：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># jemdoc: nofooter</span><br></pre></td></tr></table></figure><h3 id="方程式"><a href="#方程式" class="headerlink" title="方程式"></a>方程式</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F; 禁用LaTeX方程式支持。</span><br><span class="line"># jemdoc: noeqs</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 调整方程式的大小（默认值为130）</span><br><span class="line"># jemdoc: eqsize &#123;SIZE&#125;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 调整方程式目录（默认eqs）。</span><br><span class="line"># jemdoc: noeqs</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 禁用方程式缓存。</span><br><span class="line"># jemdoc: noeqs</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 在编译方程式时包括对LATEX_PACKAGE_NAME的支持</span><br><span class="line"># jemdoc: addpackage &#123;LATEX_PACKAGE_NAME&#125;</span><br></pre></td></tr></table></figure><h2 id="html成生模版更改"><a href="#html成生模版更改" class="headerlink" title="html成生模版更改"></a>html成生模版更改</h2><p>可以修改jemdoc的生成规则，在cmd中输入。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python jemdoc.py --show-config</span><br></pre></td></tr></table></figure><p>或者在jemdoc.py文件的133-207行可以看到对应的html配置。<br>首先，找出需要使用来更改哪个块，这里拿[footerend]举例。创建一个新文件myfooterend.conf，一开始内容为原来模版的：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[footerend]</span><br><span class="line">&lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br></pre></td></tr></table></figure><p>然后我们总要搞点小动作：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[footerend]</span><br><span class="line">&lt;p style&#x3D;&quot;color: red;&quot;&gt;这是我改的footerend，就是为了说这句话2333~&lt;&#x2F;p&gt;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br></pre></td></tr></table></figure><p>然后新建个myfooter.jemdoc，在用以下命令生成它：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python2 jemdoc.py -c myfooterend.conf myfooter.jemdoc</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20211120024351543.png" alt="image-20211120024351543"></p><h1 id="使用clustrmaps"><a href="#使用clustrmaps" class="headerlink" title="使用clustrmaps"></a>使用clustrmaps</h1><p>该网站提供访问统计功能，独特之处是<strong>以全球地图的形式标明访问者全球分布情况</strong>。该站点承诺无 cookie、无间谍软件。网址提供了生成访问者地址分布图的代码，可以嵌入到网站或博客中，来显示来自世界各地访问者的实时地图，有助于发展您隐藏的兴趣社区。最重要的是，这个功能是<strong>免费</strong>的，能够满足个人网站的需求，如下图所示。可以用该网站来记录个人简历中的一些信息：</p><ul><li>每天的访问量；</li><li>每一个访问的人的IP相关信息都会记录下来，我们就可以查看；</li><li>。。。</li></ul><p>网站地址：<a href="clustrmaps.com">clustrmaps.com</a></p><h2 id="配置-clustrmaps"><a href="#配置-clustrmaps" class="headerlink" title="配置 clustrmaps"></a>配置 clustrmaps</h2><p>网站注册后，访问 <a href="https://clustrmaps.com/add" target="_blank" rel="noopener">Enter your website address</a> 添加自己的网站地址，选择免费的服务。将上面的github pages站点地址放置于内</p><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20211120024918799.png" alt="image-20211120024918799"></p><p>选择自己喜欢的插件格式，现在 Hexo 的 Next 两种主题都是支持的，但是自己比较喜欢 Map widget 的主题。</p><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20211120025013604.png" alt="image-20211120025013604"></p><p>点击选择后，拷贝网站出现的脚本 <a href="https://cloud.tencent.com/product/sms?from=10680" target="_blank" rel="noopener">javascript</a>代码，粘贴到特定位置</p><h1 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h1>]]></content>
    
    <summary type="html">
    
      
      
        
        
          &lt;blockquote&gt;
&lt;p&gt;jemdoc是什么？&lt;/p&gt;
&lt;
        
      
    
    </summary>
    
    
      <category term="jemdoc" scheme="http://yoursite.com/categories/jemdoc/"/>
    
    
  </entry>
  
  <entry>
    <title>AWS常用VPN技术介绍与实践</title>
    <link href="http://yoursite.com/2021/11/14/VirtualPrivateNetworkINAWS/"/>
    <id>http://yoursite.com/2021/11/14/VirtualPrivateNetworkINAWS/</id>
    <published>2021-11-14T16:00:00.000Z</published>
    <updated>2021-11-14T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>在AWS中提供了几种方式的VPN技术，分别是：</p><ul><li>软件层面的VPN技术；</li><li>硬件层面的VPN技术；</li><li>专线层面的VPN技术；</li></ul><p>下面</p>]]></content>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;在AWS中提供了几种方式的VPN技术，分别是：&lt;/p&gt;
&lt;
        
      
    
    </summary>
    
    
      <category term="VPN" scheme="http://yoursite.com/categories/VPN/"/>
    
    
      <category term="AWS" scheme="http://yoursite.com/tags/AWS/"/>
    
      <category term="VPN" scheme="http://yoursite.com/tags/VPN/"/>
    
  </entry>
  
</feed>
