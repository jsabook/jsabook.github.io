<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Qier&#39;s blog</title>
  <icon>http://yoursite.com/icon.png</icon>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2021-11-11T16:00:00.000Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>qier</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>iptables相关操作</title>
    <link href="http://yoursite.com/2021/11/11/iptablesOpration/"/>
    <id>http://yoursite.com/2021/11/11/iptablesOpration/</id>
    <published>2021-11-11T16:00:00.000Z</published>
    <updated>2021-11-11T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>iptables 是 Linux 防火墙工作在用户空间的管理工具，是 <code>netfilter/iptables</code>IP 信息包过滤系统是一部分，用来设置、维护和检查 Linux 内核的 IP 数据包过滤规则。</p></blockquote><p>iptables由两部分组成，一部分是ip另外一部分就是tables。因此iptables就是通过表的形式对ip进行各种操作。</p><p>iptables的重点是<strong>五链四表</strong>。</p><p><strong>四表五链</strong>：<br>链就是位置：共有五个 进路由(    PREROUTING)、进系统(INPUT) 、转发(FORWARD)、出系统(OUTPUT)、出路由(POSTROUTING)；<br>表就是存储的规则；数据包到了该链处，会去对应表中查询设置的规则，然后决定是否放行、丢弃、转发还是修改等等操作。</p><p><strong>四表</strong></p><ul><li><p>raw表，待学习</p></li><li><p>mangle表，操作系统级别的表，主要应用在修改数据包、流量整形、给数据包打标识，默认的规则链有：<code>INPUT</code>，<code>OUTPUT</code>、 <code>forward</code>，<code>POSTROUTING</code>，<code>PREROUTING</code></p></li><li><p>filter表，过滤表，对进入的不符合条件的流量过滤。对不符合规则输出流量也进行过滤；</p></li><li><p>nat表，对目的地址、目的端口、源地址源端口进行修改；</p></li></ul><p><strong>五链</strong></p><ul><li>INPUT</li><li>OUTPUT</li><li>FPRWARD</li><li>POSTROUTING</li><li>PREROUTING</li></ul><h1 id="五链"><a href="#五链" class="headerlink" title="五链"></a>五链</h1><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/iptables-Page-1-2drawio.svg" alt="iptables-Page-1-2drawio"></p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/iptables-%E4%BA%94%E8%A1%A8%E5%9B%9B%E9%93%BEdrawio.svg" alt="iptables-五表四链drawio" style="zoom:80%;" /><ol><li>当一个数据包进入网卡时，它首先进入 <code>PREROUTING</code> 链，内核根据数据包目的 IP 判断是否需要转送出去。</li><li>如果数据包就是进入本机的，它就会沿着图向下移动，到达 <code>INPUT</code> 链。数据包到了 INPUT 链后，任何进程都会收到它。</li><li>本机上运行的程序可以发送数据包，这些数据包会经过 <code>OUTPUT</code> 链，然后到达<code>POSTROUTING</code> 链输出。</li><li>如果数据包是要转发出去的，且内核允许转发，数据包就会如图所示向右移动，经过 <code>FORWARD</code> 链，然后到达 <code>POSTROUTING</code> 链输出。</li></ol><p><strong>小结</strong></p><p>整体数据包分两类：1、发给防火墙本身的数据包 ；2、需要经过防火墙的数据包.</p><p>数据包的流程：数据包进入到链中之后，会根据此时的状态去对应的表中查询对应的规则。</p><p><strong>匹配流程示意图</strong></p><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/iptables-%E7%A4%BA%E6%84%8F%E5%9B%BEdrawio.svg" alt="iptables-示意图drawio"></p><p><strong>iptables语法</strong></p><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/iptables-Optiondrawio.svg" alt="iptables-Optiondrawio"></p><p>这张图描述了iptables的相关语法命令。</p><h1 id="四表"><a href="#四表" class="headerlink" title="四表"></a>四表</h1><h2 id="filter表"><a href="#filter表" class="headerlink" title="filter表"></a>filter表</h2><p><strong>查看规则</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">iptables -t filter -L -n</span><br></pre></td></tr></table></figure><p>可以看到结果</p><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20211112214242489.png" alt="image-20211112214242489"></p><p><strong>添加规则</strong></p><p>追加规则，将所有进入流量的80端口的流量丢弃掉。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">iptables -t filter -A INPUT -j DROP -p tcp --dport 80</span><br></pre></td></tr></table></figure><p>追加规则，将出口到某个<strong>192.168.0.144</strong>的流量全部丢弃</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">iptables -t filter -A OUTPUT -j DROP -p tcp -d 192.168.0.144</span><br></pre></td></tr></table></figure><p>查看iptables表</p><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20211112215324542.png" alt="image-20211112215324542"></p><p><strong>删除规则</strong></p><p>将设置的第一条规则删除掉。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">iptables -t filter -D INPUT 1</span><br></pre></td></tr></table></figure><h2 id="nat表"><a href="#nat表" class="headerlink" title="nat表"></a>nat表</h2><p>查看nat 表</p><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20211112215806952.png" alt="image-20211112215806952"></p><h1 id="查询规则"><a href="#查询规则" class="headerlink" title="查询规则"></a>查询规则</h1><p>如图所示</p><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/iptables-%E6%9F%A5%E8%AF%A2%E8%A7%84%E5%88%992drawio.svg" alt="iptables-查询规则2drawio"></p><p><strong>查询规则</strong></p><p>-L 列出规则，在L之前还可以添加其他参数，如下所示：</p><ul><li>v：显示详细信息，包括每条规则匹配的包数和匹配字节号；</li><li>x：在v的基础上，禁止自动单位换算(K、M)</li><li>n：只显示IP地址与端口号码，不显示服务名称</li></ul><p>用详细方法列出filter表的的所有规则，只显示IP地址与端口号：</p><p><strong>第一种</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">root@wjshuai:~<span class="comment"># iptables -t filter -vnL INPUT</span></span><br><span class="line">Chain INPUT (policy ACCEPT 0 packets, 0 bytes)</span><br><span class="line"> pkts bytes target     prot opt <span class="keyword">in</span>     out     <span class="built_in">source</span>               destination         </span><br><span class="line">   35  2100 DROP       tcp  --  *      *       0.0.0.0/0            0.0.0.0/0            tcp dpt:80</span><br><span class="line"><span class="comment"># Warning: iptables-legacy tables present, use iptables-legacy to see them</span></span><br></pre></td></tr></table></figure><p><strong>第二种</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">root@wjshuai:~<span class="comment"># iptables -t filter -v -n -L  INPUT</span></span><br><span class="line">Chain INPUT (policy ACCEPT 0 packets, 0 bytes)</span><br><span class="line"> pkts bytes target     prot opt <span class="keyword">in</span>     out     <span class="built_in">source</span>               destination         </span><br><span class="line">   35  2100 DROP       tcp  --  *      *       0.0.0.0/0            0.0.0.0/0            tcp dpt:80</span><br><span class="line"><span class="comment"># Warning: iptables-legacy tables present, use iptables-legacy to see them</span></span><br></pre></td></tr></table></figure><h1 id="匹配规则"><a href="#匹配规则" class="headerlink" title="匹配规则"></a>匹配规则</h1><h2 id="按网络接口匹配"><a href="#按网络接口匹配" class="headerlink" title="按网络接口匹配"></a>按网络接口匹配</h2><p><strong>-i，匹配数据进入的网络接口</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">-i eth0 匹配是否从网络接口eth0进入</span><br><span class="line">-i ppp0 匹配是否从网络接口ppp0进入</span><br></pre></td></tr></table></figure><p><strong>-o，匹配数据流出的网络接口</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">-o eth0 匹配是否从网络接口eth0出去</span><br><span class="line">-o ppp0 匹配是否从网络接口ppp0出去</span><br></pre></td></tr></table></figure><h2 id="按照地址进行匹配"><a href="#按照地址进行匹配" class="headerlink" title="按照地址进行匹配"></a>按照地址进行匹配</h2><p><strong>-s，匹配来源地址</strong></p><p>可以是IP、NET、Domain也可以为空(任何)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">-s 192.168.0.1 匹配来自192.168.0.1的数据包</span><br><span class="line">-s 192.168.1.0&#x2F;24 匹配来自192.168.1.0&#x2F;24网络段的数据包</span><br></pre></td></tr></table></figure><p><strong>-d，匹配目的地址</strong></p><p>可以是IP、NET、Domain也可以为空(任何)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">-d 202.106.0.20 匹配去往202.106.0.20的数据包</span><br><span class="line">-d 202.106.0.0&#x2F;16 匹配去往202.106.0.0&#x2F;16网络段的数据包</span><br><span class="line">-d www.adc.com 匹配前往域名www.abc.com的数据包</span><br></pre></td></tr></table></figure><h2 id="按照协议类型进行匹配"><a href="#按照协议类型进行匹配" class="headerlink" title="按照协议类型进行匹配"></a>按照协议类型进行匹配</h2><p><strong>-p,匹配协议类型</strong></p><p>可以是任何的网络协议</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">-p tcp</span><br><span class="line">-p udp</span><br><span class="line">-p icmp</span><br></pre></td></tr></table></figure><h2 id="按照端口进行匹配"><a href="#按照端口进行匹配" class="headerlink" title="按照端口进行匹配"></a>按照端口进行匹配</h2><p><strong>–sport，匹配源端口</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">--sport 1000 匹配源端口是1000的数据包</span><br><span class="line">--sport 1000:3000 匹配源端口是1000到3000的数据包(包含1000与3000)</span><br></pre></td></tr></table></figure><p><strong>–dport，匹配目的端口</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">--dport 80</span><br><span class="line">--dport 1000:6000</span><br></pre></td></tr></table></figure><p><strong>ps</strong>:如果需要匹配端口那就需要规则中必须有<strong>-p</strong>参数。</p><h2 id="附加匹配模块"><a href="#附加匹配模块" class="headerlink" title="附加匹配模块"></a>附加匹配模块</h2><h3 id="按包状态匹配"><a href="#按包状态匹配" class="headerlink" title="按包状态匹配"></a>按包状态匹配</h3><p><strong>state</strong></p><p>-m state –state 状态</p><p><strong>状态</strong>：</p><ul><li>NEW,有别于tcp的syn</li><li>ESTABLISHED,连接状态</li></ul><p><strong>例子</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ipttables -A INPUT -m state --state NEW.ESTABLISHED -j ACCEPT</span><br></pre></td></tr></table></figure><h3 id="按来源MAC匹配"><a href="#按来源MAC匹配" class="headerlink" title="按来源MAC匹配"></a>按来源MAC匹配</h3><p><strong>mac</strong></p><p>-m mac –mac-source MAC</p><p><strong>例如</strong></p><p>阻断来自某MAC地址的数据包</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">iptables -A FORWARD -m mac --mac-source xx:xx:xx:xx:xx:xx -j DROP</span><br></pre></td></tr></table></figure><h3 id="按包速率匹配"><a href="#按包速率匹配" class="headerlink" title="按包速率匹配"></a>按包速率匹配</h3><p><strong>limit</strong></p><p>用一定的速率去匹配数据包，而不是去限制数据包。</p><h3 id="多端口匹配"><a href="#多端口匹配" class="headerlink" title="多端口匹配"></a>多端口匹配</h3><p><strong>multiport</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">iptables -A INPUT -p tcp -m multiports --ports 21,22,23-j DROP</span><br></pre></td></tr></table></figure><p><strong>ps</strong>:如果需要匹配端口那就需要规则中必须有<strong>-p</strong>参数。</p><h1 id="target"><a href="#target" class="headerlink" title="target"></a>target</h1><p>动作，处理方式，按照规则匹配到流量后，对该流量进行的动作。有如下处理方式：</p><ul><li>ACCEPT</li><li>DROP</li><li>SNAT</li><li>DNAT</li><li>MASQUERADE</li></ul><h2 id="ACCEPT"><a href="#ACCEPT" class="headerlink" title="ACCEPT"></a>ACCEPT</h2><p>接受数据流量</p><h2 id="DROP"><a href="#DROP" class="headerlink" title="DROP"></a>DROP</h2><p>丢弃数据流量</p><h2 id="SNAT"><a href="#SNAT" class="headerlink" title="SNAT"></a>SNAT</h2><p>源地址转换，<strong>nat</strong>表的<strong>POSTROUTING</strong>链</p><p>例如</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 将内网192.168.0.0&#x2F;24源地址修改为1.1.1.1</span><br><span class="line">iptables -t nat -A POSTROUTING -s 192.168.0.0&#x2F;24 -j SNAT --to 1.1.1.1</span><br></pre></td></tr></table></figure><h2 id="DNAT"><a href="#DNAT" class="headerlink" title="DNAT"></a><strong>DNAT</strong></h2><p>目的地址转换，DNAT支持    转换为单IP，也支持转换到IP地址池</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 从ppp0接口进来的要访问TCP&#x2F;80端口的数据包目的地址修改为192.168.0.1</span><br><span class="line">iptables -t nat -A PREROUTING -i ppp0 -p tcp --dport 80 -j DNAT --to 192.168.0.1</span><br></pre></td></tr></table></figure><h1 id="转发流量"><a href="#转发流量" class="headerlink" title="转发流量"></a>转发流量</h1><p>使用iptables的转发流量功能前，需要先开启转发功能</p><p><strong>开启转发功能</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sed -i &#39;s&#x2F;net.ipv4.ip_forward &#x3D; 0&#x2F;net.ipv4.ip_forward &#x3D; 1&#x2F;g&#39; &#x2F;etc&#x2F;sysctl.conf</span><br><span class="line">sysctl -p</span><br></pre></td></tr></table></figure><p><strong>清除下所有默认的iptables表</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">iptables -F</span><br><span class="line">iptables -t nat -F</span><br><span class="line">service iptables save</span><br></pre></td></tr></table></figure><h2 id="SNAT策略"><a href="#SNAT策略" class="headerlink" title="SNAT策略"></a><strong>SNAT策略</strong></h2><p><strong>策略概述</strong></p><p>SNAT策略的典型应用环境</p><ul><li>局域网主机共享单个公网IP地址接入Internet</li></ul><p>SNAT策略的原理</p><p>源地址转换，Source Network Address Translation</p><ul><li>修改数据包的源地址</li></ul><p><strong>SNAT未使用前</strong></p><p>如果SNAT没有使用的话，那么就会像下图以下，无法进行通信。</p><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20211113054542183.png" alt="image-20211113054542183"></p><p><strong>SNAT使用后</strong></p><p>可以进行相互通信了</p><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20211113054621095.png" alt="image-20211113054621095"></p><p><strong>SNAT 规则编写</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# iptables -t nat -A POSTROUTING -s A.A.A.0&#x2F;24 -o eth0 -j SNAT --to-source D.D.D.D</span><br></pre></td></tr></table></figure><p><strong>SNAT效果</strong></p><p>如果SNAT设置成功，那么就会实现以下效果</p><ul><li><p>在局域网主机 A.A.A.A 中能够访问外网的Web服务器 C.C.C.C</p></li><li><p>查看Web主机 C.C.C.C 的访问日志，记录的来访者应是网关主机的外网IP地址 D.D.D.D</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># less /var/log/httpd/access_log</span></span><br><span class="line">……</span><br><span class="line">D.D.D.D - - [26/May/2011:15:26:23 +0800] <span class="string">"GET / HTTP/1.1"</span> 200 28 <span class="string">"-"</span> <span class="string">"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; Trident/4.0; SLCC2;</span></span><br><span class="line"><span class="string"> .NET CLR 2.0.50727; Media Center PC 6.0)"</span></span><br></pre></td></tr></table></figure></li></ul><h2 id="DNAT策略"><a href="#DNAT策略" class="headerlink" title="DNAT策略"></a>DNAT策略</h2><p><strong>DNAT</strong>的典型应用环境：在Internet中发布内网服务器。</p><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20211113060033937.png" alt="image-20211113060033937"></p><p><strong>策略编写</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# iptables -t nat -A PREROUTING -i eth0 -d D.D.D.D </span><br><span class="line">-p tcp --dport 80 -j DNAT --to-destination A.A.A.A</span><br></pre></td></tr></table></figure><p><strong>验证DNAT</strong></p><p>如何验证，很简单只要实现以下方式就算验证成功。</p><ul><li><p>在外网客户机 C.C.C.C 中能够访问位于企业内网的Web服务，访问地址为 <a href="http://D.D.D.D/" target="_blank" rel="noopener">http://D.D.D.D/</a></p></li><li><p>查看Web服务器 A.A.A.A 的访问日志，记录了外网客户机的IP地址 C.C.C.C</p></li></ul><h2 id="流量转发"><a href="#流量转发" class="headerlink" title="流量转发"></a>流量转发</h2><p><strong>转发TCP流量</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">iptables -t nat -A PREROUTING -p tcp --dport [源端口号] -j DNAT --to-destination [目标IP:目标端口号]</span><br><span class="line">iptables -t nat -A POSTROUTING -p tcp -d [目标IP] --dport [目标端口号] -j SNAT --to-source [中转服务器IP]</span><br></pre></td></tr></table></figure><p><strong>转发UDP流量</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">iptables -t nat -A PREROUTING -p udp --dport [源端口号] -j DNAT --to-destination [目标IP:目标端口号]</span><br><span class="line">iptables -t nat -A POSTROUTING -p udp -d [目标IP] --dport [目标端口号] -j SNAT --to-source [中转服务器IP]</span><br></pre></td></tr></table></figure><p><strong>PS</strong>：执行完毕后，必须进行保存 请使用<strong>service iptables save</strong> 进行保存。</p><h1 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h1><ol><li>2020/05. iptables系列教程（二）| iptables语法规则[EB/OL]. 2020/05[2021/11]. <a href="https://bbs.huaweicloud.com/blogs/detail/165033" target="_blank" rel="noopener">https://bbs.huaweicloud.com/blogs/detail/165033</a>.</li></ol>]]></content>
    
    <summary type="html">
    
      
      
        
        
          &lt;blockquote&gt;
&lt;p&gt;iptables 是
        
      
    
    </summary>
    
    
      <category term="网络安全" scheme="http://yoursite.com/categories/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/"/>
    
    
      <category term="安全" scheme="http://yoursite.com/tags/%E5%AE%89%E5%85%A8/"/>
    
      <category term="防火墙" scheme="http://yoursite.com/tags/%E9%98%B2%E7%81%AB%E5%A2%99/"/>
    
  </entry>
  
  <entry>
    <title>配置https证书</title>
    <link href="http://yoursite.com/2021/11/03/configurethehttps/"/>
    <id>http://yoursite.com/2021/11/03/configurethehttps/</id>
    <published>2021-11-03T16:00:00.000Z</published>
    <updated>2021-11-03T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>本结通过对阿里云上的轻量级服务器配置SSL，来讲述HTTPS协议交互流程。</p><p>这里再轻量级服务器上的web服务选用https。</p></blockquote><h1 id="购买域名"><a href="#购买域名" class="headerlink" title="购买域名"></a>购买域名</h1><p>这里选择<code>freenom</code>公司，因为freenom这一家域名厂商可以免费使用域名。不需要花钱.</p><p>使用freenom域名厂商购买域名的方式：<a href="https://sspai.com/post/40615" target="_blank" rel="noopener">https://sspai.com/post/40615</a></p><p>这里我购买到的域名为<code>wjshuaihttps.ml</code></p><h1 id="购买阿里云轻量级服务器"><a href="#购买阿里云轻量级服务器" class="headerlink" title="购买阿里云轻量级服务器"></a>购买阿里云轻量级服务器</h1><p>可以参考以下链接</p><p><a href="https://www.kancloud.cn/hnxeguo/wpforwx/689547" target="_blank" rel="noopener">https://www.kancloud.cn/hnxeguo/wpforwx/689547</a></p><h1 id="配置实例"><a href="#配置实例" class="headerlink" title="配置实例"></a>配置实例</h1><p>这里选择的是Centos</p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20211109220357456.png" alt="image-20211109220357456" style="zoom:50%;" /><h1 id="安全策略组设置"><a href="#安全策略组设置" class="headerlink" title="安全策略组设置"></a>安全策略组设置</h1><p>选择安全里面的防火墙</p><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20211109220633225.png" alt="image-20211109220633225"></p><p>这里选择开放轻量级服务器的22、80、443这三个端口。</p><table><thead><tr><th>端口</th><th>作用</th></tr></thead><tbody><tr><td>22</td><td>ssh端口</td></tr><tr><td>80</td><td>http端口</td></tr><tr><td>443</td><td>https端口</td></tr></tbody></table><h1 id="安装nginx"><a href="#安装nginx" class="headerlink" title="安装nginx"></a>安装nginx</h1><p><strong>安装</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum update -y &amp;&amp; yum install nginx</span><br></pre></td></tr></table></figure><p><strong>设置开机自启</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl enable nginx</span><br></pre></td></tr></table></figure><p><strong>设置nginx启动</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl start nginx</span><br></pre></td></tr></table></figure><p><strong>查看</strong></p><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20211109220944717.png" alt="image-20211109220944717"></p><h1 id="配置域名"><a href="#配置域名" class="headerlink" title="配置域名"></a>配置域名</h1><p>这里的配置域名是指将轻量级服务器的ip与域名的地址进行A记录映射。</p><p>选择<strong>Manage Domain</strong></p><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20211109221649168.png" alt="image-20211109221649168"></p><p>选择<strong>Freenom DNS</strong></p><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20211109221728374.png" alt="image-20211109221728374"></p><p><strong>填入IP地址</strong></p><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20211109221835163.png" alt="image-20211109221835163"></p><p>等待DNS生效，这个过程大概需要花费5分钟。然后通过nslookup进行dns查询。</p><p>查看浏览器，发现dns已经生效</p><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20211109222355306.png" alt="image-20211109222355306"></p><h1 id="配置SSL"><a href="#配置SSL" class="headerlink" title="配置SSL"></a>配置SSL</h1><p>这里使用<strong>let’s encrypt</strong>，<strong>Let’s Encrypt</strong>是一个于2015年三季度推出的数字证书认证机构，旨在以自动化流程消除手动创建和安装证书的复杂流程，并推广使万维网服务器的加密连接无所不在，为安全网站提供免费的SSL/TLS证书。最重要的是，个人用户使用<strong>Let’s Encrypt</strong>对域名进行签发证书是免费的。因此这里使用这个机构进行证书的签名。</p><p>ACME，是Let’s Encrypt 设计的一套协议，个人用户通过ACME与Let’s Encrypt 进行证书的签名。</p><h2 id="安装ACME"><a href="#安装ACME" class="headerlink" title="安装ACME"></a>安装ACME</h2><p>安装很简单, 一个命令:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl  https:&#x2F;&#x2F;get.acme.sh | sh</span><br></pre></td></tr></table></figure><p>安装过程进行了以下几步:</p><p><strong>下载脚本</strong></p><p>把 acme.sh 安装到你的 <strong>home</strong> 目录下:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">~&#x2F;.acme.sh&#x2F;</span><br></pre></td></tr></table></figure><p>我们这边创建 一个 bash 的 alias, 方便使用: </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alias acme.sh&#x3D;~&#x2F;.acme.sh&#x2F;acme.sh</span><br></pre></td></tr></table></figure><p><strong>自动更新</strong></p><p>自动为你创建 cronjob, 每天 0:00 点自动检测所有的证书, 如果快过期了, 需要更新, 则会自动更新证书.</p><h2 id="生成证书"><a href="#生成证书" class="headerlink" title="生成证书"></a>生成证书</h2><p><strong>acme.sh</strong> 实现了 <strong>acme</strong> 协议支持的所有验证协议.一般有两种方式验证: http 和 dns 验证.</p><h3 id="HTTP方式"><a href="#HTTP方式" class="headerlink" title="HTTP方式"></a><strong>HTTP方式</strong></h3><p>http 方式需要在你的网站根目录下放置一个文件, 来验证你的域名所有权, 完成验证. 然后就可以生成证书了.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">acme.sh  --issue  -d mydomain.com -d www.mydomain.com  --webroot  &#x2F;home&#x2F;wwwroot&#x2F;mydomain.com&#x2F;</span><br></pre></td></tr></table></figure><p>只需要指定域名, 并指定域名所在的网站根目录. <strong>acme.sh</strong> 会全自动的生成验证文件, 并放到网站的根目录, 然后自动完成验证. 最后会聪明的删除验证文件. 整个过程没有任何副作用.</p><p><strong>Apache服务器</strong></p><p>如果使用的 <strong>apache</strong> 服务器, <strong>acme.sh</strong> 还可以智能的从 <strong>apache</strong> 的配置中自动完成验证, 你不需要指定网站根目录:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">acme.sh --issue  -d mydomain.com   --apache</span><br></pre></td></tr></table></figure><p><strong>Nginx服务器</strong></p><p>如果用的 <strong>nginx</strong> 服务器, 或者反代, <strong>acme.sh</strong> 还可以智能的从 <strong>nginx</strong> 的配置中自动完成验证, 你不需要指定网站根目录:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">acme.sh --issue  -d mydomain.com   --nginx</span><br></pre></td></tr></table></figure><p><strong>注意, 无论是 apache 还是 nginx 模式, acme.sh 在完成验证之后, 会恢复到之前的状态, 都不会私自更改你本身的配置. 好处是你不用担心配置被搞坏, 也有一个缺点, 你需要自己配置 ssl 的配置, 否则只能成功生成证书, 你的网站还是无法访问 https. 但是为了安全, 你还是自己手动改配置吧.</strong></p><h3 id="DNS方式"><a href="#DNS方式" class="headerlink" title="DNS方式"></a>DNS方式</h3><p>手动 dns 方式, 手动在域名上添加一条 txt 解析记录, 验证域名所有权.这种方式的好处是, 你不需要任何服务器, 不需要任何公网 ip, 只需要 dns 的解析记录即可完成验证.坏处是，如果不同时配置 Automatic DNS API，使用这种方式 acme.sh 将无法自动更新证书，每次都需要手动再次重新解析验证域名所有权。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">acme.sh  --issue  --dns   -d mydomain.com</span><br></pre></td></tr></table></figure><p>然后, <strong>acme.sh</strong> 会生成相应的解析记录显示出来, 你只需要在你的域名管理面板中添加这条 txt 记录即可.</p><p>等待解析完成之后, 重新生成证书:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">acme.sh  --renew   -d mydomain.com</span><br></pre></td></tr></table></figure><p>注意第二次这里用的是 <code>--renew</code></p><p>dns 方式的真正强大之处在于可以使用域名解析商提供的 api 自动添加 txt 记录完成验证.<strong>acme.sh</strong> 目前支持 cloudflare, dnspod, cloudxns, godaddy 以及 ovh 等数十种解析商的自动集成.</p><p>以 dnspod 为例, 你需要先登录到 dnspod 账号, 生成你的 api id 和 api key, 都是免费的.<br>然后:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">export DP_Id&#x3D;&quot;1234&quot;</span><br><span class="line">export DP_Key&#x3D;&quot;sADDsdasdgdsf&quot;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">acme.sh   --issue   --dns dns_dp   -d aa.com  -d www.aa.com</span><br></pre></td></tr></table></figure><p>证书就会自动生成了. 这里给出的 api id 和 api key 会被自动记录下来, 将来你在使用 dnspod api 的时候, 就不需要再次指定了.直接生成就好了:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">acme.sh  --issue   -d  mydomain2.com   --dns  dns_dp</span><br></pre></td></tr></table></figure><h3 id="使用http方式"><a href="#使用http方式" class="headerlink" title="使用http方式"></a>使用http方式</h3><p>我这里使用http的方式进行证书的生成</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">acme.sh  --issue  -d www.wjshuaihttps.ml  --webroot &#x2F;usr&#x2F;share&#x2F;nginx&#x2F;html</span><br></pre></td></tr></table></figure><p>获取到https的密钥与公钥以及密钥链</p><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20211109224640962.png" alt="image-20211109224640962"></p><h3 id="安装证书"><a href="#安装证书" class="headerlink" title="安装证书"></a>安装证书</h3><p>前面证书生成以后, 接下来需要把证书 copy 到真正需要用它的地方.</p><p>注意, 默认生成的证书都放在安装目录下: <code>~/.acme.sh/</code>, 请不要直接使用此目录下的文件, 例如: 不要直接让 nginx/apache 的配置文件使用这下面的文件. 这里面的文件都是内部使用, 而且目录结构可能会变化.</p><p>正确的使用方法是使用 <code>--install-cert</code> 命令, 并指定目标位置, 然后证书文件会被 copy 到相应的位置,</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">acme.sh --install-cert -d www.wjshuaihttps.ml \</span><br><span class="line">--cert-file &#x2F;etc&#x2F;pem&#x2F;cert.pem \</span><br><span class="line">--key-file &#x2F;etc&#x2F;pem&#x2F;key.pem \</span><br><span class="line">--fullchain-file &#x2F;etc&#x2F;pem&#x2F;fullchain&#x2F;fullchain.pem \</span><br><span class="line">--reloadcmd &quot;sudo systemctl reload nginx.service&quot;</span><br></pre></td></tr></table></figure><p><strong>加载成功</strong></p><p>加载的内容</p><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20211109225015000.png" alt="image-20211109225015000"></p><p><strong>nginx 加载证书</strong></p><p>这里需要再nginx的对应位置增加以下内容</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">listen 443 ssl;</span><br><span class="line">server_name www.wjzhe.ml;</span><br><span class="line">ssl_certificate      &#x2F;etc&#x2F;nginx&#x2F;pem&#x2F;cert.pem;</span><br><span class="line">ssl_certificate_key  &#x2F;etc&#x2F;nginx&#x2F;pem&#x2F;key.pem;</span><br><span class="line"></span><br><span class="line">ssl_session_cache    shared:SSL:1m;</span><br><span class="line">ssl_session_timeout  5m;</span><br></pre></td></tr></table></figure><p><strong>重启nginx</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl reload nginx</span><br></pre></td></tr></table></figure><p>查看证书,证书就已经安装完毕了。</p><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20211109225427427.png" alt="image-20211109225427427"></p>]]></content>
    
    <summary type="html">
    
      
      
        
        
          &lt;blockquote&gt;
&lt;p&gt;本结通过对阿里云上的轻量级服务器
        
      
    
    </summary>
    
    
      <category term="编程" scheme="http://yoursite.com/categories/%E7%BC%96%E7%A8%8B/"/>
    
    
      <category term="公有云" scheme="http://yoursite.com/tags/%E5%85%AC%E6%9C%89%E4%BA%91/"/>
    
      <category term="安全" scheme="http://yoursite.com/tags/%E5%AE%89%E5%85%A8/"/>
    
  </entry>
  
  <entry>
    <title>pycharm开发aws的Lambda</title>
    <link href="http://yoursite.com/2021/10/25/CodeLambdaOfAWSUsePycharm/"/>
    <id>http://yoursite.com/2021/10/25/CodeLambdaOfAWSUsePycharm/</id>
    <published>2021-10-25T16:00:00.000Z</published>
    <updated>2021-10-25T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Windows安装软件"><a href="#Windows安装软件" class="headerlink" title="Windows安装软件"></a>Windows安装软件</h1><blockquote><p>AWS 无服务器应用程序模型 (SAM) 是用于构建无服务器应用程序的开源框架。它提供速记语法来表达函数、API、数据库和事件源映射。每个资源只需几行，您就可以定义所需的应用程序并使用 YAML 对其进行建模。在部署期间，SAM 将 SAM 语法转换并扩展为 AWS CloudFormation 语法，使您能够更快地构建无服务器应用程序。</p></blockquote><p>因此，我们这里就需要用到这个软件进行使用。安装方式与安装<code>aws cli</code>的方式相同。</p><p>Windows64：<a href="https://github.com/awslabs/aws-sam-cli/releases/latest/download/AWS_SAM_CLI_64_PY3.msi" target="_blank" rel="noopener">下载链接</a></p><p>Linux:<a href="https://github.com/awslabs/aws-sam-cli/releases/latest/download/AWS_SAM_CLI_64_PY3.msi" target="_blank" rel="noopener">下载链接</a></p><p>其他下载方式:<a href="https://aws.amazon.com/cn/serverless/sam/" target="_blank" rel="noopener">其他方式</a></p><p>安装完毕之后，调出<code>termial</code>，输入sam即可测试安装是否成功</p><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20211026085056658.png" alt="image-20211026085056658"></p><h1 id="Pycharm安装插件"><a href="#Pycharm安装插件" class="headerlink" title="Pycharm安装插件"></a>Pycharm安装插件</h1><p>选择路径</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">File-&gt;Plugins-&gt;input &#39;aws&#39;-&gt; install</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20211025221833694.png" alt="image-20211025221833694"></p><p>通过以上路径安装<code>aws toolkit</code>插件</p><h1 id="设置权限"><a href="#设置权限" class="headerlink" title="设置权限"></a>设置权限</h1><p>这里我们需要使用aws账号的aksk进行权限设置</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">IAM-&gt;用户-&gt;安全证书-&gt;创建访问密钥</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20211025222308930.png" alt="image-20211025222308930"></p><p>这里创建访问密钥</p><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20211025222354422.png" alt="image-20211025222354422"></p><p>记录下访问ID与私有密钥</p><h1 id="pycharm设置AKSK"><a href="#pycharm设置AKSK" class="headerlink" title="pycharm设置AKSK"></a>pycharm设置AKSK</h1><p>打开pycharm，选择左下角的<code>AWS Explorer</code></p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20211025222559570.png" alt="image-20211025222559570" style="zoom:50%;" /><p>这里进行设置aws 凭证，将之前复制下来的访问ID与私有密钥放入</p><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20211025222809040.png" alt="image-20211025222809040"></p><h1 id="开始编程"><a href="#开始编程" class="headerlink" title="开始编程"></a>开始编程</h1><p><strong>创建文件交</strong></p><p>选择一个空文件夹，这里选择helloworld。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir helloworld</span><br><span class="line">cd helloworld</span><br></pre></td></tr></table></figure><p><strong>进行sam初始化</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sam init</span><br></pre></td></tr></table></figure><p><strong>进行交互式输入</strong></p><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20211026085602200.png" alt="image-20211026085602200"></p><p>创建完毕之后，发现helloworld文件夹下就有一个初始架构</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">todo</span><br></pre></td></tr></table></figure><h1 id="创建Lambda"><a href="#创建Lambda" class="headerlink" title="创建Lambda"></a>创建Lambda</h1><p>pycharm 选择之前创建的helloworld文件夹</p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20211026085739778.png" alt="image-20211026085739778" style="zoom:50%;" /><p>选择<code>AWS Explorer</code>中的Lambda</p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20211026085906780.png" alt="image-20211026085906780" style="zoom:50%;" /><p>创建Lambda</p><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20211026090119362.png" alt="image-20211026090119362"></p><h1 id="本地调试"><a href="#本地调试" class="headerlink" title="本地调试"></a>本地调试</h1><p>本地调试完毕之后可以直接部署到远端。本地调试的话，需要本地安装docker环境。</p><h1 id="远程部署"><a href="#远程部署" class="headerlink" title="远程部署"></a>远程部署</h1><h2 id="上传本地代码"><a href="#上传本地代码" class="headerlink" title="上传本地代码"></a>上传本地代码</h2><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20211026090334452.png" alt="image-20211026090334452" style="zoom:70%;" /><h2 id="运行调试"><a href="#运行调试" class="headerlink" title="运行调试"></a>运行调试</h2><p>选择触发事件输入模板，这里选择<code>s3 put</code>事件</p><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20211026090506179.png" alt="image-20211026090506179"></p><p>点击<code>OK</code>运行，运行结果就出来了。</p><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20211026090632702.png" alt="image-20211026090632702"></p><h1 id="查看结果"><a href="#查看结果" class="headerlink" title="查看结果"></a>查看结果</h1><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20211026104617493.png" alt="image-20211026104617493"></p><p>Cloudwatch查看</p><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20211026104747235.png" alt="image-20211026104747235"></p>]]></content>
    
    <summary type="html">
    
      
      
        
        
          &lt;h1 id=&quot;Windows安装软件&quot;&gt;&lt;a
        
      
    
    </summary>
    
    
      <category term="编程" scheme="http://yoursite.com/categories/%E7%BC%96%E7%A8%8B/"/>
    
    
      <category term="aws" scheme="http://yoursite.com/tags/aws/"/>
    
      <category term="Linux" scheme="http://yoursite.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>AWS相关函数</title>
    <link href="http://yoursite.com/2021/10/10/AWS%E7%9A%84S3OFunctionPration/"/>
    <id>http://yoursite.com/2021/10/10/AWS%E7%9A%84S3OFunctionPration/</id>
    <published>2021-10-10T16:00:00.000Z</published>
    <updated>2021-10-10T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong>文件排序</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">list_s3_by_prefix</span><span class="params">(bucket, prefix, filter_func=None)</span>:</span></span><br><span class="line">    print(<span class="string">f"list_s3_by_prefix bucket: <span class="subst">&#123;bucket&#125;</span>, prefix: <span class="subst">&#123;prefix&#125;</span>"</span>)</span><br><span class="line">    s3_bucket = boto3.resource(<span class="string">'s3'</span>).Bucket(bucket)</span><br><span class="line">    <span class="keyword">if</span> filter_func <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">        key_list = [s.key <span class="keyword">for</span> s <span class="keyword">in</span> s3_bucket.objects.filter(Prefix=prefix)]</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        key_list = [s.key <span class="keyword">for</span> s <span class="keyword">in</span> s3_bucket.objects.filter(</span><br><span class="line">            Prefix=prefix) <span class="keyword">if</span> filter_func(s.key)]</span><br><span class="line"></span><br><span class="line">    print(<span class="string">"list_s3_by_prefix return:"</span>, key_list)</span><br><span class="line">    <span class="keyword">return</span> key_list</span><br></pre></td></tr></table></figure><p><strong>文件拷贝到s3</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">s3_copy</span><span class="params">(bucket, from_key, to_key)</span>:</span></span><br><span class="line">    s3_bucket = boto3.resource(<span class="string">'s3'</span>).Bucket(bucket)</span><br><span class="line">    copy_source = &#123;</span><br><span class="line">        <span class="string">'Bucket'</span>: bucket,</span><br><span class="line">        <span class="string">'Key'</span>: from_key</span><br><span class="line">    &#125;</span><br><span class="line">    s3_bucket.copy(copy_source, to_key)</span><br><span class="line">    print(<span class="string">"copied s3://&#123;&#125;/&#123;&#125; to s3://&#123;&#125;/&#123;&#125;"</span>.format(bucket, from_key, bucket, to_key))</span><br></pre></td></tr></table></figure><p><strong>文件同步到本地</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">sync_s3</span><span class="params">(file_name_list, s3_folder, local_folder)</span>:</span></span><br><span class="line">    <span class="keyword">for</span> f <span class="keyword">in</span> file_name_list:</span><br><span class="line">        print(<span class="string">"file preparation: download src key &#123;&#125; to dst key &#123;&#125;"</span>.format(os.path.join(</span><br><span class="line">            s3_folder, f), os.path.join(local_folder, f)))</span><br><span class="line">        s3client.download_file(bucket, os.path.join(</span><br><span class="line">            s3_folder, f), os.path.join(local_folder, f))</span><br></pre></td></tr></table></figure><p><strong>上传单个文件</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">write_to_s3</span><span class="params">(filename, bucket, key)</span>:</span></span><br><span class="line">    print(<span class="string">"upload s3://&#123;&#125;/&#123;&#125;"</span>.format(bucket, key))</span><br><span class="line">    <span class="keyword">with</span> open(filename, <span class="string">'rb'</span>) <span class="keyword">as</span> f:  <span class="comment"># Read in binary mode</span></span><br><span class="line">        <span class="comment"># return s3client.upload_fileobj(f, bucket, key)</span></span><br><span class="line">        <span class="keyword">return</span> s3client.put_object(</span><br><span class="line">            ACL=<span class="string">'bucket-owner-full-control'</span>,</span><br><span class="line">            Bucket=bucket,</span><br><span class="line">            Key=key,</span><br><span class="line">            Body=f</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;&lt;strong&gt;文件排序&lt;/strong&gt;&lt;/p&gt;
&lt;fi
        
      
    
    </summary>
    
    
      <category term="编程" scheme="http://yoursite.com/categories/%E7%BC%96%E7%A8%8B/"/>
    
    
      <category term="aws" scheme="http://yoursite.com/tags/aws/"/>
    
      <category term="Linux" scheme="http://yoursite.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Pycharm远程调试服务器代码</title>
    <link href="http://yoursite.com/2021/10/09/PycharmCodeRemoteCode/"/>
    <id>http://yoursite.com/2021/10/09/PycharmCodeRemoteCode/</id>
    <published>2021-10-09T16:00:00.000Z</published>
    <updated>2021-10-09T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>Pycharm是非常方便的非常强大的IDE编程工具，那么我们能不能使用Pycharm进行服务器代码的开发与调试。</p></blockquote><p>Pycharm 远程调试服务器代码，这里使用的方法是先将远程服务器的代码目录挂载到本地，再通过Pycharm调用远程python解析器进行编程。最后实现操作服务器代码就想操作本地代码进行调试一样。这样子既可以利用远程服务器强大的计算能力，也可以像编程本地代码这么方便的进行编程。实现效果</p><p>放图TODO</p><p>因此一共需要通过3个步骤完成：</p><ul><li><p>第一个步骤，在远程服务器上确定代码文件夹</p></li><li><p>第二个步骤，挂载远程代码文件夹目录到本地；</p></li><li><p>第三个步骤，通过Pycharm远程调用python解析器进行编程；</p></li></ul><h2 id="代码文件夹确定"><a href="#代码文件夹确定" class="headerlink" title="代码文件夹确定"></a>代码文件夹确定</h2><p>我这里选择了一台Centos服务器，因为Linux操作系统默认是安装了ssh服务器，如果是Windows则需要手动安装<code>ssh-server</code>。</p><p>这里在home目录下创建了<code>remote_dir</code>作为远程代码文件夹</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir &#x2F;home&#x2F;remote_dir</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20211009233513922.png" alt="image-20211009233513922"></p><p>可以看到文件夹已经创建成功了。目标路径<code>/home/remote_dir</code></p><h1 id="挂载目录"><a href="#挂载目录" class="headerlink" title="挂载目录"></a>挂载目录</h1><p>挂载远程代码文件夹的方法有很多，常见的有：</p><ul><li>通过rclone进行挂载；</li><li>通过第三方图形化工具，例如RaiDrive;</li></ul><p>这篇文章，讲述通过RaiDrive进行挂载，因为是在Windows操作系统下进行的，因此图形化比较方便。</p><h2 id="下载RaiDrive"><a href="#下载RaiDrive" class="headerlink" title="下载RaiDrive"></a><strong>下载RaiDrive</strong></h2><p>进入RaiDrive官网:<a href="https://www.raidrive.com/" target="_blank" rel="noopener">https://www.raidrive.com/</a>，下载安装包。</p><p>安装完毕，如图所示</p><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20211009232513414.png" alt="image-20211009232513414"></p><h2 id="挂载远程目录"><a href="#挂载远程目录" class="headerlink" title="挂载远程目录"></a>挂载远程目录</h2><p>这里为了安全起见，没有选择密码作为登录凭证，而是选择了密钥登陆。</p><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20211009234012939.png" alt="image-20211009234012939"></p><p>填写完毕之后点击OK即可。</p><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20211009234059552.png" alt="image-20211009234059552"></p><p>就会显示已经连接上了。在文件驱动器查看，发现虚拟文件盘已经挂载上了。</p><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20211009234144469.png" alt="image-20211009234144469"></p><p><strong>测试挂载</strong></p><p>这里在虚拟文件夹中创建一个文件<code>test_file.txt</code>，发现已经在远程服务器创建成功。</p><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20211009234328798.png" alt="image-20211009234328798"></p><h1 id="Pycharm调用远程python"><a href="#Pycharm调用远程python" class="headerlink" title="Pycharm调用远程python"></a>Pycharm调用远程python</h1><p>这里pycharm 创建一个远程的python解析器源，这样子就可以了。</p><p>File-&gt;setting-&gt;python interpreter -&gt;add-&gt;ssh interpreter</p><p><img src="C:/Users/ECCOM/AppData/Roaming/Typora/typora-user-images/image-20211009234828661.png" alt="image-20211009234828661"></p><p>这样子到了创建远程python解析器的界面了。填入对应的内容即可。选择主机与用户名</p><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20211009235006684.png" alt=""></p><p>这里我服务器设置的是密钥登陆，如果是密码登录则选择密码即可。</p><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20211009235133329.png" alt="image-20211009235133329"></p><p>选择服务器的python解析器，因为一个服务器上可以有多个python解析器，因此需要手动选择python解析器。</p><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20211009235439812.png" alt="image-20211009235439812"></p><p>已经设置成功</p><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20211009235520338.png" alt="image-20211009235520338"></p><p>这里测试一下在pycharm操作这个解析器，安装包能否安装成功。</p><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20211009235645416.png" alt="image-20211009235645416"></p><p>在服务器上查看，发现安装成功。因此可以得出结论，在本地pycharm操作远程python解析器就想在本地pycharm操作本地python解析器一样方便。</p><p><img src="C:/Users/ECCOM/AppData/Roaming/Typora/typora-user-images/image-20211009235713046.png" alt="image-20211009235713046"></p><h2 id="pycharm创建项目"><a href="#pycharm创建项目" class="headerlink" title="pycharm创建项目"></a>pycharm创建项目</h2><p>这里在挂载的虚拟盘中创建项目，使用的是远程的python解析器。</p>]]></content>
    
    <summary type="html">
    
      
      
        
        
          &lt;blockquote&gt;
&lt;p&gt;Pycharm是非常方便的非常强
        
      
    
    </summary>
    
    
      <category term="编程" scheme="http://yoursite.com/categories/%E7%BC%96%E7%A8%8B/"/>
    
    
      <category term="aws" scheme="http://yoursite.com/tags/aws/"/>
    
      <category term="Linux" scheme="http://yoursite.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>webdav服务设置</title>
    <link href="http://yoursite.com/2021/10/09/webdavSercieSetting/"/>
    <id>http://yoursite.com/2021/10/09/webdavSercieSetting/</id>
    <published>2021-10-09T16:00:00.000Z</published>
    <updated>2021-10-13T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前期准备"><a href="#前期准备" class="headerlink" title="前期准备"></a>前期准备</h1><p><strong>安装软件</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">yum install epel-release</span><br><span class="line">yum update -y</span><br><span class="line">yum install httpd</span><br></pre></td></tr></table></figure><p><strong>设置开机自启</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl enable httpd</span><br></pre></td></tr></table></figure><p><strong>启动httpd</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl start httpd</span><br></pre></td></tr></table></figure><p><strong>检测是否支持dav模块</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">httpd -M | grep fs</span><br></pre></td></tr></table></figure><p>显示结果</p><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20211014141116146.png" alt="image-20211014141116146"></p><h2 id="开始"><a href="#开始" class="headerlink" title="开始"></a>开始</h2><p><strong>创建目录</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir &#x2F;var&#x2F;www&#x2F;html&#x2F;webdav</span><br><span class="line">chown apache:apache &#x2F;var&#x2F;www&#x2F;html&#x2F;webdav</span><br></pre></td></tr></table></figure><p><strong>设置密码</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">htpasswd -c &#x2F;etc&#x2F;httpd&#x2F;.htpasswd webdav</span><br><span class="line">wjshuai</span><br></pre></td></tr></table></figure><p><strong>密码文件设置权限</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">chown root:apache &#x2F;etc&#x2F;httpd&#x2F;.htpasswd</span><br><span class="line">chmod 640 &#x2F;etc&#x2F;httpd&#x2F;.htpasswd</span><br></pre></td></tr></table></figure><h1 id="创建配置文件"><a href="#创建配置文件" class="headerlink" title="创建配置文件"></a><strong>创建配置文件</strong></h1><p>这里创建http的虚拟主机配置文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;etc&#x2F;httpd&#x2F;conf.d&#x2F;webdav.conf</span><br></pre></td></tr></table></figure><p>内容设置</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">DavLockDB &#x2F;var&#x2F;www&#x2F;html&#x2F;DavLock</span><br><span class="line">&lt;VirtualHost *:80&gt;</span><br><span class="line">        ServerAdmin xxy@ntbaobei.com</span><br><span class="line">        DocumentRoot &#x2F;var&#x2F;www&#x2F;html&#x2F;webdav&#x2F;</span><br><span class="line">    ErrorLog &#x2F;var&#x2F;log&#x2F;httpd&#x2F;error.log</span><br><span class="line">    CustomLog &#x2F;var&#x2F;log&#x2F;httpd&#x2F;access.log combined</span><br><span class="line">        Alias &#x2F;webdav &#x2F;var&#x2F;www&#x2F;html&#x2F;webdav</span><br><span class="line">        &lt;Directory &#x2F;var&#x2F;www&#x2F;html&#x2F;webdav&gt;</span><br><span class="line">            DAV On</span><br><span class="line">            AuthType Basic</span><br><span class="line">            AuthName &quot;webdav&quot;</span><br><span class="line">#           AddDefaultCharset utf-8</span><br><span class="line">            IndexOptions Charset&#x3D;utf-8</span><br><span class="line">            AuthUserFile &#x2F;etc&#x2F;httpd&#x2F;.htpasswd</span><br><span class="line">            Require valid-user</span><br><span class="line">        &lt;&#x2F;Directory&gt;</span><br><span class="line">&lt;&#x2F;VirtualHost&gt;</span><br></pre></td></tr></table></figure><p><strong>重启</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart httpd</span><br></pre></td></tr></table></figure><p>设置Selinux</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">setsebool -P httpd_unified 1</span><br></pre></td></tr></table></figure><p>启动即可。</p>]]></content>
    
    <summary type="html">
    
      
      
        
        
          &lt;h1 id=&quot;前期准备&quot;&gt;&lt;a href=&quot;#前期准备&quot;
        
      
    
    </summary>
    
    
      <category term="技术" scheme="http://yoursite.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="Linux" scheme="http://yoursite.com/tags/Linux/"/>
    
      <category term="webdav" scheme="http://yoursite.com/tags/webdav/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yoursite.com/2021/09/12/hello-world/"/>
    <id>http://yoursite.com/2021/09/12/hello-world/</id>
    <published>2021-09-12T16:00:00.000Z</published>
    <updated>2021-09-12T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p><p><img src="C:%5CUsers%5CAdministrator%5CDesktop%5Cmyblog%5Cmyblog%5Csource_posts~%5Cimg%5Cimage-20210913045736937.png" alt="image-20210913045736937"></p><p>测试</p><p><img src="img/image-20210913045746655.png" alt="image-20210913045746655"></p>]]></content>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;Welcome to &lt;a
        
      
    
    </summary>
    
    
      <category term="helloworld" scheme="http://yoursite.com/categories/helloworld/"/>
    
    
  </entry>
  
  <entry>
    <title>如何使用docsify编写文档</title>
    <link href="http://yoursite.com/2021/09/12/howtousedocsify/"/>
    <id>http://yoursite.com/2021/09/12/howtousedocsify/</id>
    <published>2021-09-12T16:00:00.000Z</published>
    <updated>2021-09-12T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><h2 id="目录说明"><a href="#目录说明" class="headerlink" title="目录说明"></a>目录说明</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">.</span><br><span class="line">|-- README.md</span><br><span class="line">|-- _coverpage.md</span><br><span class="line">|-- _sidebar.md</span><br><span class="line">|-- index.html</span><br><span class="line">|-- _media</span><br><span class="line">|   |-- Linux.ico</span><br><span class="line">|   &#96;-- linux-1.svg</span><br></pre></td></tr></table></figure><p>从这个目录可以看出这个项目只需要几个<strong>md</strong>文件与一个<strong>html</strong>文件可以生产一个手册类项目，还是很方便的。</p><h1 id="Quickly-Start"><a href="#Quickly-Start" class="headerlink" title="Quickly Start"></a><strong>Quickly Start</strong></h1><h2 id="准备MD手册文档"><a href="#准备MD手册文档" class="headerlink" title="准备MD手册文档"></a>准备MD手册文档</h2><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20210913155432399.png" alt="image-20210913155432399">这里选择<strong>ansible practise</strong></p><h2 id="初始化docsify"><a href="#初始化docsify" class="headerlink" title="初始化docsify"></a>初始化docsify</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">touch ansiblepractise &amp;&amp; cd ansiblepractise</span><br><span class="line">docsify init .&#x2F;</span><br></pre></td></tr></table></figure><h2 id="复制手册"><a href="#复制手册" class="headerlink" title="复制手册"></a>复制手册</h2><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20210913163538554.png" alt="image-20210913163538554"></p><h2 id="自动生成目录"><a href="#自动生成目录" class="headerlink" title="自动生成目录"></a>自动生成目录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">工具：https:&#x2F;&#x2F;github.com&#x2F;xxxxue&#x2F;Docsify-Build-Sidebar&#x2F;</span><br><span class="line">修改工具配置文件</span><br><span class="line">&#123;</span><br><span class="line">  &quot;HomePath&quot;: &quot;xxx\ansiblepractise&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>运行工具</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">BuildSidebar&gt;DocsifyBuildSidebar.exe</span><br></pre></td></tr></table></figure><h2 id="准备插件"><a href="#准备插件" class="headerlink" title="准备插件"></a><strong>准备插件</strong></h2><p><strong>docsify</strong>插件只要修改<code>index.html</code>文件即可。修改<code>&lt;title&gt;</code>内容即可。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- index.html --&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"IE=edge,chrome=1"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width,initial-scale=1"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>修改<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"icon"</span> <span class="attr">href</span>=<span class="string">"_media/Dakirby309-Simply-Styled-OS-Linux.ico"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"//cdn.jsdelivr.net/npm/docsify@4/themes/vue.css"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 文件夹样式 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"//cdn.jsdelivr.net/npm/docsify-sidebar-collapse/dist/sidebar-folder.min.css"</span> /&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 箭头样式 --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- &lt;link rel="stylesheet" href="//cdn.jsdelivr.net/npm/docsify-sidebar-collapse/dist/sidebar.min.css" /&gt; --&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span>  </span><br><span class="line"><span class="javascript">      <span class="built_in">window</span>.$docsify = &#123;</span></span><br><span class="line"><span class="actionscript">        name: <span class="string">"Linux目录笔记"</span>,</span></span><br><span class="line"><span class="actionscript">        <span class="comment">// 侧边栏文档目录</span></span></span><br><span class="line"><span class="actionscript">        loadSidebar: <span class="literal">true</span>,</span></span><br><span class="line"></span><br><span class="line">        subMaxLevel: 2,</span><br><span class="line">        alias: &#123;</span><br><span class="line"><span class="actionscript">          <span class="string">"/.*/_sidebar.md"</span>: <span class="string">"/_sidebar.md"</span>,</span></span><br><span class="line">        &#125;,</span><br><span class="line"><span class="actionscript">        <span class="comment">// sidebarDisplayLevel: 1, // set sidebar display level</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">// 跳转后自动到顶部</span></span></span><br><span class="line"><span class="actionscript">        auto2top: <span class="literal">true</span>,</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">        coverpage: <span class="literal">true</span>,</span></span><br><span class="line"><span class="actionscript">        <span class="comment">// PLUGINS</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">// ----------------------------------------------------------------</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">// 页面右侧toc</span></span></span><br><span class="line">        toc: &#123;</span><br><span class="line">          tocMaxLevel: 2,</span><br><span class="line"><span class="actionscript">          target: <span class="string">"h2, h3, h4, h5, h6"</span>,</span></span><br><span class="line">        &#125;,</span><br><span class="line"></span><br><span class="line"><span class="actionscript">        <span class="comment">// 全文搜索</span></span></span><br><span class="line">        search: &#123;</span><br><span class="line">          depth: 6,</span><br><span class="line"><span class="actionscript">          noData: <span class="string">"没有搜到!"</span>,</span></span><br><span class="line"><span class="actionscript">          placeholder: <span class="string">"搜索..."</span>,</span></span><br><span class="line"><span class="actionscript">          <span class="comment">// 避免搜索索引冲突,同一域下的多个网站之间</span></span></span><br><span class="line"><span class="actionscript">          <span class="keyword">namespace</span>: <span class="string">"website-1"</span>,</span></span><br><span class="line">        &#125;,</span><br><span class="line"><span class="actionscript">        <span class="comment">// 底部导航</span></span></span><br><span class="line">        pagination: &#123;</span><br><span class="line"><span class="actionscript">          previousText: <span class="string">"上一页"</span>,</span></span><br><span class="line"><span class="actionscript">          nextText: <span class="string">"下一页"</span>,</span></span><br><span class="line"><span class="actionscript">          crossChapter: <span class="literal">true</span>,</span></span><br><span class="line"><span class="actionscript">          crossChapterText: <span class="literal">true</span>,</span></span><br><span class="line">        &#125;,</span><br><span class="line"><span class="actionscript">        <span class="comment">// 字数统计</span></span></span><br><span class="line">        count: &#123;</span><br><span class="line"><span class="actionscript">          countable: <span class="literal">true</span>,</span></span><br><span class="line"><span class="actionscript">          position: <span class="string">"top"</span>,</span></span><br><span class="line"><span class="actionscript">          margin: <span class="string">"10px"</span>,</span></span><br><span class="line"><span class="actionscript">          float: <span class="string">"right"</span>,</span></span><br><span class="line"><span class="actionscript">          fontsize: <span class="string">"0.9em"</span>,</span></span><br><span class="line"><span class="actionscript">          color: <span class="string">"red"</span>,</span></span><br><span class="line"><span class="actionscript">          language: <span class="string">"chinese"</span>,</span></span><br><span class="line">          localization: &#123;</span><br><span class="line"><span class="actionscript">            words: <span class="string">""</span>,</span></span><br><span class="line"><span class="actionscript">            minute: <span class="string">""</span>,</span></span><br><span class="line">          &#125;,</span><br><span class="line"><span class="actionscript">          isExpected: <span class="literal">true</span>,</span></span><br><span class="line">        &#125;,</span><br><span class="line">      &#125;;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- docsify --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.jsdelivr.net/npm/docsify@4/lib/docsify.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span>  </span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 代码高亮  https://cdn.jsdelivr.net/npm/prismjs@1/components/ --&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"//cdn.jsdelivr.net/npm/prismjs@1/components/prism-bash.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"//cdn.jsdelivr.net/npm/prismjs@1/components/prism-python.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"//cdn.jsdelivr.net/npm/prismjs@1/components/prism-cmake.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"//cdn.jsdelivr.net/npm/prismjs@1/components/prism-java.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"//cdn.jsdelivr.net/npm/prismjs@1/components/prism-csharp.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span>     </span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"//cdn.jsdelivr.net/npm/prismjs@1/components/prism-docker.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"//cdn.jsdelivr.net/npm/prismjs@1/components/prism-powershell.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span>  </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 多tab支持 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.jsdelivr.net/npm/docsify-tabs@1/dist/docsify-tabs.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 代码复制 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.jsdelivr.net/npm/docsify-copy-code@2/dist/docsify-copy-code.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 底部 上一页下一页 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.jsdelivr.net/npm/docsify-pagination@2/dist/docsify-pagination.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.jsdelivr.net/npm/docsify@4/lib/plugins/external-script.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.jsdelivr.net/npm/docsify@4/lib/plugins/ga.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 全文搜索 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.jsdelivr.net/npm/docsify@4/lib/plugins/search.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 图片放大缩小 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.jsdelivr.net/npm/docsify@4/lib/plugins/zoom-image.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 字数统计 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.jsdelivr.net/npm/docsify-count@latest/dist/countable.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 侧边栏目录折叠 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.jsdelivr.net/npm/docsify-sidebar-collapse/dist/docsify-sidebar-collapse.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 页面右侧 TOC --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.jsdelivr.net/npm/docsify-plugin-toc@1.1.0/dist/docsify-plugin-toc.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">      <span class="comment">&lt;!-- emoji --&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"//cdn.jsdelivr.net/npm/docsify/lib/plugins/emoji.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docsify serve</span><br></pre></td></tr></table></figure><p>运行之后，可以看到结果</p><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblog/image-20210913164332348.png" alt="image-20210913164332348"></p><p>但很明显还是比较凌乱的，所以需要进行修改目录文件，也就是<code>_sidebar.md</code></p><p>可以一边运行，一边修改，从而更完善。</p><h2 id="准备首页"><a href="#准备首页" class="headerlink" title="准备首页"></a>准备首页</h2><p>对这个文件进行修改<code>_coverpage.md</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- _coverpage.md --&gt;</span><br><span class="line"></span><br><span class="line">&lt;img src&#x3D;&quot;_media&#x2F;ansible.svg&quot; alt&#x3D;&quot;logo&quot; style&#x3D;&quot;zoom: 15%;&quot; &#x2F;&gt;</span><br><span class="line"></span><br><span class="line"># Linux</span><br><span class="line"></span><br><span class="line">&gt; Ansible Practise</span><br><span class="line"></span><br><span class="line">- 记录了我学习Ansible Practise的笔记</span><br><span class="line">- 2021年&#x2F;09月&#x2F;13日</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[GitHub](https:&#x2F;&#x2F;github.com&#x2F;jsabook&#x2F;testdocsify)</span><br><span class="line">[Get Started](#SHELL)</span><br></pre></td></tr></table></figure><p>增加SVG图标，<code>_coverpage.md</code>中使用svg文件。因此只要放在_mediａ目录下即可。</p><p>因此，特殊文件都被修改了</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#96;-- docs</span><br><span class="line">    |-- _coverpage.md</span><br><span class="line">    |-- _sidebar.md</span><br><span class="line">    |-- index.html</span><br></pre></td></tr></table></figure><p>添加<strong>icon</strong></p><p>做法一样，也是将图标放置于icon。</p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#96;-- docs</span><br><span class="line">    |-- _coverpage.md</span><br><span class="line">    |-- _sidebar.md</span><br><span class="line">    |-- index.html</span><br></pre></td></tr></table></figure><p>图标文件放置于这个目录下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">|-- _media</span><br><span class="line">|   |-- Linux.ico</span><br><span class="line">|   &#96;-- linux-1.svg</span><br></pre></td></tr></table></figure><p><strong>如何改Icon？</strong>修改<code>index.html</code>文件</p><p><strong>如何修改首页？</strong>修改<code>_coverpage.md</code>文件</p><p><strong>插件如何增加？</strong>增加<code>index.html</code></p>]]></content>
    
    <summary type="html">
    
      
      
        
        
          &lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot;
        
      
    
    </summary>
    
    
      <category term="技术" scheme="http://yoursite.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="Linux" scheme="http://yoursite.com/tags/Linux/"/>
    
      <category term="文档编写" scheme="http://yoursite.com/tags/%E6%96%87%E6%A1%A3%E7%BC%96%E5%86%99/"/>
    
  </entry>
  
  <entry>
    <title>使用Github_action实现本地无需安装hexo</title>
    <link href="http://yoursite.com/2021/09/12/useTheGithub_action/"/>
    <id>http://yoursite.com/2021/09/12/useTheGithub_action/</id>
    <published>2021-09-12T16:00:00.000Z</published>
    <updated>2021-09-12T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>这里使用 Github Action实现的目的，就是本地无需安装<code>Hexo</code></p></blockquote><h1 id="前景"><a href="#前景" class="headerlink" title="前景"></a>前景</h1><h2 id="目录说明"><a href="#目录说明" class="headerlink" title="目录说明"></a>目录说明</h2><p>因为我们需要使用hexo去进行render博客网站，因此肯定需要<code>source</code>与<code>themes</code>。</p><p>前者用来存储md静态文章，后者用来存储主题文件.整个项目文件，如下所示。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">.</span><br><span class="line">|-- <span class="built_in">source</span></span><br><span class="line">|   |-- _posts</span><br><span class="line">`-- themes</span><br><span class="line">    `-- next</span><br></pre></td></tr></table></figure><p>但是，单单如果只有两个文件夹，是很难进行hexo渲染的，因此，这里还需要额外的一些文件来帮助渲染</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">.</span><br><span class="line">|-- _config.yml <span class="comment"># hexo的一些配置信息，例如更换主题</span></span><br><span class="line">|-- package.json <span class="comment"># npm的一些软件包</span></span><br><span class="line">|-- <span class="built_in">source</span></span><br><span class="line">|   |-- _posts</span><br><span class="line">|   |-- about.md <span class="comment"># 插件页</span></span><br><span class="line">|   |-- avatar.png <span class="comment"># 插件页</span></span><br><span class="line">|   |-- favicon.ico <span class="comment"># 插件页</span></span><br><span class="line">|   `-- robots.txt</span><br><span class="line">`-- themes</span><br><span class="line">    `-- next</span><br></pre></td></tr></table></figure><p>后面的这三个插件页都是因为我选择的这个<code>next</code>主题所需要的。这里可以查看<code>_config.yml</code>内容，这里是我的配置信息，可以按照自己的需求进行更改。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Hexo Configuration</span></span><br><span class="line"><span class="comment">## Docs: https://hexo.io/docs/configuration.html</span></span><br><span class="line"><span class="comment">## Source: https://github.com/hexojs/hexo/</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Site</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">Qier's</span> <span class="string">blog</span></span><br><span class="line"><span class="attr">subtitle:</span></span><br><span class="line"><span class="attr">description:</span></span><br><span class="line"><span class="attr">author:</span> <span class="string">qier</span></span><br><span class="line"><span class="attr">language:</span> <span class="string">zh-CN</span></span><br><span class="line"><span class="attr">timezone:</span> <span class="string">Asia/Shanghai</span></span><br><span class="line"><span class="attr">keywords:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">Docker</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">Linux</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Directory</span></span><br><span class="line"><span class="attr">source_dir:</span> <span class="string">source</span></span><br><span class="line"><span class="attr">public_dir:</span> <span class="string">public</span></span><br><span class="line"><span class="attr">tag_dir:</span> <span class="string">tags</span></span><br><span class="line"><span class="attr">archive_dir:</span> <span class="string">archives</span></span><br><span class="line"><span class="attr">category_dir:</span> <span class="string">categories</span></span><br><span class="line"><span class="attr">code_dir:</span> <span class="string">downloads/code</span></span><br><span class="line"><span class="attr">i18n_dir:</span> <span class="string">:lang</span></span><br><span class="line"><span class="attr">skip_render:</span> <span class="string">source/draft</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Writing</span></span><br><span class="line"><span class="attr">new_post_name:</span> <span class="string">:title.md</span> <span class="comment"># File name of new posts</span></span><br><span class="line"><span class="attr">default_layout:</span> <span class="string">post</span></span><br><span class="line"><span class="attr">titlecase:</span> <span class="literal">false</span> <span class="comment"># Transform title into titlecase</span></span><br><span class="line"><span class="attr">external_link:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span> <span class="comment"># Open external links in new tab</span></span><br><span class="line">  <span class="attr">field:</span> <span class="string">site</span> <span class="comment"># Apply to the whole site</span></span><br><span class="line">  <span class="attr">exclude:</span> <span class="string">''</span></span><br><span class="line"><span class="attr">filename_case:</span> <span class="number">0</span></span><br><span class="line"><span class="attr">render_drafts:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">post_asset_folder:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">relative_link:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">future:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">highlight:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">line_number:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">auto_detect:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">tab_replace:</span> <span class="string">''</span></span><br><span class="line">  <span class="attr">wrap:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">hljs:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Home page setting</span></span><br><span class="line"><span class="comment"># path: Root path for your blogs index page. (default = '')</span></span><br><span class="line"><span class="comment"># per_page: Posts displayed per page. (0 = disable pagination)</span></span><br><span class="line"><span class="comment"># order_by: Posts order. (Order by date descending by default)</span></span><br><span class="line"><span class="attr">index_generator:</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">''</span></span><br><span class="line">  <span class="attr">per_page:</span> <span class="number">128</span></span><br><span class="line">  <span class="attr">order_by:</span> <span class="string">-date</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Category &amp; Tag</span></span><br><span class="line"><span class="attr">default_category:</span> <span class="string">uncategorized</span></span><br><span class="line"><span class="attr">category_map:</span></span><br><span class="line"><span class="attr">tag_map:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Metadata elements</span></span><br><span class="line"><span class="comment">## https://developer.mozilla.org/en-US/docs/Web/HTML/Element/meta</span></span><br><span class="line"><span class="attr">meta_generator:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Date / Time format</span></span><br><span class="line"><span class="comment">## Hexo uses Moment.js to parse and display date</span></span><br><span class="line"><span class="comment">## You can customize the date format as defined in</span></span><br><span class="line"><span class="comment">## http://momentjs.com/docs/#/displaying/format/</span></span><br><span class="line"><span class="attr">date_format:</span> <span class="string">YYYY-MM-DD</span></span><br><span class="line"><span class="attr">time_format:</span></span><br><span class="line"><span class="comment">## Use post's date for updated date unless set in front-matter</span></span><br><span class="line"><span class="attr">use_date_for_updated:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Pagination</span></span><br><span class="line"><span class="comment">## Set per_page to 0 to disable pagination</span></span><br><span class="line"><span class="attr">per_page:</span> <span class="number">128</span></span><br><span class="line"><span class="attr">pagination_dir:</span> <span class="string">page</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Include / Exclude file(s)</span></span><br><span class="line"><span class="comment">## include:/exclude: options only apply to the 'source/' folder</span></span><br><span class="line"><span class="attr">include:</span></span><br><span class="line"><span class="attr">exclude:</span></span><br><span class="line"><span class="attr">ignore:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Extensions</span></span><br><span class="line"><span class="comment">## Plugins: https://hexo.io/plugins/</span></span><br><span class="line"><span class="comment">## Themes: https://hexo.io/themes/</span></span><br><span class="line"><span class="attr">theme:</span> <span class="string">next</span></span><br><span class="line"></span><br><span class="line"><span class="attr">feed:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">atom</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">atom.xml</span></span><br><span class="line">  <span class="attr">limit:</span> <span class="number">10</span></span><br><span class="line">  <span class="attr">hub:</span></span><br><span class="line">  <span class="attr">content:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">content_limit:</span> <span class="number">32</span></span><br><span class="line">  <span class="attr">content_limit_delim:</span> <span class="string">' '</span></span><br><span class="line">  <span class="attr">order_by:</span> <span class="string">-date</span></span><br><span class="line">  <span class="attr">icon:</span> <span class="string">icon.png</span></span><br><span class="line"></span><br><span class="line"><span class="attr">search:</span></span><br><span class="line">    <span class="attr">path:</span> <span class="string">search.xml</span></span><br><span class="line">    <span class="attr">field:</span> <span class="string">post</span></span><br><span class="line">    <span class="attr">format:</span> <span class="string">html</span></span><br><span class="line">    <span class="attr">limit:</span> <span class="number">10000</span></span><br><span class="line"></span><br><span class="line"><span class="attr">sitemap:</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">sitemap.xml</span></span><br><span class="line"><span class="comment"># Deployment</span></span><br><span class="line"><span class="comment">## Docs: https://hexo.io/docs/deployment.html</span></span><br><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">''</span></span><br></pre></td></tr></table></figure><p><strong>github action</strong>需要的配置文件.因为这里使用了github action进行自动devops，因此需要进行<code>workflows</code>的设置</p><p>这里选择了文件</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">name:</span> <span class="string">Build</span> <span class="string">hexo</span> <span class="string">website</span></span><br><span class="line"><span class="attr">on:</span> <span class="string">push</span></span><br><span class="line"><span class="attr">jobs:</span></span><br><span class="line">  <span class="attr">hexo-build:</span></span><br><span class="line">    <span class="attr">runs-on:</span> <span class="string">ubuntu-20.04</span></span><br><span class="line">    <span class="attr">steps:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Clone</span> <span class="string">blog</span> <span class="string">source</span> <span class="string">repository</span></span><br><span class="line">        <span class="attr">uses:</span> <span class="string">actions/checkout@v2</span></span><br><span class="line">        <span class="attr">with:</span></span><br><span class="line">          <span class="attr">path:</span> <span class="string">hexo</span></span><br><span class="line"></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Checkout</span> <span class="string">blog</span> <span class="string">web</span> <span class="string">site</span> <span class="string">repo</span></span><br><span class="line">        <span class="attr">uses:</span> <span class="string">actions/checkout@v2</span></span><br><span class="line">        <span class="attr">with:</span></span><br><span class="line">          <span class="attr">token:</span> <span class="string">$&#123;&#123;</span> <span class="string">secrets.TOKEN_GITHUB</span> <span class="string">&#125;&#125;</span></span><br><span class="line">          <span class="attr">fetch-depth:</span> <span class="number">0</span></span><br><span class="line">          <span class="attr">repository:</span> <span class="string">$&#123;&#123;</span> <span class="string">github.repository_owner</span> <span class="string">&#125;&#125;/jsabook.github.io</span> <span class="comment"># 需要更改成自己的hexo静态网站项目地址</span></span><br><span class="line">          <span class="attr">path:</span> <span class="string">site</span></span><br><span class="line"></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Config</span> <span class="string">git</span> <span class="string">user</span> <span class="string">and</span> <span class="string">user.email</span></span><br><span class="line">        <span class="attr">run:</span> <span class="string">|</span></span><br><span class="line">          <span class="string">cd</span> <span class="string">$&#123;GITHUB_WORKSPACE&#125;/site</span> <span class="string">&amp;&amp;</span> <span class="string">git</span> <span class="string">config</span> <span class="string">user.name</span> <span class="string">github-actions</span></span><br><span class="line">          <span class="string">cd</span> <span class="string">$&#123;GITHUB_WORKSPACE&#125;/site</span> <span class="string">&amp;&amp;</span> <span class="string">git</span> <span class="string">config</span> <span class="string">user.email</span> <span class="string">wjshuaizfq@163.com</span> <span class="comment"># 自己的邮箱地址</span></span><br><span class="line"></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Init</span> <span class="string">hexo</span> <span class="string">env</span></span><br><span class="line">        <span class="attr">run:</span> <span class="string">|</span></span><br><span class="line">          <span class="string">sudo</span> <span class="string">apt</span> <span class="string">install</span> <span class="string">rename</span> <span class="string">-y</span> <span class="string">-qq</span></span><br><span class="line">          <span class="string">sudo</span> <span class="string">yarn</span> <span class="string">global</span> <span class="string">add</span> <span class="string">hexo-cli</span></span><br><span class="line">          <span class="string">cd</span> <span class="string">$&#123;GITHUB_WORKSPACE&#125;/hexo</span> <span class="string">&amp;&amp;</span> <span class="string">yarn</span> <span class="string">install</span></span><br><span class="line"></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Hexo</span> <span class="string">build</span></span><br><span class="line">        <span class="attr">run:</span> <span class="string">|</span></span><br><span class="line">          <span class="string">cd</span> <span class="string">$&#123;GITHUB_WORKSPACE&#125;/hexo/source/_posts</span> <span class="string">&amp;&amp;</span> <span class="string">rename</span> <span class="string">'s/([12]\d&#123;3&#125;-(0[1-9]|1[0-2])-(0[1-9]|[12]\d|3[01])-)//'</span> <span class="string">*.md</span></span><br><span class="line">          <span class="string">cd</span> <span class="string">$&#123;GITHUB_WORKSPACE&#125;/hexo</span> <span class="string">&amp;&amp;</span> <span class="string">hexo</span> <span class="string">clean</span> <span class="string">&amp;&amp;</span> <span class="string">hexo</span> <span class="string">g</span></span><br><span class="line">          <span class="string">cd</span> <span class="string">$&#123;GITHUB_WORKSPACE&#125;/hexo</span> <span class="string">&amp;&amp;</span> <span class="string">git</span> <span class="string">checkout</span> <span class="string">.</span></span><br><span class="line"></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Update</span> <span class="string">repo</span></span><br><span class="line">        <span class="attr">run:</span> <span class="string">|</span></span><br><span class="line">          <span class="string">cp</span> <span class="string">-rf</span> <span class="string">$&#123;GITHUB_WORKSPACE&#125;/hexo/public/*</span> <span class="string">$&#123;GITHUB_WORKSPACE&#125;/site</span></span><br><span class="line">          <span class="string">cd</span> <span class="string">$&#123;GITHUB_WORKSPACE&#125;/site</span> <span class="string">&amp;&amp;</span> <span class="string">git</span> <span class="string">add</span> <span class="string">.</span> <span class="string">&amp;&amp;</span> <span class="string">git</span> <span class="string">commit</span> <span class="string">-am</span> <span class="string">"Auto build by GitHub Actions $(date)"</span></span><br><span class="line">          <span class="string">cd</span> <span class="string">$&#123;GITHUB_WORKSPACE&#125;/site</span> <span class="string">&amp;&amp;</span> <span class="string">git</span> <span class="string">push</span> <span class="string">origin</span> <span class="string">-f</span></span><br></pre></td></tr></table></figure><p>经过上面的说明，这里就有了一个完善的项目目录</p><h1 id="操作指南"><a href="#操作指南" class="headerlink" title="操作指南"></a>操作指南</h1><h2 id="项目目录"><a href="#项目目录" class="headerlink" title="项目目录"></a>项目目录</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">.</span><br><span class="line">|-- .github</span><br><span class="line">|   `-- workflows</span><br><span class="line">|-- .gitignore</span><br><span class="line">|-- _config.yml</span><br><span class="line">|-- package.json</span><br><span class="line">|-- <span class="built_in">source</span></span><br><span class="line">|   |-- _data</span><br><span class="line">|   |-- _posts</span><br><span class="line">|   |-- about.md</span><br><span class="line">|   |-- avatar.png</span><br><span class="line">|   |-- favicon.ico</span><br><span class="line">|   `-- robots.txt</span><br><span class="line">`-- themes</span><br><span class="line">    `-- next</span><br></pre></td></tr></table></figure><h2 id="创建token"><a href="#创建token" class="headerlink" title="创建token"></a>创建<code>token</code></h2><p>选择<strong>setting</strong></p><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblogimage-20210913145330385.png" alt="image-20210913145330385"></p><p>选择<strong>Developer settings</strong></p><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblogimage-20210913145501698.png" alt="image-20210913145501698"></p><p>选择<strong>Personal access tokens</strong></p><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblogimage-20210913145613742.png" alt="image-20210913145613742"></p><p>创建一个token，设置有效期</p><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblogimage-20210913145720269.png" alt="image-20210913145720269"></p><p>复制<strong>token</strong>，这里复制的token在后面的项目中可以用到。</p><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblogimage-20210913145819402.png" alt="image-20210913145819402"></p><h2 id="创建项目"><a href="#创建项目" class="headerlink" title="创建项目"></a>创建项目</h2><p>需要创建两个项目地址，一个项目地址用来存储markdown静态文件。另外一个用来存储渲染之后的文章</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">存储静态文件：https:&#x2F;&#x2F;github.com&#x2F;jsabook&#x2F;blog</span><br><span class="line">存储渲染文章：https:&#x2F;&#x2F;github.com&#x2F;jsabook&#x2F;wjshuai.github.io</span><br></pre></td></tr></table></figure><p><strong>PS</strong>：存储渲染文章项目需要提前创建好<strong>main</strong>分支。</p><h3 id="使用token"><a href="#使用token" class="headerlink" title="使用token"></a>使用<strong>token</strong></h3><p>创建完毕之后需要将token加入到存储静态文件项目中。这里的Name需要写<code>TOKEN_GITHUB</code>,与<code>workflow</code>中的值<code>token: $</code>是一一对应的。</p><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblogimage-20210913150247198.png" alt="image-20210913150247198"></p><h2 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h2><p><strong>初始化github项目</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">mkdir blog &amp;&amp; cd blog</span><br><span class="line">echo &quot;# blog&quot; &gt;&gt; README.md</span><br><span class="line">git init</span><br><span class="line">git add README.md</span><br><span class="line">git commit -m &quot;first commit&quot;</span><br><span class="line">git branch -M main</span><br><span class="line">git remote add origin https:&#x2F;&#x2F;github.com&#x2F;jsabook&#x2F;blog.git</span><br><span class="line">git push -u origin main</span><br></pre></td></tr></table></figure><p>将下面的目录结构复制到本地初始化好的blog目录下面</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">.</span><br><span class="line">|-- .github</span><br><span class="line">|   &#96;-- workflows</span><br><span class="line">|-- .gitignore</span><br><span class="line">|-- _config.yml</span><br><span class="line">|-- package.json</span><br><span class="line">|-- source</span><br><span class="line">|   |-- _data</span><br><span class="line">|   |-- _posts</span><br><span class="line">|   |-- about.md</span><br><span class="line">|   |-- avatar.png</span><br><span class="line">|   |-- favicon.ico</span><br><span class="line">|   &#96;-- robots.txt</span><br><span class="line">&#96;-- themes</span><br><span class="line">    &#96;-- next</span><br></pre></td></tr></table></figure><p><strong>运行</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git add README.md</span><br><span class="line">git commit -m &quot;first article&quot;</span><br><span class="line">git push</span><br></pre></td></tr></table></figure><p>运行完毕之后，查看<code>actionS</code></p><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblogimage-20210913144736905.png" alt="image-20210913144736905"></p><p>我们可以看到<code>first article</code>这个<code>job</code>运行完毕</p><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblogimage-20210913144807797.png" alt="image-20210913144807797"></p><p><strong>运行结果</strong></p><p><img src="https://raw.githubusercontent.com/jsabook/githubPic/main/myblogimage-20210913150612256.png" alt="image-20210913150612256"></p>]]></content>
    
    <summary type="html">
    
      
      
        
        
          &lt;blockquote&gt;
&lt;p&gt;这里使用 Github
        
      
    
    </summary>
    
    
      <category term="技术" scheme="http://yoursite.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="架构" scheme="http://yoursite.com/tags/%E6%9E%B6%E6%9E%84/"/>
    
      <category term="博客" scheme="http://yoursite.com/tags/%E5%8D%9A%E5%AE%A2/"/>
    
  </entry>
  
</feed>
